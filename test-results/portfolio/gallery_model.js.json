{
  "results": {
    "amdProc": {
      "requires": [
        "jquery"
      ],
      "moduleName": "gallery_model",
      "AMD": true,
      "webPath": "/portfolio"
    }
  },
  "errors": {
    "thirdPartyFilter": [],
    "minFilter": [],
    "badCharactersProc": [
      {
        "id": "(error)",
        "raw": "Bad character(s) found.",
        "code": "wfBC",
        "evidence": "",
        "line": -1,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "Bad character(s) found: ''\\t''."
      }
    ],
    "amdFilter": [],
    "jsBeautifyProc": [],
    "jsDoccerProc": [
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'getTimeline'.",
        "code": "wfJD",
        "evidence": "function getTimeline(galleryData) {",
        "line": 39,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'getTimeline'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'initialize'.",
        "code": "wfJD",
        "evidence": "exports.initialize = function() {",
        "line": 64,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'initialize'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'getCategories'.",
        "code": "wfJD",
        "evidence": "function getCategories(categories, genres) {",
        "line": 70,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'getCategories'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'decodeHtml'.",
        "code": "wfJD",
        "evidence": "function decodeHtml(input) {",
        "line": 83,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'decodeHtml'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'byTime'.",
        "code": "wfJD",
        "evidence": "function byTime(b, a) {",
        "line": 88,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'byTime'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'getGenresForCategory'.",
        "code": "wfJD",
        "evidence": "function getGenresForCategory(categoryName, genres) {",
        "line": 99,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'getGenresForCategory'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'getGenres'.",
        "code": "wfJD",
        "evidence": "function getGenres(galleryData) {",
        "line": 118,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'getGenres'."
      }
    ],
    "jsDocNameFixerProc": [],
    "fixClassDeclarationsProc": [],
    "jsDoc3PrepProc": [],
    "trimProc": []
  },
  "outputDirectory": "test-output",
  "path": "test-source/portfolio/gallery_model.js",
  "folderPath": "test-source/portfolio",
  "fileName": "gallery_model.js",
  "packagePath": "/portfolio",
  "webPath": "/portfolio",
  "libFile": false,
  "min": false,
  "realName": "gallery_model",
  "name": "gallery_model",
  "camelName": "GalleryModel",
  "processedFilePath": "test-output/portfolio/gallery_model.js",
  "couldParseOriginalSource": true,
  "preprocessed": true,
  "jsDoccerProcData": {
    "lines": 132,
    "requires": [],
    "className": "n/a",
    "packagePath": "",
    "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source/portfolio",
    "uses_Y": false,
    "no_lib": true,
    "inferencedClassName": "n/a",
    "uses_$": false,
    "chars": 3506,
    "uses_YUI": false,
    "fields": [],
    "moduleName": "./gallery_model",
    "uses_console_log": false,
    "uses_backbone": false,
    "classes": {},
    "methods": [
      {
        "name": "update",
        "visibility": "public",
        "static": false,
        "lineNumber": 23,
        "memberOf": "exports",
        "doclet": "/**\n * Update.\n * @param observation  \n * @param data\n */",
        "args": [
          "observation",
          "data"
        ],
        "description": "\n Update.\n",
        "classDeclarationFlag": false,
        "line": "exports.update = function(observation, data) {",
        "originalJsDocDescription": {
          "params": [
            {
              "tag": "param",
              "line": 3,
              "lastLine": 3,
              "textStartsOnSameLine": true,
              "text": "observation"
            },
            {
              "tag": "param",
              "line": 4,
              "lastLine": -1,
              "textStartsOnSameLine": true,
              "text": "data\n"
            }
          ]
        }
      },
      {
        "name": "getTimeline",
        "visibility": "public",
        "static": false,
        "lineNumber": 39,
        "memberOf": "",
        "doclet": "/**\n * Get timeline.\n * @param galleryData\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "galleryData"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function getTimeline(galleryData) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "initialize",
        "visibility": "public",
        "static": false,
        "lineNumber": 64,
        "memberOf": "exports",
        "doclet": "/**\n * Initialize.\n */",
        "description": "\n Initialize.\n",
        "classDeclarationFlag": false,
        "line": "exports.initialize = function() {",
        "originalJsDocDescription": {}
      },
      {
        "name": "getCategories",
        "visibility": "public",
        "static": false,
        "lineNumber": 70,
        "memberOf": "",
        "doclet": "/**\n * Get categories.\n * @param categories\n * @param genres\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "categories",
          "genres"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function getCategories(categories, genres) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "decodeHtml",
        "visibility": "public",
        "static": false,
        "lineNumber": 83,
        "memberOf": "",
        "doclet": "/**\n * Decode html.\n * @param input\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "input"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function decodeHtml(input) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "byTime",
        "visibility": "public",
        "static": false,
        "lineNumber": 88,
        "memberOf": "",
        "doclet": "/**\n * By time.\n * @param b\n * @param a\n * @return {number}\n */",
        "args": [
          "b",
          "a"
        ],
        "description": "",
        "return": "{number}",
        "classDeclarationFlag": false,
        "line": "function byTime(b, a) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "getGenresForCategory",
        "visibility": "public",
        "static": false,
        "lineNumber": 99,
        "memberOf": "",
        "doclet": "/**\n * Get genres for category.\n * @param categoryName\n * @param genres\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "categoryName",
          "genres"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function getGenresForCategory(categoryName, genres) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "getGenres",
        "visibility": "public",
        "static": false,
        "lineNumber": 118,
        "memberOf": "",
        "doclet": "/**\n * Get genres.\n * @param galleryData\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "galleryData"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function getGenres(galleryData) {",
        "originalJsDocDescription": {}
      }
    ],
    "is_module": false,
    "uses_alert": false,
    "uses_y_log": false,
    "requiresRaw": [],
    "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source/portfolio",
    "fileName": "gallery_model.js",
    "strict": false
  },
  "possibleClassname": "",
  "testStubs": "\n",
  "couldParseProcessedSource": true,
  "corrupted": false,
  "numberOfLines": 156
}