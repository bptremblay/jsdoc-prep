{
  "results": {
    "amdProc": {
      "requires": [
        "column-and-block-layout-editor-path/constants"
      ],
      "moduleName": "parser",
      "AMD": true,
      "webPath": "/src/import",
      "convertedName": "parser",
      "min": false,
      "main": 0,
      "uses_$": true,
      "uses_Y": false,
      "uses_alert": false,
      "strict": false
    }
  },
  "errors": {
    "jsBeautifyProc": [],
    "jsDoccerProc": [
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'contentChildExclusionFilter'.",
        "code": "wfJD",
        "evidence": "contentChildExclusionFilter = function () {",
        "line": 36,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'contentChildExclusionFilter'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'childContentEditorExclusionFilter'.",
        "code": "wfJD",
        "evidence": "childContentEditorExclusionFilter = function () {",
        "line": 39,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'childContentEditorExclusionFilter'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'columnChildExclusionFilter'.",
        "code": "wfJD",
        "evidence": "columnChildExclusionFilter = function () {",
        "line": 42,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'columnChildExclusionFilter'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'columnExclusionFilter'.",
        "code": "wfJD",
        "evidence": "columnExclusionFilter = function () {",
        "line": 45,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'columnExclusionFilter'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'Parser'.",
        "code": "wfJD",
        "evidence": "function Parser($markup1, actualCreate) {",
        "line": 51,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'Parser'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_determine$ContentDecoratorElement'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._determine$ContentDecoratorElement = function ($content) {",
        "line": 55,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_determine$ContentDecoratorElement'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseFormattingAttrs'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseFormattingAttrs = function ($markup, substate, filter) {",
        "line": 71,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseFormattingAttrs'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseContent'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseContent = function ($content) {",
        "line": 92,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseContent'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseChildContent'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseChildContent = function ($content) {",
        "line": 111,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseChildContent'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseContents'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseContents = function ($block) {",
        "line": 123,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseContents'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseBlock'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseBlock = function ($block) {",
        "line": 134,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseBlock'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseBlocks'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseBlocks = function ($column) {",
        "line": 142,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseBlocks'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseColumn'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseColumn = function ($column, columnCount) {",
        "line": 158,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseColumn'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseColumnWidth'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseColumnWidth = function ($column, defaultPercentage) {",
        "line": 167,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseColumnWidth'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseColumns'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseColumns = function ($markup) {",
        "line": 173,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseColumns'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parseAttrs'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parseAttrs = function ($markup, state) {",
        "line": 182,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parseAttrs'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method '_parse'.",
        "code": "wfJD",
        "evidence": "Parser.prototype._parse = function () {",
        "line": 189,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method '_parse'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'toState'.",
        "code": "wfJD",
        "evidence": "Parser.prototype.toState = function () {",
        "line": 194,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'toState'."
      }
    ],
    "jsDocNameFixerProc": [],
    "fixClassDeclarationsProc": [],
    "jsDoc3PrepProc": []
  },
  "outputDirectory": "test-output",
  "path": "test-source/src/import/parser.js",
  "folderPath": "test-source/src/import",
  "fileName": "parser.js",
  "modulePaths": {
    "blue": "blue/js"
  },
  "packagePath": "/src/import",
  "webPath": "/src/import",
  "libFile": false,
  "min": false,
  "realName": "parser",
  "name": "parser",
  "camelName": "Parser",
  "processedFilePath": "test-output/src/import/parser.js",
  "mappedModuleName": "src/import/parser",
  "couldParseOriginalSource": true,
  "namedConstructors": {
    "src/import/parser~Parser": {
      "todos": [],
      "params": [
        "$markup1",
        "actualCreate"
      ],
      "memberOf": "",
      "returnType": "",
      "ctor": true,
      "lineNumber": 51,
      "line": "function Parser($markup1, actualCreate) {",
      "comment": -1,
      "range": [
        1757,
        1906
      ],
      "name": "Parser",
      "ctorType": "@constructor",
      "doclet": {
        "params": [],
        "returnValue": "",
        "tags": []
      },
      "jsDoc": "/**\n * @constructor\n * @param $markup1\n * @param actualCreate\n */"
    }
  },
  "checkForRequiresMismatch": true,
  "preprocessed": true,
  "NODEJS": false,
  "moduleName": "src/import/parser",
  "inlineDeps": [],
  "jsDoccerProcData": {
    "lines": 203,
    "requires": [
      "column-and-block-layout-editor-path/constants"
    ],
    "className": "n/a",
    "packagePath": "",
    "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/import",
    "uses_Y": false,
    "no_lib": true,
    "inferencedClassName": "n/a",
    "uses_$": true,
    "chars": 8175,
    "uses_YUI": false,
    "fields": [],
    "moduleName": "./parser",
    "uses_console_log": false,
    "uses_backbone": false,
    "classes": {
      "Parser": 9042
    },
    "methods": [
      {
        "name": "contentChildExclusionFilter",
        "visibility": "public",
        "static": false,
        "lineNumber": 36,
        "memberOf": "",
        "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "contentChildExclusionFilter = function () {",
        "originalJsDocDescription": {}
      },
      {
        "name": "childContentEditorExclusionFilter",
        "visibility": "public",
        "static": false,
        "lineNumber": 39,
        "memberOf": "",
        "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "childContentEditorExclusionFilter = function () {",
        "originalJsDocDescription": {}
      },
      {
        "name": "columnChildExclusionFilter",
        "visibility": "public",
        "static": false,
        "lineNumber": 42,
        "memberOf": "",
        "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "columnChildExclusionFilter = function () {",
        "originalJsDocDescription": {}
      },
      {
        "name": "columnExclusionFilter",
        "visibility": "public",
        "static": false,
        "lineNumber": 45,
        "memberOf": "",
        "doclet": "/**\n * @return {boolean}\n */",
        "description": "",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "columnExclusionFilter = function () {",
        "originalJsDocDescription": {}
      },
      {
        "name": "Parser",
        "visibility": "public",
        "static": false,
        "lineNumber": 51,
        "memberOf": "",
        "doclet": "/**\n * @constructor\n * @param $markup1\n * @param actualCreate\n */",
        "args": [
          "$markup1",
          "actualCreate"
        ],
        "description": "",
        "return": "",
        "classDeclarationFlag": true,
        "line": "function Parser($markup1, actualCreate) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_determine$ContentDecoratorElement",
        "visibility": "public",
        "static": false,
        "lineNumber": 55,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $content\n */",
        "args": [
          "$content"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._determine$ContentDecoratorElement = function ($content) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseFormattingAttrs",
        "visibility": "public",
        "static": false,
        "lineNumber": 71,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $markup\n * @param substate\n * @param filter\n */",
        "args": [
          "$markup",
          "substate",
          "filter"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseFormattingAttrs = function ($markup, substate, filter) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseContent",
        "visibility": "public",
        "static": false,
        "lineNumber": 92,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $content\n */",
        "args": [
          "$content"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseContent = function ($content) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseChildContent",
        "visibility": "public",
        "static": false,
        "lineNumber": 111,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $content\n */",
        "args": [
          "$content"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseChildContent = function ($content) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseContents",
        "visibility": "public",
        "static": false,
        "lineNumber": 123,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $block\n */",
        "args": [
          "$block"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseContents = function ($block) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseBlock",
        "visibility": "public",
        "static": false,
        "lineNumber": 134,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $block\n */",
        "args": [
          "$block"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseBlock = function ($block) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseBlocks",
        "visibility": "public",
        "static": false,
        "lineNumber": 142,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $column\n */",
        "args": [
          "$column"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseBlocks = function ($column) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseColumn",
        "visibility": "public",
        "static": false,
        "lineNumber": 158,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $column\n * @param columnCount\n */",
        "args": [
          "$column",
          "columnCount"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseColumn = function ($column, columnCount) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseColumnWidth",
        "visibility": "public",
        "static": false,
        "lineNumber": 167,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $column\n * @param defaultPercentage\n * @return {boolean}\n */",
        "args": [
          "$column",
          "defaultPercentage"
        ],
        "description": "",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseColumnWidth = function ($column, defaultPercentage) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseColumns",
        "visibility": "public",
        "static": false,
        "lineNumber": 173,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $markup\n */",
        "args": [
          "$markup"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseColumns = function ($markup) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parseAttrs",
        "visibility": "public",
        "static": false,
        "lineNumber": 182,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @param $markup\n * @param state\n * @return {object} AssignmentExpression\n */",
        "args": [
          "$markup",
          "state"
        ],
        "description": "",
        "return": "AssignmentExpression",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parseAttrs = function ($markup, state) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "_parse",
        "visibility": "public",
        "static": false,
        "lineNumber": 189,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @return {object} AssignmentExpression\n */",
        "description": "",
        "return": "AssignmentExpression",
        "classDeclarationFlag": false,
        "line": "Parser.prototype._parse = function () {",
        "originalJsDocDescription": {}
      },
      {
        "name": "toState",
        "visibility": "public",
        "static": false,
        "lineNumber": 194,
        "memberOf": "Parser.prototype",
        "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Parser.prototype.toState = function () {",
        "originalJsDocDescription": {}
      }
    ],
    "is_module": true,
    "uses_alert": false,
    "uses_y_log": false,
    "requiresRaw": [],
    "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/import",
    "fileName": "parser.js",
    "strict": false,
    "min": false,
    "main": 0
  },
  "testStubs": "\n",
  "couldParseProcessedSource": true,
  "corrupted": false,
  "numberOfLines": 310,
  "EMPTY": false
}