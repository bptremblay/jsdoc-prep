{
  "results": {
    "amdProc": {
      "requires": [],
      "moduleName": "standard_header",
      "AMD": true,
      "webPath": "/component/classic"
    }
  },
  "errors": {
    "thirdPartyFilter": [],
    "minFilter": [],
    "badCharactersProc": [
      {
        "id": "(error)",
        "raw": "Bad character(s) found.",
        "code": "wfBC",
        "evidence": "",
        "line": -1,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "Bad character(s) found: ''\\t''."
      }
    ],
    "amdFilter": [],
    "jsBeautifyProc": [],
    "jsDoccerProc": [
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'init'.",
        "code": "wfJD",
        "evidence": "init: function() {",
        "line": 5,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'init'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'updateContent'.",
        "code": "wfJD",
        "evidence": "updateContent: function(data) {",
        "line": 8,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'updateContent'."
      }
    ],
    "jsDocNameFixerProc": [],
    "fixClassDeclarationsProc": [],
    "jsDoc3PrepProc": []
  },
  "outputDirectory": "test-output",
  "path": "test-source/component/classic/standardHeader.js",
  "folderPath": "test-source/component/classic",
  "fileName": "standardHeader.js",
  "packagePath": "/component/classic",
  "webPath": "/component/classic",
  "libFile": false,
  "min": false,
  "realName": "standard_header",
  "name": "standardHeader",
  "camelName": "StandardHeader",
  "processedFilePath": "test-output/component/classic/standardHeader.js",
  "couldParseOriginalSource": true,
  "preprocessed": true,
  "rewrittenReturnBody": "return /**@alias module:component/classic/standardHeader */ {\n    /**\n     * Init.\n     */\n    init: function () {\n      context = this.settings.context;\n    },\n    /**\n     * Update content.\n     * @param data\n     * @todo Please describe the return type of this method.\n     */\n    updateContent: function (data) {\n      context.model.lens('headerComponent.properties').set(data);\n      return {};\n    }\n  };",
  "rewrittenReturnBodyNode": {
    "type": "ReturnStatement",
    "argument": {
      "type": "ObjectExpression",
      "properties": [
        {
          "type": "Property",
          "key": {
            "type": "Identifier",
            "name": "init",
            "range": [
              87,
              91
            ],
            "parentNode": 445,
            "uid": 446
          },
          "value": {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "context",
                      "range": [
                        113,
                        120
                      ],
                      "parentNode": 450,
                      "uid": 451
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                          "range": [
                            123,
                            127
                          ],
                          "parentNode": 453,
                          "uid": 454
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "settings",
                          "range": [
                            128,
                            136
                          ],
                          "parentNode": 453,
                          "uid": 455
                        },
                        "range": [
                          123,
                          136
                        ],
                        "parentNode": 452,
                        "uid": 453
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "context",
                        "range": [
                          137,
                          144
                        ],
                        "parentNode": 452,
                        "uid": 456
                      },
                      "range": [
                        123,
                        144
                      ],
                      "parentNode": 450,
                      "uid": 452
                    },
                    "range": [
                      113,
                      144
                    ],
                    "parentNode": 449,
                    "uid": 450
                  },
                  "range": [
                    113,
                    145
                  ],
                  "parentNode": 448,
                  "uid": 449
                }
              ],
              "range": [
                105,
                151
              ],
              "parentNode": 447,
              "uid": 448
            },
            "rest": null,
            "generator": false,
            "expression": false,
            "range": [
              93,
              151
            ],
            "parentNode": 445,
            "uid": 447,
            "returnType": ""
          },
          "kind": "init",
          "range": [
            87,
            151
          ],
          "parentNode": 444,
          "uid": 445
        },
        {
          "type": "Property",
          "key": {
            "type": "Identifier",
            "name": "updateContent",
            "range": [
              276,
              289
            ],
            "parentNode": 457,
            "uid": 458
          },
          "value": {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "data",
                "range": [
                  301,
                  305
                ],
                "parentNode": 459,
                "uid": 460
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "context",
                              "range": [
                                315,
                                322
                              ],
                              "parentNode": 467,
                              "uid": 468
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "model",
                              "range": [
                                323,
                                328
                              ],
                              "parentNode": 467,
                              "uid": 469
                            },
                            "range": [
                              315,
                              328
                            ],
                            "parentNode": 466,
                            "uid": 467
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "lens",
                            "range": [
                              329,
                              333
                            ],
                            "parentNode": 466,
                            "uid": 470
                          },
                          "range": [
                            315,
                            333
                          ],
                          "parentNode": 465,
                          "uid": 466
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "headerComponent.properties",
                            "raw": "'headerComponent.properties'",
                            "range": [
                              334,
                              362
                            ],
                            "parentNode": 465,
                            "uid": 471
                          }
                        ],
                        "range": [
                          315,
                          363
                        ],
                        "parentNode": 464,
                        "uid": 465
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "set",
                        "range": [
                          364,
                          367
                        ],
                        "parentNode": 464,
                        "uid": 472
                      },
                      "range": [
                        315,
                        367
                      ],
                      "parentNode": 463,
                      "uid": 464
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "data",
                        "range": [
                          368,
                          372
                        ],
                        "parentNode": 463,
                        "uid": 473
                      }
                    ],
                    "range": [
                      315,
                      373
                    ],
                    "parentNode": 462,
                    "uid": 463
                  },
                  "range": [
                    315,
                    374
                  ],
                  "parentNode": 461,
                  "uid": 462
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "ObjectExpression",
                    "properties": [],
                    "range": [
                      388,
                      390
                    ],
                    "parentNode": 474,
                    "uid": 475
                  },
                  "range": [
                    381,
                    391
                  ],
                  "parentNode": 461,
                  "uid": 474,
                  "returnType": ""
                }
              ],
              "range": [
                307,
                397
              ],
              "parentNode": 459,
              "uid": 461
            },
            "rest": null,
            "generator": false,
            "expression": false,
            "range": [
              291,
              397
            ],
            "parentNode": 457,
            "uid": 459,
            "returnType": "?"
          },
          "kind": "init",
          "range": [
            276,
            397
          ],
          "parentNode": 444,
          "uid": 457
        }
      ],
      "range": [
        52,
        401
      ],
      "parentNode": 443,
      "uid": 444
    },
    "range": [
      45,
      402
    ],
    "parentNode": 438,
    "uid": 443,
    "returnType": ""
  },
  "jsDoccerProcData": {
    "lines": 13,
    "requires": [],
    "className": "n/a",
    "packagePath": "",
    "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source/component/classic",
    "uses_Y": false,
    "no_lib": true,
    "inferencedClassName": "n/a",
    "uses_$": false,
    "chars": 256,
    "uses_YUI": false,
    "fields": [],
    "moduleName": "./standardHeader",
    "uses_console_log": false,
    "uses_backbone": false,
    "classes": {},
    "methods": [
      {
        "name": "init",
        "visibility": "public",
        "static": false,
        "lineNumber": 5,
        "memberOf": "",
        "originalJsDocDescription": {},
        "description": "",
        "classDeclarationFlag": false,
        "line": "init: function() {"
      },
      {
        "name": "updateContent",
        "visibility": "public",
        "static": false,
        "lineNumber": 8,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "data"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "updateContent: function(data) {"
      }
    ],
    "is_module": false,
    "uses_alert": false,
    "uses_y_log": false,
    "requiresRaw": [],
    "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source/component/classic",
    "fileName": "standardHeader.js",
    "strict": false
  },
  "possibleClassname": "",
  "testStubs": "\n",
  "couldParseProcessedSource": true,
  "corrupted": false,
  "numberOfLines": 24
}