{
  "results": [
    {
      "results": {
        "amdProc": {
          "requires": [],
          "moduleName": "mocks",
          "AMD": false,
          "webPath": "/spec/support",
          "convertedName": "mocks",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'greaterThan'.",
            "code": "wfJD",
            "evidence": "greaterThan: function (versionA, versionB) {",
            "line": 5,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'greaterThan'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setVersion'.",
            "code": "wfJD",
            "evidence": "setVersion: function (state, version) {",
            "line": 14,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setVersion'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getVersion'.",
            "code": "wfJD",
            "evidence": "getVersion: function (state) {",
            "line": 17,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getVersion'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'versionAsString'.",
            "code": "wfJD",
            "evidence": "versionAsString: function (version) {",
            "line": 20,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'versionAsString'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'majorMinorVersionAsString'.",
            "code": "wfJD",
            "evidence": "majorMinorVersionAsString: function (version) {",
            "line": 23,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'majorMinorVersionAsString'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'majorVersionAsString'.",
            "code": "wfJD",
            "evidence": "majorVersionAsString: function (version) {",
            "line": 26,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'majorVersionAsString'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeMigratorFromMigrations'.",
            "code": "wfJD",
            "evidence": "Migrator.prototype._removeMigratorFromMigrations = function (migrator) {",
            "line": 33,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeMigratorFromMigrations'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_isForwardMigration'.",
            "code": "wfJD",
            "evidence": "Migrator.prototype._isForwardMigration = function (migrator) {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_isForwardMigration'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_selectMigrator'.",
            "code": "wfJD",
            "evidence": "Migrator.prototype._selectMigrator = function () {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_selectMigrator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_determineMigrator'.",
            "code": "wfJD",
            "evidence": "Migrator.prototype._determineMigrator = function () {",
            "line": 47,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_determineMigrator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createMigrations'.",
            "code": "wfJD",
            "evidence": "Migrator.prototype._createMigrations = function (migrators) {",
            "line": 56,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createMigrations'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_updateStateVersions'.",
            "code": "wfJD",
            "evidence": "Migrator.prototype._updateStateVersions = function () {",
            "line": 65,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_updateStateVersions'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_migrate'.",
            "code": "wfJD",
            "evidence": "Migrator.prototype._migrate = function () {",
            "line": 70,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_migrate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'migrate'.",
            "code": "wfJD",
            "evidence": "Migrator.prototype.migrate = function (state) {",
            "line": 83,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'migrate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'Migrator'.",
            "code": "wfJD",
            "evidence": "function Migrator(editor) {",
            "line": 97,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'Migrator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'migrateToLatestStateVersion'.",
            "code": "wfJD",
            "evidence": "Migrator.migrateToLatestStateVersion = function (editor, state) {",
            "line": 103,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'migrateToLatestStateVersion'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/spec/support/mocks.js",
      "folderPath": "test-source/spec/support",
      "fileName": "mocks.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/spec/support",
      "webPath": "/spec/support",
      "libFile": false,
      "min": false,
      "realName": "mocks",
      "name": "mocks",
      "camelName": "Mocks",
      "processedFilePath": "test-output/spec/support/mocks.js",
      "mappedModuleName": "spec/support/mocks",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "spec/support/mocks",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 118,
        "requires": [],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/spec/support",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 4740,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./mocks",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "Migrator": 6027
        },
        "methods": [
          {
            "name": "greaterThan",
            "visibility": "public",
            "static": false,
            "lineNumber": 5,
            "memberOf": "",
            "doclet": "/**\n * @param versionA\n * @param versionB\n */",
            "args": [
              "versionA",
              "versionB"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "greaterThan: function (versionA, versionB) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 14,
            "memberOf": "",
            "doclet": "/**\n * @param state\n * @param version\n * @return {object} AssignmentExpression\n */",
            "args": [
              "state",
              "version"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "setVersion: function (state, version) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 17,
            "memberOf": "",
            "doclet": "/**\n * @param state\n */",
            "args": [
              "state"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getVersion: function (state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "versionAsString",
            "visibility": "public",
            "static": false,
            "lineNumber": 20,
            "memberOf": "",
            "doclet": "/**\n * @param version\n */",
            "args": [
              "version"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "versionAsString: function (version) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "majorMinorVersionAsString",
            "visibility": "public",
            "static": false,
            "lineNumber": 23,
            "memberOf": "",
            "doclet": "/**\n * @param version\n */",
            "args": [
              "version"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "majorMinorVersionAsString: function (version) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "majorVersionAsString",
            "visibility": "public",
            "static": false,
            "lineNumber": 26,
            "memberOf": "",
            "doclet": "/**\n * @param version\n */",
            "args": [
              "version"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "majorVersionAsString: function (version) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeMigratorFromMigrations",
            "visibility": "public",
            "static": false,
            "lineNumber": 33,
            "memberOf": "Migrator.prototype",
            "doclet": "/**\n * @private \n * @param migrator\n * @return {object} UnaryExpression\n */",
            "args": [
              "migrator"
            ],
            "description": "",
            "return": "UnaryExpression",
            "classDeclarationFlag": false,
            "line": "Migrator.prototype._removeMigratorFromMigrations = function (migrator) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_isForwardMigration",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "Migrator.prototype",
            "doclet": "/**\n * @private \n * @param migrator\n */",
            "args": [
              "migrator"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Migrator.prototype._isForwardMigration = function (migrator) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_selectMigrator",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "Migrator.prototype",
            "doclet": "/**\n * @private \n * @return {object} ConditionalExpression\n */",
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "Migrator.prototype._selectMigrator = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_determineMigrator",
            "visibility": "public",
            "static": false,
            "lineNumber": 47,
            "memberOf": "Migrator.prototype",
            "doclet": "/**\n * @private \n */",
            "description": "",
            "classDeclarationFlag": false,
            "line": "Migrator.prototype._determineMigrator = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createMigrations",
            "visibility": "public",
            "static": false,
            "lineNumber": 56,
            "memberOf": "Migrator.prototype",
            "doclet": "/**\n * @private \n * @param migrators\n * @return {object} UnaryExpression\n */",
            "args": [
              "migrators"
            ],
            "description": "",
            "return": "UnaryExpression",
            "classDeclarationFlag": false,
            "line": "Migrator.prototype._createMigrations = function (migrators) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_updateStateVersions",
            "visibility": "public",
            "static": false,
            "lineNumber": 65,
            "memberOf": "Migrator.prototype",
            "doclet": "/**\n * @private \n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "Migrator.prototype._updateStateVersions = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_migrate",
            "visibility": "public",
            "static": false,
            "lineNumber": 70,
            "memberOf": "Migrator.prototype",
            "doclet": "/**\n * @private \n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "Migrator.prototype._migrate = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "migrate",
            "visibility": "public",
            "static": false,
            "lineNumber": 83,
            "memberOf": "Migrator.prototype",
            "doclet": "/**\n * @param state\n */",
            "args": [
              "state"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Migrator.prototype.migrate = function (state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "Migrator",
            "visibility": "public",
            "static": false,
            "lineNumber": 97,
            "memberOf": "",
            "doclet": "/**\n * @param editor\n */",
            "args": [
              "editor"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": false,
            "line": "function Migrator(editor) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "migrateToLatestStateVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 103,
            "memberOf": "Migrator",
            "doclet": "/**\n * @param editor\n * @param state\n */",
            "args": [
              "editor",
              "state"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Migrator.migrateToLatestStateVersion = function (editor, state) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": false,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/spec/support",
        "fileName": "mocks.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 201,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [],
          "moduleName": "require-config",
          "AMD": false,
          "webPath": "/spec/support",
          "convertedName": "require_config",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isLocalhost'.",
            "code": "wfJD",
            "evidence": "function isLocalhost(hostname) {",
            "line": 2,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isLocalhost'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'escapeRegExp'.",
            "code": "wfJD",
            "evidence": "function escapeRegExp(str) {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'escapeRegExp'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'warn'.",
            "code": "wfJD",
            "evidence": "function warn(msg) {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'warn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'init'.",
            "code": "wfJD",
            "evidence": "init: function () {",
            "line": 69,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'init'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'useXhr'.",
            "code": "wfJD",
            "evidence": "useXhr: function (url, protocol, hostname, port) {",
            "line": 88,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'useXhr'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'createXhr'.",
            "code": "wfJD",
            "evidence": "createXhr: function () {",
            "line": 92,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'createXhr'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'buildProxiedUrl'.",
            "code": "wfJD",
            "evidence": "buildProxiedUrl = function (url) {",
            "line": 94,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'buildProxiedUrl'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'onload'.",
            "code": "wfJD",
            "evidence": "xdr.onload = function () {",
            "line": 106,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'onload'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'onerror'.",
            "code": "wfJD",
            "evidence": "xdr.onerror = function () {",
            "line": 111,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'onerror'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'onprogress'.",
            "code": "wfJD",
            "evidence": "xdr.onprogress = function () {};",
            "line": 114,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'onprogress'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ontimeout'.",
            "code": "wfJD",
            "evidence": "return xdr.ontimeout = function () {",
            "line": 115,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ontimeout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'send'.",
            "code": "wfJD",
            "evidence": "send: function () {",
            "line": 119,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'send'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'open'.",
            "code": "wfJD",
            "evidence": "xhr.open = function (method, url) {",
            "line": 128,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'open'."
          }
        ],
        "jsDocNameFixerProc": [
          {
            "id": "(error)",
            "raw": "jsDoc tag error.",
            "code": "wfJD",
            "evidence": "/* Regex for proxy checking */",
            "line": 0,
            "character": 0,
            "scope": "(main)",
            "a": "",
            "reason": "jsDoc tag error: Comment at top of file begins with /*, not /**."
          }
        ],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/spec/support/require-config.js",
      "folderPath": "test-source/spec/support",
      "fileName": "require-config.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/spec/support",
      "webPath": "/spec/support",
      "libFile": false,
      "min": false,
      "realName": "require-config",
      "name": "require-config",
      "camelName": "RequireConfig",
      "processedFilePath": "test-output/spec/support/require-config.js",
      "mappedModuleName": "spec/support/require-config",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "spec/support/require-config",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 137,
        "requires": [],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/spec/support",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 4387,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./require-config",
        "uses_console_log": true,
        "uses_backbone": false,
        "classes": {},
        "methods": [
          {
            "name": "isLocalhost",
            "visibility": "public",
            "static": false,
            "lineNumber": 2,
            "memberOf": "",
            "doclet": "/**\n * Returns true if is localhost.\n * @param hostname\n * @return {object} boolean\n */",
            "args": [
              "hostname"
            ],
            "description": "Returns true if is localhost.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "function isLocalhost(hostname) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "escapeRegExp",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "",
            "doclet": "/**\n * @param str\n */",
            "args": [
              "str"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function escapeRegExp(str) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "warn",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "memberOf": "",
            "doclet": "/**\n * @param msg\n */",
            "args": [
              "msg"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "function warn(msg) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "init",
            "visibility": "public",
            "static": false,
            "lineNumber": 69,
            "memberOf": "",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "init: function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "useXhr",
            "visibility": "public",
            "static": false,
            "lineNumber": 88,
            "memberOf": "",
            "doclet": "/**\n * @param url\n * @param protocol\n * @param hostname\n * @param port\n */",
            "args": [
              "url",
              "protocol",
              "hostname",
              "port"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "useXhr: function (url, protocol, hostname, port) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "createXhr",
            "visibility": "public",
            "static": false,
            "lineNumber": 92,
            "memberOf": "",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "createXhr: function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "buildProxiedUrl",
            "visibility": "public",
            "static": false,
            "lineNumber": 94,
            "memberOf": "",
            "doclet": "/**\n * @param url\n */",
            "args": [
              "url"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "buildProxiedUrl = function (url) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "onload",
            "visibility": "public",
            "static": false,
            "lineNumber": 106,
            "memberOf": "xdr",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "xdr.onload = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "onerror",
            "visibility": "public",
            "static": false,
            "lineNumber": 111,
            "memberOf": "xdr",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "xdr.onerror = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "onprogress",
            "visibility": "public",
            "static": false,
            "lineNumber": 114,
            "memberOf": "xdr",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "xdr.onprogress = function () {};",
            "originalJsDocDescription": {}
          },
          {
            "name": "ontimeout",
            "visibility": "public",
            "static": false,
            "lineNumber": 115,
            "memberOf": "xdr",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "return xdr.ontimeout = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "send",
            "visibility": "public",
            "static": false,
            "lineNumber": 119,
            "memberOf": "",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "send: function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "open",
            "visibility": "public",
            "static": false,
            "lineNumber": 128,
            "memberOf": "xhr",
            "doclet": "/**\n * @param method\n * @param url\n */",
            "args": [
              "method",
              "url"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "xhr.open = function (method, url) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": false,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/spec/support",
        "fileName": "require-config.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 174,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "text!button-editor-path/tmpl/button-editor.html",
            "template-engine",
            "i18n!button-editor-path/nls/button-editor",
            "galileo-lib/modules/services/usage-tracking",
            "underscore",
            "galileo-lib/modules/services/activation-service",
            "galileo-lib/modules/util/console",
            "galileo-lib/modules/events",
            "backbone",
            "galileo-lib/modules/fed-components/views/modal-view",
            "galileo-lib/modules/views/link-modal/link-modal-view",
            "galileo-lib/modules/services/font-management-service",
            "galileo-lib/modules/services/color-picker-service",
            "galileo-lib/modules/utils",
            "uiBasePath/core/components/ccTools/ctct.src",
            "jquery-ui",
            "button-editor-path/lib/galileo-jquery-ui-mobile-shim"
          ],
          "usedAs": [
            "template",
            "mustache",
            "i18n",
            "usageTracking",
            "_",
            "activationService",
            "utilConsole",
            "galileoEvents",
            "Backbone",
            "ModalView",
            "LinkModalView",
            "fontManagementService",
            "colorPickerService",
            "utils"
          ],
          "moduleName": "button-editor-view",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "button_editor_view",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'constructor'.",
            "code": "wfJD",
            "evidence": "constructor(...args) {",
            "line": 47,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'constructor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initClass'.",
            "code": "wfJD",
            "evidence": "static initClass() {",
            "line": 55,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "initialize(options = {}) {",
            "line": 85,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_cleanup'.",
            "code": "wfJD",
            "evidence": "_cleanup() {",
            "line": 91,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_cleanup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'justDont'.",
            "code": "wfJD",
            "evidence": "justDont(e) {",
            "line": 97,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'justDont'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toggleBold'.",
            "code": "wfJD",
            "evidence": "toggleBold() {",
            "line": 102,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toggleBold'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toggleItalic'.",
            "code": "wfJD",
            "evidence": "toggleItalic() {",
            "line": 105,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toggleItalic'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'stopSubmitOnEnter'.",
            "code": "wfJD",
            "evidence": "stopSubmitOnEnter(e) {",
            "line": 108,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'stopSubmitOnEnter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setButtonModel'.",
            "code": "wfJD",
            "evidence": "setButtonModel(model) {",
            "line": 115,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setButtonModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setModel'.",
            "code": "wfJD",
            "evidence": "setModel(model) {",
            "line": 135,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setEditor'.",
            "code": "wfJD",
            "evidence": "setEditor(editor) {",
            "line": 138,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setEditor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setButtonView'.",
            "code": "wfJD",
            "evidence": "setButtonView(buttonView) {",
            "line": 141,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setButtonView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getCalculatedCssProperties'.",
            "code": "wfJD",
            "evidence": "getCalculatedCssProperties() {",
            "line": 144,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getCalculatedCssProperties'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'update'.",
            "code": "wfJD",
            "evidence": "update(attributes = this.buttonModel.toJSON()) {",
            "line": 147,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'update'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'delayedPoliteUpdateModel'.",
            "code": "wfJD",
            "evidence": "delayedPoliteUpdateModel() {",
            "line": 219,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'delayedPoliteUpdateModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'updateModelLink'.",
            "code": "wfJD",
            "evidence": "updateModelLink() {",
            "line": 223,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'updateModelLink'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'updateModelFontSize'.",
            "code": "wfJD",
            "evidence": "updateModelFontSize(e) {",
            "line": 227,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'updateModelFontSize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'updateModelFontFamily'.",
            "code": "wfJD",
            "evidence": "updateModelFontFamily(e) {",
            "line": 232,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'updateModelFontFamily'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_selectAlignmentButton'.",
            "code": "wfJD",
            "evidence": "_selectAlignmentButton(theButton) {",
            "line": 238,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_selectAlignmentButton'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setAlignmentIcon'.",
            "code": "wfJD",
            "evidence": "_setAlignmentIcon(justify) {",
            "line": 244,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setAlignmentIcon'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'justifyLeft'.",
            "code": "wfJD",
            "evidence": "justifyLeft() {",
            "line": 249,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'justifyLeft'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'justifyCenter'.",
            "code": "wfJD",
            "evidence": "justifyCenter() {",
            "line": 255,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'justifyCenter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'justifyRight'.",
            "code": "wfJD",
            "evidence": "justifyRight() {",
            "line": 261,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'justifyRight'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'done'.",
            "code": "wfJD",
            "evidence": "done() {",
            "line": 267,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'done'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "render() {",
            "line": 274,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'testLink'.",
            "code": "wfJD",
            "evidence": "testLink() {",
            "line": 329,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'testLink'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'trackUsage'.",
            "code": "wfJD",
            "evidence": "trackUsage(action, detail) {",
            "line": 338,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'trackUsage'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'extendBSDropdown'.",
            "code": "wfJD",
            "evidence": "extendBSDropdown($o) {",
            "line": 380,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'extendBSDropdown'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'placeholderShim'.",
            "code": "wfJD",
            "evidence": "placeholderShim($o) {",
            "line": 410,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'placeholderShim'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'val'.",
            "code": "wfJD",
            "evidence": "$o.val = function (value) {",
            "line": 423,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'val'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setupDeleteAtomicContent'.",
            "code": "wfJD",
            "evidence": "setupDeleteAtomicContent(dac, galileoEvents, layoutEditor, editorName) {",
            "line": 443,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setupDeleteAtomicContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'triggerRemoveBlock'.",
            "code": "wfJD",
            "evidence": "triggerRemoveBlock() {",
            "line": 449,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'triggerRemoveBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_highlightBlock'.",
            "code": "wfJD",
            "evidence": "_highlightBlock(evt) {",
            "line": 455,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_highlightBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'showLinkModal'.",
            "code": "wfJD",
            "evidence": "showLinkModal(event) {",
            "line": 459,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'showLinkModal'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'addOrUpdateLink'.",
            "code": "wfJD",
            "evidence": "addOrUpdateLink(link, text, type, style) {",
            "line": 474,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'addOrUpdateLink'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'removeLink'.",
            "code": "wfJD",
            "evidence": "removeLink() {",
            "line": 480,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'removeLink'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_trashcanVisibility'.",
            "code": "wfJD",
            "evidence": "_trashcanVisibility() {",
            "line": 492,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_trashcanVisibility'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guard__'.",
            "code": "wfJD",
            "evidence": "function __guard__(value, transform) {",
            "line": 503,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guard__'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guardMethod__'.",
            "code": "wfJD",
            "evidence": "function __guardMethod__(obj, methodName, transform) {",
            "line": 507,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guardMethod__'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/button-editor-view.js",
      "folderPath": "test-source/src",
      "fileName": "button-editor-view.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "button-editor-view",
      "name": "button-editor-view",
      "camelName": "ButtonEditorView",
      "processedFilePath": "test-output/src/button-editor-view.js",
      "mappedModuleName": "src/button-editor-view",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/button-editor-view~constructor": {
          "todos": [],
          "params": [
            null
          ],
          "type": "FunctionExpression",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 47,
          "line": "constructor(...args) {",
          "comment": -1,
          "range": [
            1776,
            2095
          ],
          "name": "constructor",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param undefined\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/button-editor-view",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 513,
        "requires": [
          "text!button-editor-path/tmpl/button-editor.html",
          "template-engine",
          "i18n!button-editor-path/nls/button-editor",
          "galileo-lib/modules/services/usage-tracking",
          "underscore",
          "galileo-lib/modules/services/activation-service",
          "galileo-lib/modules/util/console",
          "galileo-lib/modules/events",
          "backbone",
          "galileo-lib/modules/fed-components/views/modal-view",
          "galileo-lib/modules/views/link-modal/link-modal-view",
          "galileo-lib/modules/services/font-management-service",
          "galileo-lib/modules/services/color-picker-service",
          "galileo-lib/modules/utils",
          "uiBasePath/core/components/ccTools/ctct.src",
          "jquery-ui",
          "button-editor-path/lib/galileo-jquery-ui-mobile-shim"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 19225,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./button-editor-view",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "0": 28467
        },
        "methods": [
          {
            "name": "constructor",
            "visibility": "public",
            "static": false,
            "lineNumber": 47,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param undefined\n */",
            "args": [
              null
            ],
            "description": "",
            "classDeclarationFlag": true,
            "line": "constructor(...args) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 55,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "static initClass() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 85,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param undefined\n */",
            "args": [
              null
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "initialize(options = {}) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_cleanup",
            "visibility": "public",
            "static": false,
            "lineNumber": 91,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @private \n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_cleanup() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "justDont",
            "visibility": "public",
            "static": false,
            "lineNumber": 97,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param e\n * @return {boolean}\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "justDont(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toggleBold",
            "visibility": "public",
            "static": false,
            "lineNumber": 102,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toggleBold() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toggleItalic",
            "visibility": "public",
            "static": false,
            "lineNumber": 105,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toggleItalic() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "stopSubmitOnEnter",
            "visibility": "public",
            "static": false,
            "lineNumber": 108,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param e\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "stopSubmitOnEnter(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setButtonModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 115,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param model\n */",
            "args": [
              "model"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setButtonModel(model) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 135,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param model\n * @return {object} AssignmentExpression\n */",
            "args": [
              "model"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "setModel(model) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setEditor",
            "visibility": "public",
            "static": false,
            "lineNumber": 138,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param editor\n * @return {object} AssignmentExpression\n */",
            "args": [
              "editor"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "setEditor(editor) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setButtonView",
            "visibility": "public",
            "static": false,
            "lineNumber": 141,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param buttonView\n * @return {object} AssignmentExpression\n */",
            "args": [
              "buttonView"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "setButtonView(buttonView) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getCalculatedCssProperties",
            "visibility": "public",
            "static": false,
            "lineNumber": 144,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "getCalculatedCssProperties() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "update",
            "visibility": "public",
            "static": false,
            "lineNumber": 147,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param undefined\n */",
            "args": [
              null
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "update(attributes = this.buttonModel.toJSON()) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "delayedPoliteUpdateModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 219,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "delayedPoliteUpdateModel() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "updateModelLink",
            "visibility": "public",
            "static": false,
            "lineNumber": 223,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "updateModelLink() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "updateModelFontSize",
            "visibility": "public",
            "static": false,
            "lineNumber": 227,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param e\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "updateModelFontSize(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "updateModelFontFamily",
            "visibility": "public",
            "static": false,
            "lineNumber": 232,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param e\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "updateModelFontFamily(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_selectAlignmentButton",
            "visibility": "public",
            "static": false,
            "lineNumber": 238,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @private \n * @param theButton\n */",
            "args": [
              "theButton"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_selectAlignmentButton(theButton) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setAlignmentIcon",
            "visibility": "public",
            "static": false,
            "lineNumber": 244,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @private \n * @param justify\n */",
            "args": [
              "justify"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_setAlignmentIcon(justify) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "justifyLeft",
            "visibility": "public",
            "static": false,
            "lineNumber": 249,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "justifyLeft() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "justifyCenter",
            "visibility": "public",
            "static": false,
            "lineNumber": 255,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "justifyCenter() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "justifyRight",
            "visibility": "public",
            "static": false,
            "lineNumber": 261,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "justifyRight() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "done",
            "visibility": "public",
            "static": false,
            "lineNumber": 267,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "done() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 274,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "render() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "testLink",
            "visibility": "public",
            "static": false,
            "lineNumber": 329,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "testLink() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "trackUsage",
            "visibility": "public",
            "static": false,
            "lineNumber": 338,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param action\n * @param detail\n */",
            "args": [
              "action",
              "detail"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "trackUsage(action, detail) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "extendBSDropdown",
            "visibility": "public",
            "static": false,
            "lineNumber": 380,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param $o\n * @return {object} AssignmentExpression\n */",
            "args": [
              "$o"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "extendBSDropdown($o) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "placeholderShim",
            "visibility": "public",
            "static": false,
            "lineNumber": 410,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param $o\n */",
            "args": [
              "$o"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "placeholderShim($o) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "val",
            "visibility": "public",
            "static": false,
            "lineNumber": 423,
            "memberOf": "$o",
            "doclet": "/**\n * @param value\n */",
            "args": [
              "value"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "$o.val = function (value) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setupDeleteAtomicContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 443,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param dac\n * @param galileoEvents\n * @param layoutEditor\n * @param editorName\n * @return {object} AssignmentExpression\n */",
            "args": [
              "dac",
              "galileoEvents",
              "layoutEditor",
              "editorName"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "setupDeleteAtomicContent(dac, galileoEvents, layoutEditor, editorName) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "triggerRemoveBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 449,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "triggerRemoveBlock() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_highlightBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 455,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @private \n * @param evt\n */",
            "args": [
              "evt"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_highlightBlock(evt) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "showLinkModal",
            "visibility": "public",
            "static": false,
            "lineNumber": 459,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "showLinkModal(event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "addOrUpdateLink",
            "visibility": "public",
            "static": false,
            "lineNumber": 474,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @param link\n * @param text\n * @param type\n * @param style\n */",
            "args": [
              "link",
              "text",
              "type",
              "style"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "addOrUpdateLink(link, text, type, style) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "removeLink",
            "visibility": "public",
            "static": false,
            "lineNumber": 480,
            "memberOf": "ButtonEditorView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "removeLink() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_trashcanVisibility",
            "visibility": "public",
            "static": false,
            "lineNumber": 492,
            "memberOf": "ButtonEditorView",
            "doclet": "/**\n * @private \n * @return {string}\n */",
            "description": "",
            "return": "{string}",
            "classDeclarationFlag": false,
            "line": "_trashcanVisibility() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guard__",
            "visibility": "public",
            "static": false,
            "lineNumber": 503,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param value\n * @param transform\n * @return {object} ConditionalExpression\n */",
            "args": [
              "value",
              "transform"
            ],
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "function __guard__(value, transform) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guardMethod__",
            "visibility": "public",
            "static": false,
            "lineNumber": 507,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param obj\n * @param methodName\n * @param transform\n */",
            "args": [
              "obj",
              "methodName",
              "transform"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function __guardMethod__(obj, methodName, transform) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "button-editor-view.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 686,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "underscore",
            "backbone",
            "template-engine",
            "galileo-lib/modules/events",
            "galileo-lib/modules/services/descriptors/content/button-content-descriptor",
            "button-editor-path/delete-atomic-content",
            "button-editor-path/state-migrations",
            "button-editor-path/button-model",
            "button-editor-path/button-view",
            "button-editor-path/button-editor-view",
            "button-editor-path/editor-model",
            "button-editor-path/legacy-color-check",
            "toolbar",
            "text!button-editor-path/tmpl/button.html",
            "i18n!button-editor-path/nls/button-editor",
            "text!button-editor-path/tmpl/content-decorator.html",
            "button-editor-path/lib/change-element-type.jquery",
            "css!button-editor-path/css/button-editor"
          ],
          "usedAs": [
            "$",
            "_",
            "Backbone",
            "Mustache",
            "galileoEvents",
            "ButtonContentDescriptor",
            "deleteAtomicContent",
            "stateMigrations",
            "ButtonModel",
            "ButtonView",
            "ButtonEditorView",
            "ButtonEditorModel",
            "legacyColorCheck",
            "toolbar",
            "buttonTemplate",
            "i18n",
            "contentDecorator"
          ],
          "moduleName": "button-editor",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "button_editor",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'scrapeStyleFromHTML'.",
            "code": "wfJD",
            "evidence": "let scrapeStyleFromHTML = function (html) {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'scrapeStyleFromHTML'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'stripQuotes'.",
            "code": "wfJD",
            "evidence": "let stripQuotes = function (string) {",
            "line": 41,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'stripQuotes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'styleObject'.",
            "code": "wfJD",
            "evidence": "let styleObject = function (o) {",
            "line": 50,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'styleObject'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initClass'.",
            "code": "wfJD",
            "evidence": "static initClass() {",
            "line": 87,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'constructor'.",
            "code": "wfJD",
            "evidence": "constructor(layoutEditor, config) {",
            "line": 90,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'constructor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_cleanup'.",
            "code": "wfJD",
            "evidence": "_cleanup() {",
            "line": 140,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_cleanup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'createMarkup'.",
            "code": "wfJD",
            "evidence": "static createMarkup(contentDescriptor) {",
            "line": 146,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'createMarkup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentDescriptors'.",
            "code": "wfJD",
            "evidence": "static getContentDescriptors() {",
            "line": 149,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentDescriptors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentDecorators'.",
            "code": "wfJD",
            "evidence": "static getContentDecorators(contentId) {",
            "line": 159,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentDecorators'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentDisplayElement'.",
            "code": "wfJD",
            "evidence": "static getContentDisplayElement() {",
            "line": 173,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentDisplayElement'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getStateVersion'.",
            "code": "wfJD",
            "evidence": "getStateVersion() {",
            "line": 181,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getStateVersion'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getStateMigrations'.",
            "code": "wfJD",
            "evidence": "getStateMigrations() {",
            "line": 188,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getStateMigrations'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'renderForEdit'.",
            "code": "wfJD",
            "evidence": "renderForEdit() {",
            "line": 191,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'renderForEdit'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'renderForPublish'.",
            "code": "wfJD",
            "evidence": "renderForPublish() {",
            "line": 194,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'renderForPublish'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setStyles'.",
            "code": "wfJD",
            "evidence": "setStyles() {}",
            "line": 210,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setStyles'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getState'.",
            "code": "wfJD",
            "evidence": "getState() {",
            "line": 211,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setState'.",
            "code": "wfJD",
            "evidence": "setState(state) {",
            "line": 214,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'init'.",
            "code": "wfJD",
            "evidence": "init() {",
            "line": 221,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'init'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'receiveMessage'.",
            "code": "wfJD",
            "evidence": "receiveMessage(type, data) {}",
            "line": 248,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'receiveMessage'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'activate'.",
            "code": "wfJD",
            "evidence": "activate() {}",
            "line": 249,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'activate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'deactivate'.",
            "code": "wfJD",
            "evidence": "deactivate() {",
            "line": 250,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'deactivate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'destroy'.",
            "code": "wfJD",
            "evidence": "destroy() {}",
            "line": 253,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'destroy'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getDefaultColorId'.",
            "code": "wfJD",
            "evidence": "getDefaultColorId($hovered) {",
            "line": 254,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getDefaultColorId'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'applyColors'.",
            "code": "wfJD",
            "evidence": "applyColors(colors, preview) {",
            "line": 262,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'applyColors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setupDeleteAtomicContent'.",
            "code": "wfJD",
            "evidence": "_setupDeleteAtomicContent() {",
            "line": 290,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setupDeleteAtomicContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setupToolbar'.",
            "code": "wfJD",
            "evidence": "_setupToolbar() {",
            "line": 293,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setupToolbar'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_atomicDelete'.",
            "code": "wfJD",
            "evidence": "_atomicDelete() {",
            "line": 307,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_atomicDelete'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_stateUpdated'.",
            "code": "wfJD",
            "evidence": "_stateUpdated(model, options) {",
            "line": 310,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_stateUpdated'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'import'.",
            "code": "wfJD",
            "evidence": "ButtonEditor.import = function (markup, name) {",
            "line": 317,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'import'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guard__'.",
            "code": "wfJD",
            "evidence": "function __guard__(value, transform) {",
            "line": 337,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guard__'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/button-editor.js",
      "folderPath": "test-source/src",
      "fileName": "button-editor.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "button-editor",
      "name": "button-editor",
      "camelName": "ButtonEditor",
      "processedFilePath": "test-output/src/button-editor.js",
      "mappedModuleName": "src/button-editor",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/button-editor~constructor": {
          "todos": [
            "RETURNWHAT"
          ],
          "params": [
            "layoutEditor",
            "config"
          ],
          "returnType": "?",
          "type": "FunctionExpression",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 90,
          "line": "constructor(layoutEditor, config) {",
          "comment": -1,
          "range": [
            3041,
            5412
          ],
          "name": "constructor",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param layoutEditor\n * @param config\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/button-editor",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 339,
        "requires": [
          "jquery",
          "underscore",
          "backbone",
          "template-engine",
          "galileo-lib/modules/events",
          "galileo-lib/modules/services/descriptors/content/button-content-descriptor",
          "button-editor-path/delete-atomic-content",
          "button-editor-path/state-migrations",
          "button-editor-path/button-model",
          "button-editor-path/button-view",
          "button-editor-path/button-editor-view",
          "button-editor-path/editor-model",
          "button-editor-path/legacy-color-check",
          "toolbar",
          "text!button-editor-path/tmpl/button.html",
          "i18n!button-editor-path/nls/button-editor",
          "text!button-editor-path/tmpl/content-decorator.html",
          "button-editor-path/lib/change-element-type.jquery",
          "css!button-editor-path/css/button-editor"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 12280,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./button-editor",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "0": 18532
        },
        "methods": [
          {
            "name": "scrapeStyleFromHTML",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "",
            "doclet": "/**\n * @param html\n */",
            "args": [
              "html"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "let scrapeStyleFromHTML = function (html) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "stripQuotes",
            "visibility": "public",
            "static": false,
            "lineNumber": 41,
            "memberOf": "",
            "doclet": "/**\n * @param string\n */",
            "args": [
              "string"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "let stripQuotes = function (string) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "styleObject",
            "visibility": "public",
            "static": false,
            "lineNumber": 50,
            "memberOf": "",
            "doclet": "/**\n * @param o\n */",
            "args": [
              "o"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "let styleObject = function (o) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 87,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "static initClass() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "constructor",
            "visibility": "public",
            "static": false,
            "lineNumber": 90,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param layoutEditor\n * @param config\n */",
            "args": [
              "layoutEditor",
              "config"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": true,
            "line": "constructor(layoutEditor, config) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_cleanup",
            "visibility": "public",
            "static": false,
            "lineNumber": 140,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @private \n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_cleanup() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "createMarkup",
            "visibility": "public",
            "static": false,
            "lineNumber": 146,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @param contentDescriptor\n */",
            "args": [
              "contentDescriptor"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "static createMarkup(contentDescriptor) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentDescriptors",
            "visibility": "public",
            "static": false,
            "lineNumber": 149,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @return {array}\n */",
            "description": "",
            "return": "{array}",
            "classDeclarationFlag": false,
            "line": "static getContentDescriptors() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentDecorators",
            "visibility": "public",
            "static": false,
            "lineNumber": 159,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @param contentId\n */",
            "args": [
              "contentId"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "static getContentDecorators(contentId) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentDisplayElement",
            "visibility": "public",
            "static": false,
            "lineNumber": 173,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "static getContentDisplayElement() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getStateVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 181,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getStateVersion() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getStateMigrations",
            "visibility": "public",
            "static": false,
            "lineNumber": 188,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getStateMigrations() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "renderForEdit",
            "visibility": "public",
            "static": false,
            "lineNumber": 191,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "renderForEdit() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "renderForPublish",
            "visibility": "public",
            "static": false,
            "lineNumber": 194,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "renderForPublish() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setStyles",
            "visibility": "public",
            "static": false,
            "lineNumber": 210,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "setStyles() {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "getState",
            "visibility": "public",
            "static": false,
            "lineNumber": 211,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getState() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setState",
            "visibility": "public",
            "static": false,
            "lineNumber": 214,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @param state\n */",
            "args": [
              "state"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "setState(state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "init",
            "visibility": "public",
            "static": false,
            "lineNumber": 221,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "init() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "receiveMessage",
            "visibility": "public",
            "static": false,
            "lineNumber": 248,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @param type\n * @param data\n */",
            "args": [
              "type",
              "data"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "receiveMessage(type, data) {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "activate",
            "visibility": "public",
            "static": false,
            "lineNumber": 249,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "activate() {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "deactivate",
            "visibility": "public",
            "static": false,
            "lineNumber": 250,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "deactivate() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "destroy",
            "visibility": "public",
            "static": false,
            "lineNumber": 253,
            "memberOf": "ButtonEditor",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "destroy() {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "getDefaultColorId",
            "visibility": "public",
            "static": false,
            "lineNumber": 254,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @param $hovered\n */",
            "args": [
              "$hovered"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getDefaultColorId($hovered) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "applyColors",
            "visibility": "public",
            "static": false,
            "lineNumber": 262,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @param colors\n * @param preview\n * @return {boolean}\n */",
            "args": [
              "colors",
              "preview"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "applyColors(colors, preview) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setupDeleteAtomicContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 290,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @private \n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_setupDeleteAtomicContent() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setupToolbar",
            "visibility": "public",
            "static": false,
            "lineNumber": 293,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @private \n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_setupToolbar() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_atomicDelete",
            "visibility": "public",
            "static": false,
            "lineNumber": 307,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @private \n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "_atomicDelete() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_stateUpdated",
            "visibility": "public",
            "static": false,
            "lineNumber": 310,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @private \n * @param model\n * @param options\n */",
            "args": [
              "model",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_stateUpdated(model, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "import",
            "visibility": "public",
            "static": false,
            "lineNumber": 317,
            "memberOf": "ButtonEditor",
            "doclet": "/**\n * @param markup\n * @param name\n */",
            "args": [
              "markup",
              "name"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ButtonEditor.import = function (markup, name) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guard__",
            "visibility": "public",
            "static": false,
            "lineNumber": 337,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param value\n * @param transform\n * @return {object} ConditionalExpression\n */",
            "args": [
              "value",
              "transform"
            ],
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "function __guard__(value, transform) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "button-editor.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 499,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "button-editor-path/legacy-color-check",
            "i18n!button-editor-path/nls/button-editor",
            "galileo-lib/modules/services/url-validator-service"
          ],
          "usedAs": [
            "_",
            "Backbone",
            "legacyColorCheck",
            "i18n",
            "UrlValidator"
          ],
          "moduleName": "button-model",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "button_model",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initClass'.",
            "code": "wfJD",
            "evidence": "static initClass() {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setColorAttr'.",
            "code": "wfJD",
            "evidence": "setColorAttr = function (that, colorAttr, type, newColor, options) {",
            "line": 34,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setColorAttr'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'constructor'.",
            "code": "wfJD",
            "evidence": "constructor() {",
            "line": 40,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'constructor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'fontSize'.",
            "code": "wfJD",
            "evidence": "this.fontSize = function (val, options) {",
            "line": 47,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'fontSize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_makeGetOrSet'.",
            "code": "wfJD",
            "evidence": "_makeGetOrSet(attr) {",
            "line": 61,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_makeGetOrSet'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_cleanURL'.",
            "code": "wfJD",
            "evidence": "_cleanURL(url) {",
            "line": 70,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_cleanURL'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'validate'.",
            "code": "wfJD",
            "evidence": "validate(attrs, options) {",
            "line": 77,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'validate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getError'.",
            "code": "wfJD",
            "evidence": "getError() {",
            "line": 85,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getError'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setLink'.",
            "code": "wfJD",
            "evidence": "setLink(val, options) {",
            "line": 90,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setLink'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toggleBold'.",
            "code": "wfJD",
            "evidence": "toggleBold() {",
            "line": 109,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toggleBold'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toggleItalic'.",
            "code": "wfJD",
            "evidence": "toggleItalic() {",
            "line": 112,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toggleItalic'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_toggle'.",
            "code": "wfJD",
            "evidence": "_toggle(propertyName, options) {",
            "line": 115,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_toggle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'usingLocalColors'.",
            "code": "wfJD",
            "evidence": "usingLocalColors() {",
            "line": 123,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'usingLocalColors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getBackgroundColor'.",
            "code": "wfJD",
            "evidence": "getBackgroundColor() {",
            "line": 126,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getBackgroundColor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setGlobalBackgroundColor'.",
            "code": "wfJD",
            "evidence": "setGlobalBackgroundColor(newColor, options) {",
            "line": 135,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setGlobalBackgroundColor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setLocalBackgroundColor'.",
            "code": "wfJD",
            "evidence": "setLocalBackgroundColor(newColor) {",
            "line": 138,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setLocalBackgroundColor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guard__'.",
            "code": "wfJD",
            "evidence": "function __guard__(value, transform) {",
            "line": 145,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guard__'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/button-model.js",
      "folderPath": "test-source/src",
      "fileName": "button-model.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "button-model",
      "name": "button-model",
      "camelName": "ButtonModel",
      "processedFilePath": "test-output/src/button-model.js",
      "mappedModuleName": "src/button-model",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/button-model~constructor": {
          "todos": [
            "RETURNWHAT"
          ],
          "returnType": "?",
          "type": "FunctionExpression",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 40,
          "line": "constructor() {",
          "comment": -1,
          "range": [
            1196,
            1855
          ],
          "name": "constructor",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/button-model",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 147,
        "requires": [
          "underscore",
          "backbone",
          "button-editor-path/legacy-color-check",
          "i18n!button-editor-path/nls/button-editor",
          "galileo-lib/modules/services/url-validator-service"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 4471,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./button-model",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "0": 8032
        },
        "methods": [
          {
            "name": "initClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "ButtonModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "static initClass() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setColorAttr",
            "visibility": "public",
            "static": false,
            "lineNumber": 34,
            "memberOf": "",
            "doclet": "/**\n * @param that\n * @param colorAttr\n * @param type\n * @param newColor\n * @param options\n */",
            "args": [
              "that",
              "colorAttr",
              "type",
              "newColor",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setColorAttr = function (that, colorAttr, type, newColor, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "constructor",
            "visibility": "public",
            "static": false,
            "lineNumber": 40,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": true,
            "line": "constructor() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "fontSize",
            "visibility": "public",
            "static": false,
            "lineNumber": 47,
            "memberOf": "this",
            "doclet": "/**\n * @param val\n * @param options\n */",
            "args": [
              "val",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "this.fontSize = function (val, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_makeGetOrSet",
            "visibility": "public",
            "static": false,
            "lineNumber": 61,
            "memberOf": "ButtonModel",
            "doclet": "/**\n * @private \n * @param attr\n * @return {function}\n */",
            "args": [
              "attr"
            ],
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "_makeGetOrSet(attr) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_cleanURL",
            "visibility": "public",
            "static": false,
            "lineNumber": 70,
            "memberOf": "ButtonModel",
            "doclet": "/**\n * @private \n * @param url\n */",
            "args": [
              "url"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_cleanURL(url) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "validate",
            "visibility": "public",
            "static": false,
            "lineNumber": 77,
            "memberOf": "ButtonModel",
            "doclet": "/**\n * @param attrs\n * @param options\n */",
            "args": [
              "attrs",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "validate(attrs, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getError",
            "visibility": "public",
            "static": false,
            "lineNumber": 85,
            "memberOf": "ButtonModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getError() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setLink",
            "visibility": "public",
            "static": false,
            "lineNumber": 90,
            "memberOf": "ButtonModel",
            "doclet": "/**\n * @param val\n * @param options\n */",
            "args": [
              "val",
              "options"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "setLink(val, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toggleBold",
            "visibility": "public",
            "static": false,
            "lineNumber": 109,
            "memberOf": "ButtonModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toggleBold() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toggleItalic",
            "visibility": "public",
            "static": false,
            "lineNumber": 112,
            "memberOf": "ButtonModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toggleItalic() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_toggle",
            "visibility": "public",
            "static": false,
            "lineNumber": 115,
            "memberOf": "ButtonModel",
            "doclet": "/**\n * @private \n * @param propertyName\n * @param options\n */",
            "args": [
              "propertyName",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_toggle(propertyName, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "usingLocalColors",
            "visibility": "public",
            "static": false,
            "lineNumber": 123,
            "memberOf": "ButtonModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "usingLocalColors() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getBackgroundColor",
            "visibility": "public",
            "static": false,
            "lineNumber": 126,
            "memberOf": "ButtonModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getBackgroundColor() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setGlobalBackgroundColor",
            "visibility": "public",
            "static": false,
            "lineNumber": 135,
            "memberOf": "ButtonModel",
            "doclet": "/**\n * @param newColor\n * @param options\n */",
            "args": [
              "newColor",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setGlobalBackgroundColor(newColor, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setLocalBackgroundColor",
            "visibility": "public",
            "static": false,
            "lineNumber": 138,
            "memberOf": "ButtonModel",
            "doclet": "/**\n * @param newColor\n */",
            "args": [
              "newColor"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setLocalBackgroundColor(newColor) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guard__",
            "visibility": "public",
            "static": false,
            "lineNumber": 145,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param value\n * @param transform\n * @return {object} ConditionalExpression\n */",
            "args": [
              "value",
              "transform"
            ],
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "function __guard__(value, transform) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "button-model.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 211,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "button-editor-path/button-model",
            "button-editor-path/move-handle-view",
            "backbone",
            "button-editor-path/lib/change-element-type.jquery"
          ],
          "usedAs": [
            "_",
            "ButtonModel",
            "MoveHandleView",
            "Backbone"
          ],
          "moduleName": "button-view",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "button_view",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'stripHTML'.",
            "code": "wfJD",
            "evidence": "$.fn.stripHTML = function () {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'stripHTML'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'constructor'.",
            "code": "wfJD",
            "evidence": "constructor(...args) {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'constructor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initClass'.",
            "code": "wfJD",
            "evidence": "static initClass() {",
            "line": 32,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "initialize(params) {",
            "line": 37,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'deactivate'.",
            "code": "wfJD",
            "evidence": "deactivate() {",
            "line": 44,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'deactivate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'onPossibleTextChange'.",
            "code": "wfJD",
            "evidence": "onPossibleTextChange(e) {",
            "line": 49,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'onPossibleTextChange'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'onKeyDown'.",
            "code": "wfJD",
            "evidence": "onKeyDown(e) {",
            "line": 54,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'onKeyDown'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isBoldAccelerator'.",
            "code": "wfJD",
            "evidence": "isBoldAccelerator(e) {",
            "line": 76,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isBoldAccelerator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isItalicAccelerator'.",
            "code": "wfJD",
            "evidence": "isItalicAccelerator(e) {",
            "line": 79,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isItalicAccelerator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isAccelerator'.",
            "code": "wfJD",
            "evidence": "isAccelerator(e) {",
            "line": 82,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isAccelerator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'preventSystemFormatting'.",
            "code": "wfJD",
            "evidence": "preventSystemFormatting(e) {",
            "line": 88,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'preventSystemFormatting'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'saveText'.",
            "code": "wfJD",
            "evidence": "saveText() {",
            "line": 93,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'saveText'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'editableContent'.",
            "code": "wfJD",
            "evidence": "editableContent(val) {",
            "line": 99,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'editableContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'update'.",
            "code": "wfJD",
            "evidence": "update(model, options) {",
            "line": 106,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'update'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "render() {",
            "line": 115,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getCalculatedCssProperties'.",
            "code": "wfJD",
            "evidence": "getCalculatedCssProperties($textContainer = this.findTextContainer()) {",
            "line": 148,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getCalculatedCssProperties'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'findTextContainer'.",
            "code": "wfJD",
            "evidence": "findTextContainer() {",
            "line": 157,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'findTextContainer'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'highlightBlock'.",
            "code": "wfJD",
            "evidence": "highlightBlock(toggle) {",
            "line": 164,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'highlightBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'publishHTML'.",
            "code": "wfJD",
            "evidence": "publishHTML() {",
            "line": 167,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'publishHTML'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guard__'.",
            "code": "wfJD",
            "evidence": "function __guard__(value, transform) {",
            "line": 174,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guard__'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/button-view.js",
      "folderPath": "test-source/src",
      "fileName": "button-view.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "button-view",
      "name": "button-view",
      "camelName": "ButtonView",
      "processedFilePath": "test-output/src/button-view.js",
      "mappedModuleName": "src/button-view",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/button-view~constructor": {
          "todos": [],
          "params": [
            null
          ],
          "type": "FunctionExpression",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 25,
          "line": "constructor(...args) {",
          "comment": -1,
          "range": [
            642,
            883
          ],
          "name": "constructor",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param undefined\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/button-view",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 176,
        "requires": [
          "underscore",
          "button-editor-path/button-model",
          "button-editor-path/move-handle-view",
          "backbone",
          "button-editor-path/lib/change-element-type.jquery"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 5836,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./button-view",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "0": 9958
        },
        "methods": [
          {
            "name": "stripHTML",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "$.fn",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "$.fn.stripHTML = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "constructor",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param undefined\n */",
            "args": [
              null
            ],
            "description": "",
            "classDeclarationFlag": true,
            "line": "constructor(...args) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 32,
            "memberOf": "ButtonView",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "static initClass() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 37,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @param params\n */",
            "args": [
              "params"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "initialize(params) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "deactivate",
            "visibility": "public",
            "static": false,
            "lineNumber": 44,
            "memberOf": "ButtonView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "deactivate() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "onPossibleTextChange",
            "visibility": "public",
            "static": false,
            "lineNumber": 49,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @param e\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "onPossibleTextChange(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "onKeyDown",
            "visibility": "public",
            "static": false,
            "lineNumber": 54,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @param e\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "onKeyDown(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isBoldAccelerator",
            "visibility": "public",
            "static": false,
            "lineNumber": 76,
            "memberOf": "ButtonView",
            "doclet": "/**\n * Returns true if is bold accelerator.\n * @param e\n * @return {object} boolean\n */",
            "args": [
              "e"
            ],
            "description": "Returns true if is bold accelerator.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "isBoldAccelerator(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isItalicAccelerator",
            "visibility": "public",
            "static": false,
            "lineNumber": 79,
            "memberOf": "ButtonView",
            "doclet": "/**\n * Returns true if is italic accelerator.\n * @param e\n * @return {object} boolean\n */",
            "args": [
              "e"
            ],
            "description": "Returns true if is italic accelerator.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "isItalicAccelerator(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isAccelerator",
            "visibility": "public",
            "static": false,
            "lineNumber": 82,
            "memberOf": "ButtonView",
            "doclet": "/**\n * Returns true if is accelerator.\n * @param e\n * @return {object} boolean\n */",
            "args": [
              "e"
            ],
            "description": "Returns true if is accelerator.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "isAccelerator(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "preventSystemFormatting",
            "visibility": "public",
            "static": false,
            "lineNumber": 88,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @param e\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "preventSystemFormatting(e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "saveText",
            "visibility": "public",
            "static": false,
            "lineNumber": 93,
            "memberOf": "ButtonView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "saveText() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "editableContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 99,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @param val\n */",
            "args": [
              "val"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "editableContent(val) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "update",
            "visibility": "public",
            "static": false,
            "lineNumber": 106,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @param model\n * @param options\n */",
            "args": [
              "model",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "update(model, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 115,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @return {object} ThisExpression\n */",
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "render() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getCalculatedCssProperties",
            "visibility": "public",
            "static": false,
            "lineNumber": 148,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @param undefined\n * @return {object} AssignmentExpression\n */",
            "args": [
              null
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "getCalculatedCssProperties($textContainer = this.findTextContainer()) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "findTextContainer",
            "visibility": "public",
            "static": false,
            "lineNumber": 157,
            "memberOf": "ButtonView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "findTextContainer() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "highlightBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 164,
            "memberOf": "ButtonView",
            "doclet": "/**\n * @param toggle\n */",
            "args": [
              "toggle"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "highlightBlock(toggle) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "publishHTML",
            "visibility": "public",
            "static": false,
            "lineNumber": 167,
            "memberOf": "ButtonView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "publishHTML() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guard__",
            "visibility": "public",
            "static": false,
            "lineNumber": 174,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param value\n * @param transform\n * @return {object} ConditionalExpression\n */",
            "args": [
              "value",
              "transform"
            ],
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "function __guard__(value, transform) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "button-view.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 290,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [],
          "moduleName": "delete-atomic-content",
          "AMD": false,
          "webPath": "/src",
          "convertedName": "delete_atomic_content",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'triggerRemoveBlock'.",
            "code": "wfJD",
            "evidence": "triggerRemoveBlock(layoutEditor, eventChannel, name) {",
            "line": 2,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'triggerRemoveBlock'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/delete-atomic-content.js",
      "folderPath": "test-source/src",
      "fileName": "delete-atomic-content.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "delete-atomic-content",
      "name": "delete-atomic-content",
      "camelName": "DeleteAtomicContent",
      "processedFilePath": "test-output/src/delete-atomic-content.js",
      "mappedModuleName": "src/delete-atomic-content",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/delete-atomic-content",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 6,
        "requires": [],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 206,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./delete-atomic-content",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [
          {
            "name": "triggerRemoveBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 2,
            "memberOf": "",
            "doclet": "/**\n * @param layoutEditor\n * @param eventChannel\n * @param name\n */",
            "args": [
              "layoutEditor",
              "eventChannel",
              "name"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "triggerRemoveBlock(layoutEditor, eventChannel, name) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": false,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "delete-atomic-content.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 15,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "backbone",
            "backbone",
            "underscore"
          ],
          "usedAs": [
            "Backbone"
          ],
          "moduleName": "editor-model",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "editor_model",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initClass'.",
            "code": "wfJD",
            "evidence": "static initClass() {",
            "line": 5,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'doneWasClicked'.",
            "code": "wfJD",
            "evidence": "doneWasClicked(val) {",
            "line": 11,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'doneWasClicked'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'linkWasTested'.",
            "code": "wfJD",
            "evidence": "linkWasTested(val) {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'linkWasTested'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/editor-model.js",
      "folderPath": "test-source/src",
      "fileName": "editor-model.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "editor-model",
      "name": "editor-model",
      "camelName": "EditorModel",
      "processedFilePath": "test-output/src/editor-model.js",
      "mappedModuleName": "src/editor-model",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/editor-model",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 27,
        "requires": [
          "backbone",
          "backbone",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 618,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./editor-model",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "0": 1037
        },
        "methods": [
          {
            "name": "initClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 5,
            "memberOf": "ButtonEditorModel",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "static initClass() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "doneWasClicked",
            "visibility": "public",
            "static": false,
            "lineNumber": 11,
            "memberOf": "ButtonEditorModel",
            "doclet": "/**\n * @param val\n */",
            "args": [
              "val"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "doneWasClicked(val) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "linkWasTested",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "ButtonEditorModel",
            "doclet": "/**\n * @param val\n */",
            "args": [
              "val"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "linkWasTested(val) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "editor-model.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 40,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery"
          ],
          "usedAs": [
            "$"
          ],
          "moduleName": "legacy-color-check",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "legacy_color_check",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'usesLegacyGlobalColors'.",
            "code": "wfJD",
            "evidence": "usesLegacyGlobalColors($markup) {",
            "line": 5,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'usesLegacyGlobalColors'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/legacy-color-check.js",
      "folderPath": "test-source/src",
      "fileName": "legacy-color-check.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "legacy-color-check",
      "name": "legacy-color-check",
      "camelName": "LegacyColorCheck",
      "processedFilePath": "test-output/src/legacy-color-check.js",
      "mappedModuleName": "src/legacy-color-check",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/legacy-color-check",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 25,
        "requires": [
          "jquery"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 622,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./legacy-color-check",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "0": 746
        },
        "methods": [
          {
            "name": "usesLegacyGlobalColors",
            "visibility": "public",
            "static": false,
            "lineNumber": 5,
            "memberOf": "LegacyColorCheck",
            "doclet": "/**\n * @param $markup\n */",
            "args": [
              "$markup"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "usesLegacyGlobalColors($markup) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "legacy-color-check.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 40,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "plugins/drag"
          ],
          "usedAs": [
            "_",
            "Backbone"
          ],
          "moduleName": "move-handle-view",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "move_handle_view",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initClass'.",
            "code": "wfJD",
            "evidence": "static initClass() {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "initialize(params) {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "render() {",
            "line": 22,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_preventDefault'.",
            "code": "wfJD",
            "evidence": "_preventDefault(event) {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_preventDefault'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guardMethod__'.",
            "code": "wfJD",
            "evidence": "function __guardMethod__(obj, methodName, transform) {",
            "line": 46,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guardMethod__'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/move-handle-view.js",
      "folderPath": "test-source/src",
      "fileName": "move-handle-view.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "move-handle-view",
      "name": "move-handle-view",
      "camelName": "MoveHandleView",
      "processedFilePath": "test-output/src/move-handle-view.js",
      "mappedModuleName": "src/move-handle-view",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/move-handle-view",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 52,
        "requires": [
          "underscore",
          "backbone",
          "plugins/drag"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 1473,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./move-handle-view",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "0": 2539
        },
        "methods": [
          {
            "name": "initClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "MoveHandleView",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "static initClass() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "MoveHandleView",
            "doclet": "/**\n * @param params\n * @return {object} AssignmentExpression\n */",
            "args": [
              "params"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "initialize(params) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 22,
            "memberOf": "MoveHandleView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "render() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_preventDefault",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "MoveHandleView",
            "doclet": "/**\n * @private \n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_preventDefault(event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guardMethod__",
            "visibility": "public",
            "static": false,
            "lineNumber": 46,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param obj\n * @param methodName\n * @param transform\n */",
            "args": [
              "obj",
              "methodName",
              "transform"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function __guardMethod__(obj, methodName, transform) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "move-handle-view.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 73,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery"
          ],
          "moduleName": "state-migrations",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "state_migrations",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'fromVersion'.",
            "code": "wfJD",
            "evidence": "fromVersion() {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'fromVersion'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toVersion'.",
            "code": "wfJD",
            "evidence": "toVersion() {",
            "line": 34,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toVersion'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'migrate'.",
            "code": "wfJD",
            "evidence": "migrate(state) {",
            "line": 41,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'migrate'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/state-migrations.js",
      "folderPath": "test-source/src",
      "fileName": "state-migrations.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "state-migrations",
      "name": "state-migrations",
      "camelName": "StateMigrations",
      "processedFilePath": "test-output/src/state-migrations.js",
      "mappedModuleName": "src/state-migrations",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/state-migrations",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 57,
        "requires": [
          "jquery"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 1372,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./state-migrations",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [
          {
            "name": "fromVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "fromVersion() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 34,
            "memberOf": "",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toVersion() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "migrate",
            "visibility": "public",
            "static": false,
            "lineNumber": 41,
            "memberOf": "",
            "doclet": "/**\n * @param state\n */",
            "args": [
              "state"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "migrate(state) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "state-migrations.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 80,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery"
          ],
          "usedAs": [
            "$"
          ],
          "moduleName": "change-element-type.jquery",
          "AMD": true,
          "webPath": "/src/lib",
          "convertedName": "change_element_type.jquery",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'changeElementType'.",
            "code": "wfJD",
            "evidence": "$.fn.changeElementType = function (newType) {",
            "line": 2,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'changeElementType'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/lib/change-element-type.jquery.js",
      "folderPath": "test-source/src/lib",
      "fileName": "change-element-type.jquery.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/lib",
      "webPath": "/src/lib",
      "libFile": false,
      "min": false,
      "realName": "change-element-type.jquery",
      "name": "change-element-type.jquery",
      "camelName": "ChangeElementType.jquery",
      "processedFilePath": "test-output/src/lib/change-element-type.jquery.js",
      "mappedModuleName": "src/lib/change-element-type.jquery",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/lib/change-element-type.jquery",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 13,
        "requires": [
          "jquery"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/lib",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 394,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./change-element-type",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [
          {
            "name": "changeElementType",
            "visibility": "public",
            "static": false,
            "lineNumber": 2,
            "memberOf": "$.fn",
            "doclet": "/**\n * @param newType\n */",
            "args": [
              "newType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "$.fn.changeElementType = function (newType) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/lib",
        "fileName": "change-element-type.jquery.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 26,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery"
          ],
          "moduleName": "galileo-jquery-ui-mobile-shim",
          "AMD": false,
          "webPath": "/src/lib",
          "convertedName": "galileo_jquery_ui_mobile_shim",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'mobileFriendly'.",
            "code": "wfJD",
            "evidence": "$.fn.mobileFriendly = function (pluginName, options) {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'mobileFriendly'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'createShim'.",
            "code": "wfJD",
            "evidence": "var createShim = function ($input, pluginName, options = {}) {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'createShim'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'constructor'.",
            "code": "wfJD",
            "evidence": "constructor($input, options = {}) {",
            "line": 75,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'constructor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'constructPlugin'.",
            "code": "wfJD",
            "evidence": "constructPlugin(options) {",
            "line": 107,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'constructPlugin'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'dropdownTemplate'.",
            "code": "wfJD",
            "evidence": "dropdownTemplate() {",
            "line": 113,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'dropdownTemplate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'optionTemplate'.",
            "code": "wfJD",
            "evidence": "optionTemplate(optionValue) {",
            "line": 125,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'optionTemplate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "render() {",
            "line": 139,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'selectOptionElement'.",
            "code": "wfJD",
            "evidence": "selectOptionElement(element) {",
            "line": 189,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'selectOptionElement'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'val'.",
            "code": "wfJD",
            "evidence": "val(val) {",
            "line": 204,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'val'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'positionDropdown'.",
            "code": "wfJD",
            "evidence": "positionDropdown() {",
            "line": 218,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'positionDropdown'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'scrollToSelectOption'.",
            "code": "wfJD",
            "evidence": "scrollToSelectOption() {",
            "line": 229,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'scrollToSelectOption'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'showDropdown'.",
            "code": "wfJD",
            "evidence": "showDropdown(element) {",
            "line": 236,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'showDropdown'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hideDropdown'.",
            "code": "wfJD",
            "evidence": "hideDropdown() {",
            "line": 244,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hideDropdown'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'onFocusOut'.",
            "code": "wfJD",
            "evidence": "onFocusOut() {",
            "line": 248,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'onFocusOut'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__range__'.",
            "code": "wfJD",
            "evidence": "function __range__(left, right, inclusive) {",
            "line": 257,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__range__'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guardMethod__'.",
            "code": "wfJD",
            "evidence": "function __guardMethod__(obj, methodName, transform) {",
            "line": 267,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guardMethod__'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guard__'.",
            "code": "wfJD",
            "evidence": "function __guard__(value, transform) {",
            "line": 275,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guard__'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/lib/galileo-jquery-ui-mobile-shim.js",
      "folderPath": "test-source/src/lib",
      "fileName": "galileo-jquery-ui-mobile-shim.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/lib",
      "webPath": "/src/lib",
      "libFile": false,
      "min": false,
      "realName": "galileo-jquery-ui-mobile-shim",
      "name": "galileo-jquery-ui-mobile-shim",
      "camelName": "GalileoJqueryUiMobileShim",
      "processedFilePath": "test-output/src/lib/galileo-jquery-ui-mobile-shim.js",
      "mappedModuleName": "src/lib/galileo-jquery-ui-mobile-shim",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/lib/galileo-jquery-ui-mobile-shim~constructor($input, options": {
          "todos": [
            "RETURNWHAT"
          ],
          "params": [
            "$input",
            null
          ],
          "returnType": "?",
          "type": "FunctionExpression",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 75,
          "line": "constructor($input, options = {}) {",
          "comment": -1,
          "range": [
            2358,
            3377
          ],
          "name": "constructor",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param $input\n * @param undefined\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/lib/galileo-jquery-ui-mobile-shim",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 277,
        "requires": [
          "jquery"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/lib",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 8637,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./galileo-jquery-ui-mobile-shim",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "0": 11692
        },
        "methods": [
          {
            "name": "mobileFriendly",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "$.fn",
            "doclet": "/**\n * @param pluginName\n * @param options\n * @return {object} ThisExpression\n */",
            "args": [
              "pluginName",
              "options"
            ],
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "$.fn.mobileFriendly = function (pluginName, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "createShim",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "",
            "doclet": "/**\n * @param $input\n * @param pluginName\n * @param undefined\n * @return {object} NewExpression\n */",
            "args": [
              "$input",
              "pluginName",
              null
            ],
            "description": "",
            "return": "NewExpression",
            "classDeclarationFlag": false,
            "line": "var createShim = function ($input, pluginName, options = {}) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "constructor",
            "visibility": "public",
            "static": false,
            "lineNumber": 75,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param $input\n * @param undefined\n */",
            "args": [
              "$input",
              null
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": true,
            "line": "constructor($input, options = {}) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "constructPlugin",
            "visibility": "public",
            "static": false,
            "lineNumber": 107,
            "memberOf": "SpinnerView",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "constructPlugin(options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "dropdownTemplate",
            "visibility": "public",
            "static": false,
            "lineNumber": 113,
            "memberOf": "SpinnerView",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "dropdownTemplate() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "optionTemplate",
            "visibility": "public",
            "static": false,
            "lineNumber": 125,
            "memberOf": "SpinnerView",
            "doclet": "/**\n * @param optionValue\n */",
            "args": [
              "optionValue"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "optionTemplate(optionValue) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 139,
            "memberOf": "SpinnerView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "render() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "selectOptionElement",
            "visibility": "public",
            "static": false,
            "lineNumber": 189,
            "memberOf": "SpinnerView",
            "doclet": "/**\n * @param element\n * @return {object} ThisExpression\n */",
            "args": [
              "element"
            ],
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "selectOptionElement(element) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "val",
            "visibility": "public",
            "static": false,
            "lineNumber": 204,
            "memberOf": "SpinnerView",
            "doclet": "/**\n * @param val\n */",
            "args": [
              "val"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "val(val) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "positionDropdown",
            "visibility": "public",
            "static": false,
            "lineNumber": 218,
            "memberOf": "SpinnerView",
            "doclet": "/**\n * @return {object} ThisExpression\n */",
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "positionDropdown() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "scrollToSelectOption",
            "visibility": "public",
            "static": false,
            "lineNumber": 229,
            "memberOf": "SpinnerView",
            "doclet": "/**\n * @return {object} ThisExpression\n */",
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "scrollToSelectOption() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "showDropdown",
            "visibility": "public",
            "static": false,
            "lineNumber": 236,
            "memberOf": "SpinnerView",
            "doclet": "/**\n * @param element\n * @return {object} ThisExpression\n */",
            "args": [
              "element"
            ],
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "showDropdown(element) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hideDropdown",
            "visibility": "public",
            "static": false,
            "lineNumber": 244,
            "memberOf": "SpinnerView",
            "doclet": "/**\n * @return {object} ThisExpression\n */",
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "hideDropdown() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "onFocusOut",
            "visibility": "public",
            "static": false,
            "lineNumber": 248,
            "memberOf": "SpinnerView",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "onFocusOut() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__range__",
            "visibility": "public",
            "static": false,
            "lineNumber": 257,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param left\n * @param right\n * @param inclusive\n */",
            "args": [
              "left",
              "right",
              "inclusive"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function __range__(left, right, inclusive) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guardMethod__",
            "visibility": "public",
            "static": false,
            "lineNumber": 267,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param obj\n * @param methodName\n * @param transform\n */",
            "args": [
              "obj",
              "methodName",
              "transform"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function __guardMethod__(obj, methodName, transform) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guard__",
            "visibility": "public",
            "static": false,
            "lineNumber": 275,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param value\n * @param transform\n * @return {object} ConditionalExpression\n */",
            "args": [
              "value",
              "transform"
            ],
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "function __guard__(value, transform) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": false,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/lib",
        "fileName": "galileo-jquery-ui-mobile-shim.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 377,
      "EMPTY": false
    }
  ],
  "path": "test-source",
  "timeInSeconds": 19.147,
  "outPath": "test-output",
  "testPath": "test-jstests",
  "docPath": "test-jsdocs",
  "resultsPath": "test-results"
}