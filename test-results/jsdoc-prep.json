{
  "results": [
    {
      "results": {
        "amdProc": {
          "requires": [],
          "moduleName": "no_module",
          "AMD": false,
          "webPath": ""
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'Fronum'.",
            "code": "wfJD",
            "evidence": "function Fronum() {",
            "line": 11,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'Fronum'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'chewBakka'.",
            "code": "wfJD",
            "evidence": "this.chewBakka = function() {",
            "line": 12,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'chewBakka'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'DonutView'.",
            "code": "wfJD",
            "evidence": "return function DonutView() {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'DonutView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'stupidFunction'.",
            "code": "wfJD",
            "evidence": "this[\"stupidFunction\"] = function() {",
            "line": 24,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'stupidFunction'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'worldPuzzle'.",
            "code": "wfJD",
            "evidence": "Fronum.prototype.worldPuzzle = function(toothache, tomato) {",
            "line": 52,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'worldPuzzle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'SecondClass'.",
            "code": "wfJD",
            "evidence": "function SecondClass() {}",
            "line": 57,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'SecondClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'fixTheWorld'.",
            "code": "wfJD",
            "evidence": "SecondClass.prototype.fixTheWorld = function(toothache, tomato) {",
            "line": 58,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'fixTheWorld'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": [],
        "trimProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/no-module.js",
      "folderPath": "test-source",
      "fileName": "no-module.js",
      "packagePath": "",
      "webPath": "",
      "libFile": false,
      "min": false,
      "realName": "no-module",
      "name": "no-module",
      "camelName": "NoModule",
      "processedFilePath": "test-output/no-module.js",
      "couldParseOriginalSource": true,
      "preprocessed": true,
      "jsDoccerProcData": {
        "lines": 142,
        "requires": [],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 3785,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./no-module",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "DonutView": 2519,
          "Component": 1678,
          "Fronum": 1597,
          "SecondClass": 1660
        },
        "methods": [
          {
            "name": "Fronum",
            "visibility": "public",
            "static": false,
            "lineNumber": 11,
            "memberOf": "",
            "doclet": "/**\n * Creates a new instance of class Fronum.\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function Fronum() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "chewBakka",
            "visibility": "public",
            "static": false,
            "lineNumber": 12,
            "memberOf": "this",
            "doclet": "/**\n * Chew bakka.\n * @return {function}\n */",
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "this.chewBakka = function() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "DonutView",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "",
            "doclet": "/**\n * Creates a new instance of class DonutView.\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "return function DonutView() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "stupidFunction",
            "visibility": "public",
            "static": false,
            "lineNumber": 24,
            "memberOf": "this",
            "doclet": "/**\n * The function is stupid but the comment is a valid doclet.\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
            "description": "\n The function is stupid but the comment is a valid doclet.\n",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "this[\"stupidFunction\"] = function() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "privateFunction",
            "visibility": "public",
            "static": false,
            "lineNumber": 41,
            "memberOf": "",
            "doclet": "/**\n * @private\n * @param a  \n * @param {Banana}  \n * @param {boolean}  \n * @return {String}\n */",
            "args": [
              "a",
              "b",
              "c"
            ],
            "description": "",
            "return": "{string}",
            "classDeclarationFlag": false,
            "line": "var privateFunction = function(a, b, c) {",
            "originalJsDocDescription": {
              "private": {
                "tag": "private",
                "line": 1,
                "lastLine": 1,
                "textStartsOnSameLine": true,
                "text": ""
              },
              "params": [
                {
                  "tag": "param",
                  "line": 2,
                  "lastLine": 3,
                  "textStartsOnSameLine": true,
                  "text": "a\n            A standard apple fruit."
                },
                {
                  "tag": "param",
                  "line": 4,
                  "lastLine": 5,
                  "textStartsOnSameLine": true,
                  "text": "{Banana}\n            b The Banana."
                },
                {
                  "tag": "param",
                  "line": 6,
                  "lastLine": 7,
                  "textStartsOnSameLine": true,
                  "text": "{boolean}\n            c"
                }
              ],
              "return": {
                "tag": "return",
                "line": 8,
                "lastLine": -1,
                "textStartsOnSameLine": true,
                "text": "{String}\n"
              }
            }
          },
          {
            "name": "worldPuzzle",
            "visibility": "public",
            "static": false,
            "lineNumber": 52,
            "memberOf": "Fronum.prototype",
            "doclet": "/**\n * @param toothache\n * @param tomato\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
            "args": [
              "toothache",
              "tomato"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Fronum.prototype.worldPuzzle = function(toothache, tomato) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "SecondClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 57,
            "memberOf": "",
            "doclet": "/**\n * Creates a new instance of class SecondClass.\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function SecondClass() {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "fixTheWorld",
            "visibility": "public",
            "static": false,
            "lineNumber": 58,
            "memberOf": "SecondClass.prototype",
            "doclet": "/**\n * Fix the world.\n * @param toothache\n * @param tomato\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
            "args": [
              "toothache",
              "tomato"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "SecondClass.prototype.fixTheWorld = function(toothache, tomato) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "Component",
            "visibility": "public",
            "static": false,
            "lineNumber": 64,
            "memberOf": "",
            "doclet": "/**\n * @constructs module:blue/component\n * @constructor\n * @param {PlainObject} options\n */",
            "args": [
              "cfgModel",
              "options"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "constructor: function Component(cfgModel, options) {",
            "originalJsDocDescription": {
              "constructs": {
                "tag": "constructs",
                "line": 1,
                "lastLine": 1,
                "textStartsOnSameLine": true,
                "text": "module:blue/component"
              },
              "params": [
                {
                  "tag": "param",
                  "line": 2,
                  "lastLine": -1,
                  "textStartsOnSameLine": true,
                  "text": "{PlainObject} options\n"
                }
              ]
            }
          }
        ],
        "is_module": false,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source",
        "fileName": "no-module.js",
        "strict": false
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 146
    }
  ],
  "path": "test-source",
  "timeInSeconds": 0.144,
  "outPath": "test-output",
  "testPath": "test-jstests",
  "docPath": "test-jsdocs",
  "resultsPath": "test-results"
}