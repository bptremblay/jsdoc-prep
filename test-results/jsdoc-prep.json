{
  "results": [
    {
      "results": {
        "amdProc": {
          "requires": [
            "./is",
            "./was",
            "./willBe"
          ],
          "moduleName": "zero_test",
          "AMD": true,
          "webPath": ""
        }
      },
      "errors": {
        "thirdPartyFilter": [],
        "minFilter": [],
        "badCharactersProc": [],
        "amdFilter": [],
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'zoo'.",
            "code": "wfJD",
            "evidence": "function zoo(z) {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'zoo'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'zoop'.",
            "code": "wfJD",
            "evidence": "function zoop(z) {",
            "line": 22,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'zoop'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'zoopsa'.",
            "code": "wfJD",
            "evidence": "function zoopsa(z) {",
            "line": 26,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'zoopsa'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'zoopsaArray'.",
            "code": "wfJD",
            "evidence": "function zoopsaArray(z) {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'zoopsaArray'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'zoopsaNumericExpression'.",
            "code": "wfJD",
            "evidence": "function zoopsaNumericExpression(z) {",
            "line": 34,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'zoopsaNumericExpression'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'zoopsaPrivateExpression'.",
            "code": "wfJD",
            "evidence": "function zoopsaPrivateExpression(z) {",
            "line": 38,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'zoopsaPrivateExpression'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'stupidFunction'.",
            "code": "wfJD",
            "evidence": "function stupidFunction() {",
            "line": 50,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'stupidFunction'."
          }
        ],
        "jsDocNameFixerProc": [],
        "jsDoc3PrepProc": [],
        "trimProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/zero-test.js",
      "folderPath": "test-source",
      "fileName": "zero-test.js",
      "packagePath": "",
      "webPath": "",
      "libFile": false,
      "min": false,
      "realName": "zero-test",
      "name": "zero-test",
      "camelName": "ZeroTest",
      "processedFilePath": "test-output/zero-test.js",
      "couldParseOriginalSource": true,
      "preprocessed": true,
      "jsDoccerProcData": {
        "lines": 92,
        "requires": [],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 1517,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./zero-test",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [
          {
            "name": "zoo",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "",
            "doclet": "/**\n * Zoo.\n * @param z\n */",
            "args": [
              "z"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "function zoo(z) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "zoop",
            "visibility": "public",
            "static": false,
            "lineNumber": 22,
            "memberOf": "",
            "doclet": "/**\n * Zoop.\n * @param z\n * @return {boolean}\n */",
            "args": [
              "z"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "function zoop(z) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "zoopsa",
            "visibility": "public",
            "static": false,
            "lineNumber": 26,
            "memberOf": "",
            "doclet": "/**\n * Zoopsa.\n * @param z\n */",
            "args": [
              "z"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "function zoopsa(z) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "zoopsaArray",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "",
            "doclet": "/**\n * Zoopsa array.\n * @param z\n * @return {array}\n */",
            "args": [
              "z"
            ],
            "description": "",
            "return": "{array}",
            "classDeclarationFlag": false,
            "line": "function zoopsaArray(z) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "zoopsaNumericExpression",
            "visibility": "public",
            "static": false,
            "lineNumber": 34,
            "memberOf": "",
            "doclet": "/**\n * Zoopsa numeric expression.\n * @param z\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
            "args": [
              "z"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function zoopsaNumericExpression(z) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "zoopsaPrivateExpression",
            "visibility": "public",
            "static": false,
            "lineNumber": 38,
            "memberOf": "",
            "doclet": "/**\n * Zoopsa private expression.\n * @param z\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
            "args": [
              "z"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function zoopsaPrivateExpression(z) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "zoopsax",
            "visibility": "public",
            "static": false,
            "lineNumber": 46,
            "memberOf": "",
            "doclet": "/**\n * @param z\n * @return A numeric mambo.\n */",
            "args": [
              "z"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function zoopsax(z) {",
            "originalJsDocDescription": {
              "return": {
                "tag": "return",
                "line": 1,
                "lastLine": -1,
                "textStartsOnSameLine": true,
                "text": "A numeric mambo.\n"
              }
            }
          },
          {
            "name": "stupidFunction",
            "visibility": "public",
            "static": false,
            "lineNumber": 50,
            "memberOf": "",
            "doclet": "/**\n * Stupid function.\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function stupidFunction() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "funkyFoo",
            "visibility": "public",
            "static": false,
            "lineNumber": 61,
            "memberOf": "",
            "doclet": "/**\n * @private\n * @param z\n * @return {string}\n */",
            "args": [
              "z"
            ],
            "description": "",
            "return": "{string}",
            "classDeclarationFlag": false,
            "line": "function funkyFoo(z) {",
            "originalJsDocDescription": {
              "private": {
                "tag": "private",
                "line": 1,
                "lastLine": -1,
                "textStartsOnSameLine": true,
                "text": "\n"
              }
            }
          },
          {
            "name": "funkyFood",
            "visibility": "public",
            "static": false,
            "lineNumber": 68,
            "memberOf": "",
            "doclet": "/**\n * @protected\n * @param z\n * @return {string}\n */",
            "args": [
              "z"
            ],
            "description": "",
            "return": "{string}",
            "classDeclarationFlag": false,
            "line": "function funkyFood(z) {",
            "originalJsDocDescription": {
              "protected": {
                "tag": "protected",
                "line": 1,
                "lastLine": -1,
                "textStartsOnSameLine": true,
                "text": "\n"
              }
            }
          },
          {
            "name": "funkyFoodle",
            "visibility": "public",
            "static": false,
            "lineNumber": 75,
            "memberOf": "",
            "doclet": "/**\n * @public\n * @param z\n * @return {string}\n */",
            "args": [
              "z"
            ],
            "description": "",
            "return": "{string}",
            "classDeclarationFlag": false,
            "line": "function funkyFoodle(z) {",
            "originalJsDocDescription": {
              "public": {
                "tag": "public",
                "line": 1,
                "lastLine": -1,
                "textStartsOnSameLine": true,
                "text": "\n"
              }
            }
          }
        ],
        "is_module": false,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source",
        "fileName": "zero-test.js",
        "strict": false
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 107
    }
  ],
  "path": "test-source",
  "timeInSeconds": 0.108,
  "outPath": "test-output",
  "testPath": "test-jstests",
  "docPath": "test-jsdocs",
  "resultsPath": "test-results"
}