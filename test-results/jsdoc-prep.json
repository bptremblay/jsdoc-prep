{
  "results": [
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "underscore",
            "backbone",
            "immutable",
            "image-editor-basic-path/constants",
            "image-editor-basic-path/lib/image-helpers",
            "galileo-lib/modules/services/url-validator-service",
            "galileo-lib/modules/services/usage-tracking",
            "galileo-lib/modules/services/customer-service",
            "galileo-lib/modules/services/placeholder-service"
          ],
          "usedAs": [
            "$",
            "_",
            "Backbone",
            "Immutable",
            "constants",
            "imageHelpers",
            "UrlValidator",
            "usageTracking",
            "customerService",
            "placeholderService"
          ],
          "moduleName": "state-model",
          "AMD": true,
          "webPath": "",
          "convertedName": "state_model",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasLogo'.",
            "code": "wfJD",
            "evidence": "let hasLogo = function (service) {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasLogo'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLogo'.",
            "code": "wfJD",
            "evidence": "let getLogo = function (service) {",
            "line": 40,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLogo'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initClass'.",
            "code": "wfJD",
            "evidence": "static initClass() {",
            "line": 53,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "initialize(attrs, options) {",
            "line": 81,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'validate'.",
            "code": "wfJD",
            "evidence": "validate(attrs, options) {",
            "line": 85,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'validate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getError'.",
            "code": "wfJD",
            "evidence": "getError() {",
            "line": 93,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getError'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setLink'.",
            "code": "wfJD",
            "evidence": "setLink(val) {",
            "line": 100,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setLink'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLink'.",
            "code": "wfJD",
            "evidence": "getLink() {",
            "line": 122,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLink'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLinkType'.",
            "code": "wfJD",
            "evidence": "getLinkType() {",
            "line": 129,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLinkType'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setLinkType'.",
            "code": "wfJD",
            "evidence": "setLinkType(linkType) {",
            "line": 132,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setLinkType'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toContext'.",
            "code": "wfJD",
            "evidence": "toContext() {",
            "line": 137,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toContext'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toImageViewRenderingContext'.",
            "code": "wfJD",
            "evidence": "toImageViewRenderingContext() {",
            "line": 160,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toImageViewRenderingContext'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_toImageContext'.",
            "code": "wfJD",
            "evidence": "_toImageContext() {",
            "line": 179,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_toImageContext'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getMagnificationForContext'.",
            "code": "wfJD",
            "evidence": "_getMagnificationForContext(context) {",
            "line": 184,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getMagnificationForContext'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isDefaultContent'.",
            "code": "wfJD",
            "evidence": "isDefaultContent() {",
            "line": 193,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isDefaultContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isPlaceholderImage'.",
            "code": "wfJD",
            "evidence": "isPlaceholderImage() {",
            "line": 200,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isPlaceholderImage'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isLogo'.",
            "code": "wfJD",
            "evidence": "isLogo() {",
            "line": 204,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isLogo'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLogoUrl'.",
            "code": "wfJD",
            "evidence": "getLogoUrl() {",
            "line": 207,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLogoUrl'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getEditorName'.",
            "code": "wfJD",
            "evidence": "getEditorName() {",
            "line": 210,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getEditorName'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getEditorType'.",
            "code": "wfJD",
            "evidence": "getEditorType() {",
            "line": 213,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getEditorType'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getImageType'.",
            "code": "wfJD",
            "evidence": "getImageType() {",
            "line": 216,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getImageType'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toDescriptor'.",
            "code": "wfJD",
            "evidence": "toDescriptor(editor, layoutEditor) {",
            "line": 219,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toDescriptor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setImage'.",
            "code": "wfJD",
            "evidence": "setImage(imageData) {",
            "line": 241,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setImage'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'resizeWell'.",
            "code": "wfJD",
            "evidence": "resizeWell(dimensions) {",
            "line": 272,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'resizeWell'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setMaxWidth'.",
            "code": "wfJD",
            "evidence": "setMaxWidth(maxWidth) {",
            "line": 278,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setMaxWidth'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'limitImageWidth'.",
            "code": "wfJD",
            "evidence": "limitImageWidth(widthLimit) {",
            "line": 286,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'limitImageWidth'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setMagnification'.",
            "code": "wfJD",
            "evidence": "setMagnification() {",
            "line": 308,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setMagnification'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setMagnification'.",
            "code": "wfJD",
            "evidence": "_setMagnification() {",
            "line": 319,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setMagnification'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setImageDimensions'.",
            "code": "wfJD",
            "evidence": "_setImageDimensions() {",
            "line": 326,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setImageDimensions'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasLink'.",
            "code": "wfJD",
            "evidence": "hasLink() {",
            "line": 350,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasLink'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'triggerImageOverlay'.",
            "code": "wfJD",
            "evidence": "triggerImageOverlay() {",
            "line": 353,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'triggerImageOverlay'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'triggerRemoveImageOverlay'.",
            "code": "wfJD",
            "evidence": "triggerRemoveImageOverlay() {",
            "line": 356,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'triggerRemoveImageOverlay'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setReplaceImageHover'.",
            "code": "wfJD",
            "evidence": "setReplaceImageHover(value) {",
            "line": 359,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setReplaceImageHover'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasReplaceImageHover'.",
            "code": "wfJD",
            "evidence": "hasReplaceImageHover() {",
            "line": 365,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasReplaceImageHover'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toPlatformState'.",
            "code": "wfJD",
            "evidence": "toPlatformState() {",
            "line": 368,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toPlatformState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setState'.",
            "code": "wfJD",
            "evidence": "setState(newState) {",
            "line": 374,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getImageUrlForEdit'.",
            "code": "wfJD",
            "evidence": "getImageUrlForEdit() {",
            "line": 378,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getImageUrlForEdit'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getImageUrlForState'.",
            "code": "wfJD",
            "evidence": "getImageUrlForState() {",
            "line": 381,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getImageUrlForState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasImageUrl'.",
            "code": "wfJD",
            "evidence": "hasImageUrl() {",
            "line": 384,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasImageUrl'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setImageUrl'.",
            "code": "wfJD",
            "evidence": "setImageUrl(url) {",
            "line": 387,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setImageUrl'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_transformImageUrlToEntity'.",
            "code": "wfJD",
            "evidence": "_transformImageUrlToEntity() {",
            "line": 393,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_transformImageUrlToEntity'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_imageUrlIsPassthroughEntity'.",
            "code": "wfJD",
            "evidence": "_imageUrlIsPassthroughEntity() {",
            "line": 398,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_imageUrlIsPassthroughEntity'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guard__'.",
            "code": "wfJD",
            "evidence": "function __guard__(value, transform) {",
            "line": 407,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guard__'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '__guardMethod__'.",
            "code": "wfJD",
            "evidence": "function __guardMethod__(obj, methodName, transform) {",
            "line": 411,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '__guardMethod__'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/state-model.js",
      "folderPath": "test-source",
      "fileName": "state-model.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "",
      "webPath": "",
      "libFile": false,
      "min": false,
      "realName": "state-model",
      "name": "state-model",
      "camelName": "StateModel",
      "processedFilePath": "test-output/state-model.js",
      "mappedModuleName": "state-model",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "state-model",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 417,
        "requires": [
          "jquery",
          "underscore",
          "backbone",
          "immutable",
          "image-editor-basic-path/constants",
          "image-editor-basic-path/lib/image-helpers",
          "galileo-lib/modules/services/url-validator-service",
          "galileo-lib/modules/services/usage-tracking",
          "galileo-lib/modules/services/customer-service",
          "galileo-lib/modules/services/placeholder-service"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 12967,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./state-model",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "0": 19048
        },
        "methods": [
          {
            "name": "hasLogo",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "",
            "doclet": "/**\n * Returns true if has logo.\n * @param service\n * @return {object} boolean\n */",
            "args": [
              "service"
            ],
            "description": "Returns true if has logo.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "let hasLogo = function (service) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLogo",
            "visibility": "public",
            "static": false,
            "lineNumber": 40,
            "memberOf": "",
            "doclet": "/**\n * @param service\n */",
            "args": [
              "service"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "let getLogo = function (service) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 53,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "classDeclarationFlag": false,
            "line": "static initClass() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 81,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param attrs\n * @param options\n * @return {object} AssignmentExpression\n */",
            "args": [
              "attrs",
              "options"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "initialize(attrs, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "validate",
            "visibility": "public",
            "static": false,
            "lineNumber": 85,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param attrs\n * @param options\n */",
            "args": [
              "attrs",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "validate(attrs, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getError",
            "visibility": "public",
            "static": false,
            "lineNumber": 93,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getError() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setLink",
            "visibility": "public",
            "static": false,
            "lineNumber": 100,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param val\n */",
            "args": [
              "val"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "setLink(val) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLink",
            "visibility": "public",
            "static": false,
            "lineNumber": 122,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getLink() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLinkType",
            "visibility": "public",
            "static": false,
            "lineNumber": 129,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getLinkType() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setLinkType",
            "visibility": "public",
            "static": false,
            "lineNumber": 132,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param linkType\n */",
            "args": [
              "linkType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setLinkType(linkType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toContext",
            "visibility": "public",
            "static": false,
            "lineNumber": 137,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toContext() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toImageViewRenderingContext",
            "visibility": "public",
            "static": false,
            "lineNumber": 160,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toImageViewRenderingContext() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_toImageContext",
            "visibility": "public",
            "static": false,
            "lineNumber": 179,
            "memberOf": "StateModel",
            "doclet": "/**\n * @private \n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_toImageContext() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getMagnificationForContext",
            "visibility": "public",
            "static": false,
            "lineNumber": 184,
            "memberOf": "StateModel",
            "doclet": "/**\n * @private \n * @param context\n */",
            "args": [
              "context"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_getMagnificationForContext(context) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isDefaultContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 193,
            "memberOf": "StateModel",
            "doclet": "/**\n * Returns true if is default content.\n * @return {object} boolean\n */",
            "description": "Returns true if is default content.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "isDefaultContent() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isPlaceholderImage",
            "visibility": "public",
            "static": false,
            "lineNumber": 200,
            "memberOf": "StateModel",
            "doclet": "/**\n * Returns true if is placeholder image.\n * @return {object} boolean\n */",
            "description": "Returns true if is placeholder image.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "isPlaceholderImage() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isLogo",
            "visibility": "public",
            "static": false,
            "lineNumber": 204,
            "memberOf": "StateModel",
            "doclet": "/**\n * Returns true if is logo.\n * @return {object} boolean\n */",
            "description": "Returns true if is logo.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "isLogo() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLogoUrl",
            "visibility": "public",
            "static": false,
            "lineNumber": 207,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getLogoUrl() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getEditorName",
            "visibility": "public",
            "static": false,
            "lineNumber": 210,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getEditorName() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getEditorType",
            "visibility": "public",
            "static": false,
            "lineNumber": 213,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getEditorType() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getImageType",
            "visibility": "public",
            "static": false,
            "lineNumber": 216,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getImageType() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toDescriptor",
            "visibility": "public",
            "static": false,
            "lineNumber": 219,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param editor\n * @param layoutEditor\n */",
            "args": [
              "editor",
              "layoutEditor"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toDescriptor(editor, layoutEditor) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setImage",
            "visibility": "public",
            "static": false,
            "lineNumber": 241,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param imageData\n */",
            "args": [
              "imageData"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setImage(imageData) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "resizeWell",
            "visibility": "public",
            "static": false,
            "lineNumber": 272,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param dimensions\n */",
            "args": [
              "dimensions"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "resizeWell(dimensions) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setMaxWidth",
            "visibility": "public",
            "static": false,
            "lineNumber": 278,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param maxWidth\n */",
            "args": [
              "maxWidth"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setMaxWidth(maxWidth) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "limitImageWidth",
            "visibility": "public",
            "static": false,
            "lineNumber": 286,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param widthLimit\n * @return {boolean}\n */",
            "args": [
              "widthLimit"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "limitImageWidth(widthLimit) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setMagnification",
            "visibility": "public",
            "static": false,
            "lineNumber": 308,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setMagnification() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setMagnification",
            "visibility": "public",
            "static": false,
            "lineNumber": 319,
            "memberOf": "StateModel",
            "doclet": "/**\n * @private \n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_setMagnification() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setImageDimensions",
            "visibility": "public",
            "static": false,
            "lineNumber": 326,
            "memberOf": "StateModel",
            "doclet": "/**\n * @private \n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "_setImageDimensions() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasLink",
            "visibility": "public",
            "static": false,
            "lineNumber": 350,
            "memberOf": "StateModel",
            "doclet": "/**\n * Returns true if has link.\n * @return {object} boolean\n */",
            "description": "Returns true if has link.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "hasLink() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "triggerImageOverlay",
            "visibility": "public",
            "static": false,
            "lineNumber": 353,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "triggerImageOverlay() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "triggerRemoveImageOverlay",
            "visibility": "public",
            "static": false,
            "lineNumber": 356,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "triggerRemoveImageOverlay() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setReplaceImageHover",
            "visibility": "public",
            "static": false,
            "lineNumber": 359,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param value\n */",
            "args": [
              "value"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setReplaceImageHover(value) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasReplaceImageHover",
            "visibility": "public",
            "static": false,
            "lineNumber": 365,
            "memberOf": "StateModel",
            "doclet": "/**\n * Returns true if has replace image hover.\n * @return {object} boolean\n */",
            "description": "Returns true if has replace image hover.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "hasReplaceImageHover() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toPlatformState",
            "visibility": "public",
            "static": false,
            "lineNumber": 368,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toPlatformState() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setState",
            "visibility": "public",
            "static": false,
            "lineNumber": 374,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param newState\n */",
            "args": [
              "newState"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setState(newState) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getImageUrlForEdit",
            "visibility": "public",
            "static": false,
            "lineNumber": 378,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getImageUrlForEdit() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getImageUrlForState",
            "visibility": "public",
            "static": false,
            "lineNumber": 381,
            "memberOf": "StateModel",
            "doclet": "",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getImageUrlForState() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasImageUrl",
            "visibility": "public",
            "static": false,
            "lineNumber": 384,
            "memberOf": "StateModel",
            "doclet": "/**\n * Returns true if has image url.\n * @return {object} boolean\n */",
            "description": "Returns true if has image url.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "hasImageUrl() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setImageUrl",
            "visibility": "public",
            "static": false,
            "lineNumber": 387,
            "memberOf": "StateModel",
            "doclet": "/**\n * @param url\n */",
            "args": [
              "url"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "setImageUrl(url) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_transformImageUrlToEntity",
            "visibility": "public",
            "static": false,
            "lineNumber": 393,
            "memberOf": "StateModel",
            "doclet": "/**\n * @private \n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "_transformImageUrlToEntity() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_imageUrlIsPassthroughEntity",
            "visibility": "public",
            "static": false,
            "lineNumber": 398,
            "memberOf": "StateModel",
            "doclet": "/**\n * @private \n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "_imageUrlIsPassthroughEntity() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guard__",
            "visibility": "public",
            "static": false,
            "lineNumber": 407,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param value\n * @param transform\n * @return {object} ConditionalExpression\n */",
            "args": [
              "value",
              "transform"
            ],
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "function __guard__(value, transform) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "__guardMethod__",
            "visibility": "public",
            "static": false,
            "lineNumber": 411,
            "memberOf": "",
            "doclet": "/**\n * @private \n * @param obj\n * @param methodName\n * @param transform\n */",
            "args": [
              "obj",
              "methodName",
              "transform"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "function __guardMethod__(obj, methodName, transform) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source",
        "fileName": "state-model.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 514,
      "EMPTY": false
    }
  ],
  "path": "test-source",
  "timeInSeconds": 0.627,
  "outPath": "test-output",
  "testPath": "test-jstests",
  "docPath": "test-jsdocs",
  "resultsPath": "test-results"
}