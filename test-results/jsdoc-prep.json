{
  "results": [
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "template-engine",
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "abstract-layout-generator",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "abstract_layout_generator",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'AbstractLayoutGenerator'.",
            "code": "wfJD",
            "evidence": "function AbstractLayoutGenerator(prototypeMarkupService) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'AbstractLayoutGenerator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getContentDecoratorName'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype._getContentDecoratorName = function ($protoLayout, contentType) {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getContentDecoratorName'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getProtoLayoutFor'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype._getProtoLayoutFor = function (contentType) {",
            "line": 12,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getProtoLayoutFor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createProtoLayoutModel'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype._createProtoLayoutModel = function (name, contentType) {",
            "line": 15,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createProtoLayoutModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createProtoColumnModel'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype._createProtoColumnModel = function (contentType) {",
            "line": 23,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createProtoColumnModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createContentDecoratorModel'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype._createContentDecoratorModel = function (name) {",
            "line": 35,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createContentDecoratorModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createLayoutAttibutes'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype._createLayoutAttibutes = function (protoLayout) {",
            "line": 40,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createLayoutAttibutes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_addLayoutAttributes'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype._addLayoutAttributes = function ($layout, attrs) {",
            "line": 46,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_addLayoutAttributes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_render'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype._render = function (markup, model) {",
            "line": 49,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isDocumentSupported'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype.isDocumentSupported = function (documentFeatures) {",
            "line": 52,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isDocumentSupported'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'createAbstractLayoutMarkup'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype.createAbstractLayoutMarkup = function (name, contentType) {",
            "line": 55,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'createAbstractLayoutMarkup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'insertContentMarkup'.",
            "code": "wfJD",
            "evidence": "AbstractLayoutGenerator.prototype.insertContentMarkup = function (layoutMarkup, contentName, contentType, contentMarkup) {",
            "line": 62,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'insertContentMarkup'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/abstract-layout-generator.js",
      "folderPath": "test-source/src",
      "fileName": "abstract-layout-generator.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "abstract-layout-generator",
      "name": "abstract-layout-generator",
      "camelName": "AbstractLayoutGenerator",
      "processedFilePath": "test-output/src/abstract-layout-generator.js",
      "mappedModuleName": "src/abstract-layout-generator",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/abstract-layout-generator~AbstractLayoutGenerator": {
          "todos": [],
          "params": [
            "prototypeMarkupService"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function AbstractLayoutGenerator(prototypeMarkupService) {",
          "comment": -1,
          "range": [
            283,
            407
          ],
          "name": "AbstractLayoutGenerator",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param prototypeMarkupService\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/abstract-layout-generator",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 72,
        "requires": [
          "jquery",
          "template-engine",
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 3398,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./abstract-layout-generator",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "AbstractLayoutGenerator": 2942
        },
        "methods": [
          {
            "name": "AbstractLayoutGenerator",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param prototypeMarkupService\n */",
            "args": [
              "prototypeMarkupService"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function AbstractLayoutGenerator(prototypeMarkupService) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getContentDecoratorName",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param $protoLayout\n * @param contentType\n * @return {boolean}\n */",
            "args": [
              "$protoLayout",
              "contentType"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype._getContentDecoratorName = function ($protoLayout, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getProtoLayoutFor",
            "visibility": "public",
            "static": false,
            "lineNumber": 12,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param contentType\n */",
            "args": [
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype._getProtoLayoutFor = function (contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createProtoLayoutModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 15,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param name\n * @param contentType\n */",
            "args": [
              "name",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype._createProtoLayoutModel = function (name, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createProtoColumnModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 23,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param contentType\n * @return {array}\n */",
            "args": [
              "contentType"
            ],
            "description": "",
            "return": "{array}",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype._createProtoColumnModel = function (contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createContentDecoratorModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 35,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param name\n */",
            "args": [
              "name"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype._createContentDecoratorModel = function (name) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createLayoutAttibutes",
            "visibility": "public",
            "static": false,
            "lineNumber": 40,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param protoLayout\n */",
            "args": [
              "protoLayout"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype._createLayoutAttibutes = function (protoLayout) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_addLayoutAttributes",
            "visibility": "public",
            "static": false,
            "lineNumber": 46,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param $layout\n * @param attrs\n */",
            "args": [
              "$layout",
              "attrs"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype._addLayoutAttributes = function ($layout, attrs) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_render",
            "visibility": "public",
            "static": false,
            "lineNumber": 49,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param markup\n * @param model\n */",
            "args": [
              "markup",
              "model"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype._render = function (markup, model) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isDocumentSupported",
            "visibility": "public",
            "static": false,
            "lineNumber": 52,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * Returns true if is document supported.\n * @param documentFeatures\n * @return {object} boolean\n */",
            "args": [
              "documentFeatures"
            ],
            "description": "Returns true if is document supported.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype.isDocumentSupported = function (documentFeatures) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "createAbstractLayoutMarkup",
            "visibility": "public",
            "static": false,
            "lineNumber": 55,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param name\n * @param contentType\n */",
            "args": [
              "name",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype.createAbstractLayoutMarkup = function (name, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "insertContentMarkup",
            "visibility": "public",
            "static": false,
            "lineNumber": 62,
            "memberOf": "AbstractLayoutGenerator.prototype",
            "doclet": "/**\n * @param layoutMarkup\n * @param contentName\n * @param contentType\n * @param contentMarkup\n */",
            "args": [
              "layoutMarkup",
              "contentName",
              "contentType",
              "contentMarkup"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "AbstractLayoutGenerator.prototype.insertContentMarkup = function (layoutMarkup, contentName, contentType, contentMarkup) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "abstract-layout-generator.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 143,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/index"
          ],
          "moduleName": "column-and-block-layout-editor",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "column_and_block_layout_editor",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/column-and-block-layout-editor.js",
      "folderPath": "test-source/src",
      "fileName": "column-and-block-layout-editor.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "column-and-block-layout-editor",
      "name": "column-and-block-layout-editor",
      "camelName": "ColumnAndBlockLayoutEditor",
      "processedFilePath": "test-output/src/column-and-block-layout-editor.js",
      "mappedModuleName": "src/column-and-block-layout-editor",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/column-and-block-layout-editor",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 3,
        "requires": [
          "column-and-block-layout-editor-path/index"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 134,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./column-and-block-layout-editor",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "column-and-block-layout-editor.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 8,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "galileo-lib/modules/events",
            "galileo-lib/modules/services/usage-tracking"
          ],
          "moduleName": "column-resize-manager",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "column_resize_manager",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ColumnResizeManager'.",
            "code": "wfJD",
            "evidence": "function ColumnResizeManager() {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ColumnResizeManager'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'startResizing'.",
            "code": "wfJD",
            "evidence": "ColumnResizeManager.prototype.startResizing = function (_lastXValue, resizeFunction, resetFunction, _donePromise) {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'startResizing'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isResizing'.",
            "code": "wfJD",
            "evidence": "ColumnResizeManager.prototype.isResizing = function () {",
            "line": 14,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isResizing'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setupMousemove'.",
            "code": "wfJD",
            "evidence": "ColumnResizeManager.prototype._setupMousemove = function (resizeFunction, resetFunction) {",
            "line": 17,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setupMousemove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_reset'.",
            "code": "wfJD",
            "evidence": "ColumnResizeManager.prototype._reset = function (resetFunction) {",
            "line": 34,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_reset'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/column-resize-manager.js",
      "folderPath": "test-source/src",
      "fileName": "column-resize-manager.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "column-resize-manager",
      "name": "column-resize-manager",
      "camelName": "ColumnResizeManager",
      "processedFilePath": "test-output/src/column-resize-manager.js",
      "mappedModuleName": "src/column-resize-manager",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/column-resize-manager~ColumnResizeManager": {
          "todos": [],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function ColumnResizeManager() {",
          "comment": -1,
          "range": [
            260,
            325
          ],
          "name": "ColumnResizeManager",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/column-resize-manager",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 48,
        "requires": [
          "jquery",
          "galileo-lib/modules/events",
          "galileo-lib/modules/services/usage-tracking"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 1971,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./column-resize-manager",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "ColumnResizeManager": 1847
        },
        "methods": [
          {
            "name": "ColumnResizeManager",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ColumnResizeManager() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "startResizing",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "ColumnResizeManager.prototype",
            "doclet": "/**\n * @param _lastXValue\n * @param resizeFunction\n * @param resetFunction\n * @param _donePromise\n */",
            "args": [
              "_lastXValue",
              "resizeFunction",
              "resetFunction",
              "_donePromise"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeManager.prototype.startResizing = function (_lastXValue, resizeFunction, resetFunction, _donePromise) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isResizing",
            "visibility": "public",
            "static": false,
            "lineNumber": 14,
            "memberOf": "ColumnResizeManager.prototype",
            "doclet": "/**\n * Returns true if is resizing.\n * @return {object} boolean\n */",
            "description": "Returns true if is resizing.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "ColumnResizeManager.prototype.isResizing = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setupMousemove",
            "visibility": "public",
            "static": false,
            "lineNumber": 17,
            "memberOf": "ColumnResizeManager.prototype",
            "doclet": "/**\n * @param resizeFunction\n * @param resetFunction\n * @return {function}\n */",
            "args": [
              "resizeFunction",
              "resetFunction"
            ],
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "ColumnResizeManager.prototype._setupMousemove = function (resizeFunction, resetFunction) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_reset",
            "visibility": "public",
            "static": false,
            "lineNumber": 34,
            "memberOf": "ColumnResizeManager.prototype",
            "doclet": "/**\n * @param resetFunction\n */",
            "args": [
              "resetFunction"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeManager.prototype._reset = function (resetFunction) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "column-resize-manager.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 82,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [],
          "moduleName": "constants",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "constants",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/constants.js",
      "folderPath": "test-source/src",
      "fileName": "constants.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "constants",
      "name": "constants",
      "camelName": "Constants",
      "processedFilePath": "test-output/src/constants.js",
      "mappedModuleName": "src/constants",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/constants",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 101,
        "requires": [],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 3162,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./constants",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "constants.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 105,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "underscore.string",
            "jquery",
            "backbone",
            "galileo-lib/modules/events",
            "galileo-lib/modules/galileo-event",
            "galileo-lib/modules/services/value-service",
            "galileo-lib/modules/services/style-service",
            "galileo-lib/modules/services/content-service",
            "galileo-lib/modules/services/instantiation-service",
            "galileo-lib/modules/services/prototype-markup-service",
            "galileo-lib/modules/services/operator",
            "galileo-lib/modules/services/document-feature-service",
            "galileo-lib/modules/managers/error-manager",
            "column-and-block-layout-editor-path/state-validator",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/import/importer",
            "column-and-block-layout-editor-path/abstract-layout-generator",
            "column-and-block-layout-editor-path/models/layout",
            "column-and-block-layout-editor-path/views/layout",
            "column-and-block-layout-editor-path/views/import",
            "column-and-block-layout-editor-path/views/publish",
            "column-and-block-layout-editor-path/views/vspace-flyout",
            "column-and-block-layout-editor-path/state-migrations",
            "column-and-block-layout-editor-path/template-state-migrations",
            "column-and-block-layout-editor-path/drag-drop/api",
            "i18n!column-and-block-layout-editor-path/nls/column-and-block-layout-editor"
          ],
          "moduleName": "index",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "index",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ColumnAndBlockLayoutEditor'.",
            "code": "wfJD",
            "evidence": "function ColumnAndBlockLayoutEditor(documentEditor, config) {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ColumnAndBlockLayoutEditor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'import'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor[\"import\"] = function (markup, contentEditors, actualCreate) {",
            "line": 20,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'import'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isAbstractLayoutGenerator'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.isAbstractLayoutGenerator = function (documentFeatures) {",
            "line": 23,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isAbstractLayoutGenerator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getAbstractLayoutMarkup'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.getAbstractLayoutMarkup = function (medium, contentType, name) {",
            "line": 26,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getAbstractLayoutMarkup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'insertContentMarkup'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.insertContentMarkup = function (layoutMarkup, contentMarkup, contentName, contentType) {",
            "line": 29,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'insertContentMarkup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getTemplateStateMigrations'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.getTemplateStateMigrations = function () {",
            "line": 32,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getTemplateStateMigrations'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'prepareState'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prepareState = function (state, options) {",
            "line": 35,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'prepareState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'acceptsContent'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.acceptsContent = function (content, type, uiEvent) {",
            "line": 46,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'acceptsContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.initialize = function (actualCreate) {",
            "line": 49,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_initDragDrop'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._initDragDrop = function () {",
            "line": 55,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_initDragDrop'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_initModel'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._initModel = function () {",
            "line": 59,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_initModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_initViews'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._initViews = function () {",
            "line": 68,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_initViews'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_initEvents'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._initEvents = function () {",
            "line": 83,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_initEvents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_resetEvents'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._resetEvents = function () {",
            "line": 110,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_resetEvents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_insertColumn'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._insertColumn = function (position, contentDescriptor, contentType) {",
            "line": 115,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_insertColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_insertBlock'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._insertBlock = function (columnIdx, position, contentDescriptor, contentType) {",
            "line": 131,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_insertBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_insertChildContent'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._insertChildContent = function (blockName, descriptor, contentType, decoratorType) {",
            "line": 145,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_insertChildContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_insertChildBlock'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._insertChildBlock = function (blockName, descriptor, contentType, decoratorType) {",
            "line": 159,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_insertChildBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_toggleContentVspace'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._toggleContentVspace = function (content) {",
            "line": 169,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_toggleContentVspace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_triggerTrack'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._triggerTrack = function (actionIdentifier, blockDetail, blockTitle) {",
            "line": 172,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_triggerTrack'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_triggerTrackInsert'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._triggerTrackInsert = function (contentType) {",
            "line": 179,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_triggerTrackInsert'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_triggerTrackMove'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._triggerTrackMove = function (contentTypes) {",
            "line": 182,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_triggerTrackMove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_triggerTrackInsertChildContent'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._triggerTrackInsertChildContent = function (contentType) {",
            "line": 188,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_triggerTrackInsertChildContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_triggerTrackInsertChildBlock'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._triggerTrackInsertChildBlock = function (contentTypes) {",
            "line": 191,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_triggerTrackInsertChildBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_stringifyContentTypes'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._stringifyContentTypes = function (contentTypes) {",
            "line": 197,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_stringifyContentTypes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_insertDescriptor'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._insertDescriptor = function (event, descriptor, contentType) {",
            "line": 205,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_insertDescriptor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_legacyRemoveContent'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._legacyRemoveContent = function (instanceId, contentName) {",
            "line": 210,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_legacyRemoveContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeContent'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._removeContent = function (contentName) {",
            "line": 218,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_moveColumn'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._moveColumn = function (position, blockDescriptor, contentType) {",
            "line": 221,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_moveColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_moveBlock'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._moveBlock = function (columnIdx, position, blockDescriptor, contentType) {",
            "line": 229,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_moveBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_reorderColumn'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._reorderColumn = function (position, blockDescriptor, contentType) {",
            "line": 237,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_reorderColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_reorderBlock'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._reorderBlock = function (columnIdx, position, blockDescriptor, contentType) {",
            "line": 244,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_reorderBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_deactivateAllEditors'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._deactivateAllEditors = function (actualDelete) {",
            "line": 251,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_deactivateAllEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getColumnWidths'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.getColumnWidths = function (contentDescriptor) {",
            "line": 264,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getColumnWidths'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setState'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.setState = function (state, presentation, options) {",
            "line": 267,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getState'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.getState = function () {",
            "line": 291,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getStateVersion'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.getStateVersion = function () {",
            "line": 303,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getStateVersion'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getVersionFromState'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.getVersionFromState = function (state) {",
            "line": 310,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getVersionFromState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'renderForEdit'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.renderForEdit = function () {",
            "line": 323,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'renderForEdit'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'renderForPublish'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.renderForPublish = function () {",
            "line": 327,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'renderForPublish'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'renderForImport'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.renderForImport = function () {",
            "line": 330,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'renderForImport'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getDefaultColorStyle'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.getDefaultColorStyle = function () {",
            "line": 333,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getDefaultColorStyle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getDefaultColorId'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.getDefaultColorId = function () {",
            "line": 342,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getDefaultColorId'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setStyles'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.setStyles = function (styles, initial) {};",
            "line": 345,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setStyles'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'activate'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.activate = function () {",
            "line": 346,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'activate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'deactivate'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.deactivate = function (deactivateChildren, actualDelete) {",
            "line": 350,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'deactivate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getChildEditors'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.getChildEditors = function () {",
            "line": 363,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getChildEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getStateMigrations'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.getStateMigrations = function () {",
            "line": 366,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getStateMigrations'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_documentSupportsTextWrapping'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._documentSupportsTextWrapping = function () {",
            "line": 369,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_documentSupportsTextWrapping'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_documentSupportsContentVspace'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._documentSupportsContentVspace = function () {",
            "line": 372,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_documentSupportsContentVspace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getFeatureSupport'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.getFeatureSupport = function () {",
            "line": 375,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getFeatureSupport'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_showContentVspaceFlyout'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._showContentVspaceFlyout = function (event, content) {",
            "line": 381,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_showContentVspaceFlyout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getContentModelAtClick'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype._getContentModelAtClick = function (event) {",
            "line": 388,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getContentModelAtClick'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'registerMenuActions'.",
            "code": "wfJD",
            "evidence": "ColumnAndBlockLayoutEditor.prototype.registerMenuActions = function (event, menuConfig) {",
            "line": 398,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'registerMenuActions'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/index.js",
      "folderPath": "test-source/src",
      "fileName": "index.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "index",
      "name": "index",
      "camelName": "Index",
      "processedFilePath": "test-output/src/index.js",
      "mappedModuleName": "src/index",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/index~ColumnAndBlockLayoutEditor": {
          "todos": [],
          "params": [
            "documentEditor",
            "config"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 13,
          "line": "function ColumnAndBlockLayoutEditor(documentEditor, config) {",
          "comment": -1,
          "range": [
            1816,
            2122
          ],
          "name": "ColumnAndBlockLayoutEditor",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param documentEditor\n * @param config\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/index",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 412,
        "requires": [
          "underscore",
          "underscore.string",
          "jquery",
          "backbone",
          "galileo-lib/modules/events",
          "galileo-lib/modules/galileo-event",
          "galileo-lib/modules/services/value-service",
          "galileo-lib/modules/services/style-service",
          "galileo-lib/modules/services/content-service",
          "galileo-lib/modules/services/instantiation-service",
          "galileo-lib/modules/services/prototype-markup-service",
          "galileo-lib/modules/services/operator",
          "galileo-lib/modules/services/document-feature-service",
          "galileo-lib/modules/managers/error-manager",
          "column-and-block-layout-editor-path/state-validator",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/import/importer",
          "column-and-block-layout-editor-path/abstract-layout-generator",
          "column-and-block-layout-editor-path/models/layout",
          "column-and-block-layout-editor-path/views/layout",
          "column-and-block-layout-editor-path/views/import",
          "column-and-block-layout-editor-path/views/publish",
          "column-and-block-layout-editor-path/views/vspace-flyout",
          "column-and-block-layout-editor-path/state-migrations",
          "column-and-block-layout-editor-path/template-state-migrations",
          "column-and-block-layout-editor-path/drag-drop/api",
          "i18n!column-and-block-layout-editor-path/nls/column-and-block-layout-editor"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 20658,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./index",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "ColumnAndBlockLayoutEditor": 19059
        },
        "methods": [
          {
            "name": "ColumnAndBlockLayoutEditor",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param documentEditor\n * @param config\n */",
            "args": [
              "documentEditor",
              "config"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ColumnAndBlockLayoutEditor(documentEditor, config) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "import",
            "visibility": "public",
            "static": false,
            "lineNumber": 20,
            "memberOf": "ColumnAndBlockLayoutEditor",
            "doclet": "/**\n * @param markup\n * @param contentEditors\n * @param actualCreate\n */",
            "args": [
              "markup",
              "contentEditors",
              "actualCreate"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor[\"import\"] = function (markup, contentEditors, actualCreate) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isAbstractLayoutGenerator",
            "visibility": "public",
            "static": false,
            "lineNumber": 23,
            "memberOf": "ColumnAndBlockLayoutEditor",
            "doclet": "/**\n * Returns true if is abstract layout generator.\n * @param documentFeatures\n * @return {object} boolean\n */",
            "args": [
              "documentFeatures"
            ],
            "description": "Returns true if is abstract layout generator.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.isAbstractLayoutGenerator = function (documentFeatures) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getAbstractLayoutMarkup",
            "visibility": "public",
            "static": false,
            "lineNumber": 26,
            "memberOf": "ColumnAndBlockLayoutEditor",
            "doclet": "/**\n * @param medium\n * @param contentType\n * @param name\n */",
            "args": [
              "medium",
              "contentType",
              "name"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.getAbstractLayoutMarkup = function (medium, contentType, name) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "insertContentMarkup",
            "visibility": "public",
            "static": false,
            "lineNumber": 29,
            "memberOf": "ColumnAndBlockLayoutEditor",
            "doclet": "/**\n * @param layoutMarkup\n * @param contentMarkup\n * @param contentName\n * @param contentType\n */",
            "args": [
              "layoutMarkup",
              "contentMarkup",
              "contentName",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.insertContentMarkup = function (layoutMarkup, contentMarkup, contentName, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getTemplateStateMigrations",
            "visibility": "public",
            "static": false,
            "lineNumber": 32,
            "memberOf": "ColumnAndBlockLayoutEditor",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.getTemplateStateMigrations = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "prepareState",
            "visibility": "public",
            "static": false,
            "lineNumber": 35,
            "memberOf": "ColumnAndBlockLayoutEditor",
            "doclet": "/**\n * @param state\n * @param options\n */",
            "args": [
              "state",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prepareState = function (state, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "acceptsContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 46,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param content\n * @param type\n * @param uiEvent\n */",
            "args": [
              "content",
              "type",
              "uiEvent"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.acceptsContent = function (content, type, uiEvent) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 49,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param actualCreate\n */",
            "args": [
              "actualCreate"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.initialize = function (actualCreate) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_initDragDrop",
            "visibility": "public",
            "static": false,
            "lineNumber": 55,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._initDragDrop = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_initModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 59,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._initModel = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_initViews",
            "visibility": "public",
            "static": false,
            "lineNumber": 68,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._initViews = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_initEvents",
            "visibility": "public",
            "static": false,
            "lineNumber": 83,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @return {function}\n */",
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._initEvents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_resetEvents",
            "visibility": "public",
            "static": false,
            "lineNumber": 110,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._resetEvents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_insertColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 115,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param position\n * @param contentDescriptor\n * @param contentType\n * @return {function}\n */",
            "args": [
              "position",
              "contentDescriptor",
              "contentType"
            ],
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._insertColumn = function (position, contentDescriptor, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_insertBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 131,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param columnIdx\n * @param position\n * @param contentDescriptor\n * @param contentType\n * @return {function}\n */",
            "args": [
              "columnIdx",
              "position",
              "contentDescriptor",
              "contentType"
            ],
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._insertBlock = function (columnIdx, position, contentDescriptor, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_insertChildContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 145,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param blockName\n * @param descriptor\n * @param contentType\n * @param decoratorType\n * @return {function}\n */",
            "args": [
              "blockName",
              "descriptor",
              "contentType",
              "decoratorType"
            ],
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._insertChildContent = function (blockName, descriptor, contentType, decoratorType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_insertChildBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 159,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param blockName\n * @param descriptor\n * @param contentType\n * @param decoratorType\n */",
            "args": [
              "blockName",
              "descriptor",
              "contentType",
              "decoratorType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._insertChildBlock = function (blockName, descriptor, contentType, decoratorType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_toggleContentVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 169,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param content\n */",
            "args": [
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._toggleContentVspace = function (content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_triggerTrack",
            "visibility": "public",
            "static": false,
            "lineNumber": 172,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param actionIdentifier\n * @param blockDetail\n * @param blockTitle\n */",
            "args": [
              "actionIdentifier",
              "blockDetail",
              "blockTitle"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._triggerTrack = function (actionIdentifier, blockDetail, blockTitle) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_triggerTrackInsert",
            "visibility": "public",
            "static": false,
            "lineNumber": 179,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param contentType\n */",
            "args": [
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._triggerTrackInsert = function (contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_triggerTrackMove",
            "visibility": "public",
            "static": false,
            "lineNumber": 182,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param contentTypes\n */",
            "args": [
              "contentTypes"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._triggerTrackMove = function (contentTypes) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_triggerTrackInsertChildContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 188,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param contentType\n */",
            "args": [
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._triggerTrackInsertChildContent = function (contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_triggerTrackInsertChildBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 191,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param contentTypes\n */",
            "args": [
              "contentTypes"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._triggerTrackInsertChildBlock = function (contentTypes) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_stringifyContentTypes",
            "visibility": "public",
            "static": false,
            "lineNumber": 197,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param contentTypes\n */",
            "args": [
              "contentTypes"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._stringifyContentTypes = function (contentTypes) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_insertDescriptor",
            "visibility": "public",
            "static": false,
            "lineNumber": 205,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param event\n * @param descriptor\n * @param contentType\n */",
            "args": [
              "event",
              "descriptor",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._insertDescriptor = function (event, descriptor, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_legacyRemoveContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 210,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param instanceId\n * @param contentName\n */",
            "args": [
              "instanceId",
              "contentName"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._legacyRemoveContent = function (instanceId, contentName) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 218,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param contentName\n */",
            "args": [
              "contentName"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._removeContent = function (contentName) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_moveColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 221,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param position\n * @param blockDescriptor\n * @param contentType\n */",
            "args": [
              "position",
              "blockDescriptor",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._moveColumn = function (position, blockDescriptor, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_moveBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 229,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param columnIdx\n * @param position\n * @param blockDescriptor\n * @param contentType\n */",
            "args": [
              "columnIdx",
              "position",
              "blockDescriptor",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._moveBlock = function (columnIdx, position, blockDescriptor, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_reorderColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 237,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param position\n * @param blockDescriptor\n * @param contentType\n */",
            "args": [
              "position",
              "blockDescriptor",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._reorderColumn = function (position, blockDescriptor, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_reorderBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 244,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param columnIdx\n * @param position\n * @param blockDescriptor\n * @param contentType\n */",
            "args": [
              "columnIdx",
              "position",
              "blockDescriptor",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._reorderBlock = function (columnIdx, position, blockDescriptor, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_deactivateAllEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 251,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param actualDelete\n */",
            "args": [
              "actualDelete"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._deactivateAllEditors = function (actualDelete) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getColumnWidths",
            "visibility": "public",
            "static": false,
            "lineNumber": 264,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param contentDescriptor\n * @return {array}\n */",
            "args": [
              "contentDescriptor"
            ],
            "description": "",
            "return": "{array}",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.getColumnWidths = function (contentDescriptor) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setState",
            "visibility": "public",
            "static": false,
            "lineNumber": 267,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param state\n * @param presentation\n * @param options\n */",
            "args": [
              "state",
              "presentation",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.setState = function (state, presentation, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getState",
            "visibility": "public",
            "static": false,
            "lineNumber": 291,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.getState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getStateVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 303,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.getStateVersion = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getVersionFromState",
            "visibility": "public",
            "static": false,
            "lineNumber": 310,
            "memberOf": "ColumnAndBlockLayoutEditor",
            "doclet": "/**\n * @param state\n */",
            "args": [
              "state"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.getVersionFromState = function (state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "renderForEdit",
            "visibility": "public",
            "static": false,
            "lineNumber": 323,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.renderForEdit = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "renderForPublish",
            "visibility": "public",
            "static": false,
            "lineNumber": 327,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.renderForPublish = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "renderForImport",
            "visibility": "public",
            "static": false,
            "lineNumber": 330,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.renderForImport = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getDefaultColorStyle",
            "visibility": "public",
            "static": false,
            "lineNumber": 333,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.getDefaultColorStyle = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getDefaultColorId",
            "visibility": "public",
            "static": false,
            "lineNumber": 342,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.getDefaultColorId = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setStyles",
            "visibility": "public",
            "static": false,
            "lineNumber": 345,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param styles\n * @param initial\n */",
            "args": [
              "styles",
              "initial"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.setStyles = function (styles, initial) {};",
            "originalJsDocDescription": {}
          },
          {
            "name": "activate",
            "visibility": "public",
            "static": false,
            "lineNumber": 346,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @return {object} ConditionalExpression\n */",
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.activate = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "deactivate",
            "visibility": "public",
            "static": false,
            "lineNumber": 350,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param deactivateChildren\n * @param actualDelete\n * @return {object} ConditionalExpression\n */",
            "args": [
              "deactivateChildren",
              "actualDelete"
            ],
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.deactivate = function (deactivateChildren, actualDelete) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getChildEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 363,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.getChildEditors = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getStateMigrations",
            "visibility": "public",
            "static": false,
            "lineNumber": 366,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.getStateMigrations = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_documentSupportsTextWrapping",
            "visibility": "public",
            "static": false,
            "lineNumber": 369,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._documentSupportsTextWrapping = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_documentSupportsContentVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 372,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._documentSupportsContentVspace = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getFeatureSupport",
            "visibility": "public",
            "static": false,
            "lineNumber": 375,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.getFeatureSupport = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_showContentVspaceFlyout",
            "visibility": "public",
            "static": false,
            "lineNumber": 381,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param event\n * @param content\n */",
            "args": [
              "event",
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._showContentVspaceFlyout = function (event, content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getContentModelAtClick",
            "visibility": "public",
            "static": false,
            "lineNumber": 388,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype._getContentModelAtClick = function (event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "registerMenuActions",
            "visibility": "public",
            "static": false,
            "lineNumber": 398,
            "memberOf": "ColumnAndBlockLayoutEditor.prototype",
            "doclet": "/**\n * @param event\n * @param menuConfig\n * @return {function}\n */",
            "args": [
              "event",
              "menuConfig"
            ],
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "ColumnAndBlockLayoutEditor.prototype.registerMenuActions = function (event, menuConfig) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "index.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 690,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore"
          ],
          "moduleName": "percentage-utils",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "percentage_utils",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'sumArray'.",
            "code": "wfJD",
            "evidence": "sumArray: function (array) {",
            "line": 5,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'sumArray'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'reducesToOne'.",
            "code": "wfJD",
            "evidence": "reducesToOne: function (array) {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'reducesToOne'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'remainingDecimal'.",
            "code": "wfJD",
            "evidence": "remainingDecimal: function (array, precision) {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'remainingDecimal'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'evenlySplit'.",
            "code": "wfJD",
            "evidence": "evenlySplit: function (quantity, precision) {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'evenlySplit'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'truncateDecimal'.",
            "code": "wfJD",
            "evidence": "truncateDecimal: function (decimal, precision) {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'truncateDecimal'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'adjustValues'.",
            "code": "wfJD",
            "evidence": "adjustValues: function (params) {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'adjustValues'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'truncateRoundAndReturn'.",
            "code": "wfJD",
            "evidence": "truncateRoundAndReturn: function (arrayOfDecimals, precision) {",
            "line": 49,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'truncateRoundAndReturn'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/percentage-utils.js",
      "folderPath": "test-source/src",
      "fileName": "percentage-utils.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "percentage-utils",
      "name": "percentage-utils",
      "camelName": "PercentageUtils",
      "processedFilePath": "test-output/src/percentage-utils.js",
      "mappedModuleName": "src/percentage-utils",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/percentage-utils",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 63,
        "requires": [
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 1994,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./percentage-utils",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [
          {
            "name": "sumArray",
            "visibility": "public",
            "static": false,
            "lineNumber": 5,
            "memberOf": "",
            "doclet": "/**\n * @param array\n */",
            "args": [
              "array"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "sumArray: function (array) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "reducesToOne",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "",
            "doclet": "/**\n * @param array\n */",
            "args": [
              "array"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "reducesToOne: function (array) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "remainingDecimal",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "",
            "doclet": "/**\n * @param array\n * @param precision\n */",
            "args": [
              "array",
              "precision"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "remainingDecimal: function (array, precision) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "evenlySplit",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "",
            "doclet": "/**\n * @param quantity\n * @param precision\n */",
            "args": [
              "quantity",
              "precision"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "evenlySplit: function (quantity, precision) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "truncateDecimal",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "",
            "doclet": "/**\n * @param decimal\n * @param precision\n * @return {object} UnaryExpression\n */",
            "args": [
              "decimal",
              "precision"
            ],
            "description": "",
            "return": "UnaryExpression",
            "classDeclarationFlag": false,
            "line": "truncateDecimal: function (decimal, precision) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "adjustValues",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "",
            "doclet": "/**\n * @param params\n */",
            "args": [
              "params"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "adjustValues: function (params) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "truncateRoundAndReturn",
            "visibility": "public",
            "static": false,
            "lineNumber": 49,
            "memberOf": "",
            "doclet": "/**\n * @param arrayOfDecimals\n * @param precision\n * @return {function}\n */",
            "args": [
              "arrayOfDecimals",
              "precision"
            ],
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "truncateRoundAndReturn: function (arrayOfDecimals, precision) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "percentage-utils.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 107,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "column-and-block-layout-editor-path/percentage-utils"
          ],
          "moduleName": "state-migrations",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "state_migrations",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'fromVersion'.",
            "code": "wfJD",
            "evidence": "fromVersion: function () {",
            "line": 47,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'fromVersion'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toVersion'.",
            "code": "wfJD",
            "evidence": "toVersion: function () {",
            "line": 54,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toVersion'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'migrate'.",
            "code": "wfJD",
            "evidence": "migrate: function (state) {",
            "line": 61,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'migrate'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/state-migrations.js",
      "folderPath": "test-source/src",
      "fileName": "state-migrations.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "state-migrations",
      "name": "state-migrations",
      "camelName": "StateMigrations",
      "processedFilePath": "test-output/src/state-migrations.js",
      "mappedModuleName": "src/state-migrations",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/state-migrations",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 72,
        "requires": [
          "jquery",
          "column-and-block-layout-editor-path/percentage-utils"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 1704,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./state-migrations",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [
          {
            "name": "fromVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 47,
            "memberOf": "",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "fromVersion: function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toVersion",
            "visibility": "public",
            "static": false,
            "lineNumber": 54,
            "memberOf": "",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "toVersion: function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "migrate",
            "visibility": "public",
            "static": false,
            "lineNumber": 61,
            "memberOf": "",
            "doclet": "/**\n * @param state\n * @return {object} AssignmentExpression\n */",
            "args": [
              "state"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "migrate: function (state) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "state-migrations.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 97,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "galileo-lib/modules/managers/error-manager"
          ],
          "moduleName": "state-validator",
          "AMD": true,
          "webPath": "/src",
          "convertedName": "state_validator",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'StateValidator'.",
            "code": "wfJD",
            "evidence": "function StateValidator() {}",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'StateValidator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getProtoLayoutAliases'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype._getProtoLayoutAliases = function (name) {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getProtoLayoutAliases'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_bootstrap'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype._bootstrap = function () {",
            "line": 15,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_bootstrap'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_validateObject'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype._validateObject = function (s) {",
            "line": 23,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_validateObject'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_validateKeys'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype._validateKeys = function (s) {",
            "line": 26,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_validateKeys'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_validateColumns'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype._validateColumns = function (s) {",
            "line": 33,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_validateColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'filteredState'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype.filteredState = function (state) {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'filteredState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'updatePrototypeLayoutAlias'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype.updatePrototypeLayoutAlias = function (prototypeMarkupService, state) {",
            "line": 45,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'updatePrototypeLayoutAlias'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isValid'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype.isValid = function (state) {",
            "line": 53,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isValid'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'removeBlocksWithNoMatchingState'.",
            "code": "wfJD",
            "evidence": "StateValidator.prototype.removeBlocksWithNoMatchingState = function (state, presentation) {",
            "line": 62,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'removeBlocksWithNoMatchingState'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/state-validator.js",
      "folderPath": "test-source/src",
      "fileName": "state-validator.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src",
      "webPath": "/src",
      "libFile": false,
      "min": false,
      "realName": "state-validator",
      "name": "state-validator",
      "camelName": "StateValidator",
      "processedFilePath": "test-output/src/state-validator.js",
      "mappedModuleName": "src/state-validator",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/state-validator~StateValidator": {
          "todos": [],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function StateValidator() {}",
          "comment": -1,
          "range": [
            201,
            229
          ],
          "name": "StateValidator",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/state-validator",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 109,
        "requires": [
          "underscore",
          "galileo-lib/modules/managers/error-manager"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 4298,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./state-validator",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "StateValidator": 3875
        },
        "methods": [
          {
            "name": "StateValidator",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function StateValidator() {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getProtoLayoutAliases",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * @param name\n */",
            "args": [
              "name"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype._getProtoLayoutAliases = function (name) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_bootstrap",
            "visibility": "public",
            "static": false,
            "lineNumber": 15,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype._bootstrap = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_validateObject",
            "visibility": "public",
            "static": false,
            "lineNumber": 23,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * @param s\n */",
            "args": [
              "s"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype._validateObject = function (s) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_validateKeys",
            "visibility": "public",
            "static": false,
            "lineNumber": 26,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * @param s\n */",
            "args": [
              "s"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype._validateKeys = function (s) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_validateColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 33,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * @param s\n */",
            "args": [
              "s"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype._validateColumns = function (s) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "filteredState",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * @param state\n */",
            "args": [
              "state"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype.filteredState = function (state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "updatePrototypeLayoutAlias",
            "visibility": "public",
            "static": false,
            "lineNumber": 45,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * @param prototypeMarkupService\n * @param state\n */",
            "args": [
              "prototypeMarkupService",
              "state"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype.updatePrototypeLayoutAlias = function (prototypeMarkupService, state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isValid",
            "visibility": "public",
            "static": false,
            "lineNumber": 53,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * Returns true if is valid.\n * @param state\n * @return {object} boolean\n */",
            "args": [
              "state"
            ],
            "description": "Returns true if is valid.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype.isValid = function (state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "removeBlocksWithNoMatchingState",
            "visibility": "public",
            "static": false,
            "lineNumber": 62,
            "memberOf": "StateValidator.prototype",
            "doclet": "/**\n * @param state\n * @param presentation\n */",
            "args": [
              "state",
              "presentation"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "StateValidator.prototype.removeBlocksWithNoMatchingState = function (state, presentation) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src",
        "fileName": "state-validator.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 164,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "galileo-lib/modules/events",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/drag-drop/helpers",
            "column-and-block-layout-editor-path/drag-drop/layout",
            "column-and-block-layout-editor-path/drag-drop/insert-marker",
            "column-and-block-layout-editor-path/drag-drop/block-model-dispatcher"
          ],
          "moduleName": "api",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "api",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'DragDropApi'.",
            "code": "wfJD",
            "evidence": "function DragDropApi(layoutEditor, model, view) {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'DragDropApi'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'init'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype.init = function () {",
            "line": 14,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'init'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'acceptsContent'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype.acceptsContent = function (content, type, uiEvent) {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'acceptsContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_initEvents'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype._initEvents = function () {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_initEvents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onDragenter'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype._onDragenter = function (content, type, uiEvent) {",
            "line": 31,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onDragenter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onDragover'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype._onDragover = function (content, type, uiEvent) {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onDragover'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onDrop'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype._onDrop = function (content, type, uiEvent) {",
            "line": 44,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onDrop'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onDragleave'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype._onDragleave = function (content, type, uiEvent) {",
            "line": 50,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onDragleave'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getAction'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype._getAction = function (uiEvent) {",
            "line": 53,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getAction'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_actionableEvent'.",
            "code": "wfJD",
            "evidence": "DragDropApi.prototype._actionableEvent = function (uiEvent) {",
            "line": 59,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_actionableEvent'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/api.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "api.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "api",
      "name": "api",
      "camelName": "Api",
      "processedFilePath": "test-output/src/drag-drop/api.js",
      "mappedModuleName": "src/drag-drop/api",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/drag-drop/api~DragDropApi": {
          "todos": [],
          "params": [
            "layoutEditor",
            "model",
            "view"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function DragDropApi(layoutEditor, model, view) {",
          "comment": -1,
          "range": [
            553,
            844
          ],
          "name": "DragDropApi",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param layoutEditor\n * @param model\n * @param view\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/api",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 68,
        "requires": [
          "galileo-lib/modules/events",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/drag-drop/helpers",
          "column-and-block-layout-editor-path/drag-drop/layout",
          "column-and-block-layout-editor-path/drag-drop/insert-marker",
          "column-and-block-layout-editor-path/drag-drop/block-model-dispatcher"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 3189,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./api",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "DragDropApi": 3265
        },
        "methods": [
          {
            "name": "DragDropApi",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param layoutEditor\n * @param model\n * @param view\n */",
            "args": [
              "layoutEditor",
              "model",
              "view"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function DragDropApi(layoutEditor, model, view) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "init",
            "visibility": "public",
            "static": false,
            "lineNumber": 14,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype.init = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "acceptsContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @param content\n * @param type\n * @param uiEvent\n * @return {boolean}\n */",
            "args": [
              "content",
              "type",
              "uiEvent"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype.acceptsContent = function (content, type, uiEvent) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_initEvents",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype._initEvents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onDragenter",
            "visibility": "public",
            "static": false,
            "lineNumber": 31,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @param content\n * @param type\n * @param uiEvent\n * @return {object} AssignmentExpression\n */",
            "args": [
              "content",
              "type",
              "uiEvent"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype._onDragenter = function (content, type, uiEvent) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onDragover",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @param content\n * @param type\n * @param uiEvent\n */",
            "args": [
              "content",
              "type",
              "uiEvent"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype._onDragover = function (content, type, uiEvent) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onDrop",
            "visibility": "public",
            "static": false,
            "lineNumber": 44,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @param content\n * @param type\n * @param uiEvent\n */",
            "args": [
              "content",
              "type",
              "uiEvent"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype._onDrop = function (content, type, uiEvent) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onDragleave",
            "visibility": "public",
            "static": false,
            "lineNumber": 50,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @param content\n * @param type\n * @param uiEvent\n */",
            "args": [
              "content",
              "type",
              "uiEvent"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype._onDragleave = function (content, type, uiEvent) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getAction",
            "visibility": "public",
            "static": false,
            "lineNumber": 53,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @param uiEvent\n */",
            "args": [
              "uiEvent"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype._getAction = function (uiEvent) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_actionableEvent",
            "visibility": "public",
            "static": false,
            "lineNumber": 59,
            "memberOf": "DragDropApi.prototype",
            "doclet": "/**\n * @param uiEvent\n */",
            "args": [
              "uiEvent"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropApi.prototype._actionableEvent = function (uiEvent) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "api.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 138,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "block-model-dispatcher",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "block_model_dispatcher",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'BlockModelDispatcher'.",
            "code": "wfJD",
            "evidence": "function BlockModelDispatcher(eventEmitter) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'BlockModelDispatcher'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'dispatch'.",
            "code": "wfJD",
            "evidence": "BlockModelDispatcher.prototype.dispatch = function (content, type, dropAction) {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'dispatch'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/block-model-dispatcher.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "block-model-dispatcher.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "block-model-dispatcher",
      "name": "block-model-dispatcher",
      "camelName": "BlockModelDispatcher",
      "processedFilePath": "test-output/src/drag-drop/block-model-dispatcher.js",
      "mappedModuleName": "src/drag-drop/block-model-dispatcher",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/drag-drop/block-model-dispatcher~BlockModelDispatcher": {
          "todos": [],
          "params": [
            "eventEmitter"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function BlockModelDispatcher(eventEmitter) {",
          "comment": -1,
          "range": [
            239,
            330
          ],
          "name": "BlockModelDispatcher",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param eventEmitter\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/block-model-dispatcher",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 27,
        "requires": [
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 1585,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./block-model-dispatcher",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "BlockModelDispatcher": 1564
        },
        "methods": [
          {
            "name": "BlockModelDispatcher",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param eventEmitter\n */",
            "args": [
              "eventEmitter"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function BlockModelDispatcher(eventEmitter) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "dispatch",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "BlockModelDispatcher.prototype",
            "doclet": "/**\n * @param content\n * @param type\n * @param dropAction\n */",
            "args": [
              "content",
              "type",
              "dropAction"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModelDispatcher.prototype.dispatch = function (content, type, dropAction) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "block-model-dispatcher.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 47,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/constants",
            "backbone",
            "underscore"
          ],
          "moduleName": "block",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "block",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'DragDropBlock'.",
            "code": "wfJD",
            "evidence": "function DragDropBlock() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'DragDropBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isMove'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype.isMove = function () {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isMove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isReorder'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype.isReorder = function () {",
            "line": 22,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isReorder'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceColumnIndex'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype.getSourceColumnIndex = function () {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceColumnIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceBlockIndex'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype.getSourceBlockIndex = function () {",
            "line": 28,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceBlockIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getAction'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype.getAction = function (x, y) {",
            "line": 31,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getAction'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getBlockIndexForY'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype._getBlockIndexForY = function (y) {",
            "line": 41,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getBlockIndexForY'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getBlockIndexModifierForY'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype._getBlockIndexModifierForY = function (y) {",
            "line": 46,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getBlockIndexModifierForY'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_sourceContentInDifferentLayoutPosition'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype._sourceContentInDifferentLayoutPosition = function () {",
            "line": 58,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_sourceContentInDifferentLayoutPosition'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_willChangeLayout'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype._willChangeLayout = function () {",
            "line": 64,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_willChangeLayout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getDirection'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype._getDirection = function (y) {",
            "line": 67,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getDirection'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getActionIdentifier'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype._getActionIdentifier = function (y) {",
            "line": 76,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getActionIdentifier'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_shouldDoNothing'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype._shouldDoNothing = function (y) {",
            "line": 88,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_shouldDoNothing'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_sourceBlockIsDestinationBlock'.",
            "code": "wfJD",
            "evidence": "DragDropBlock.prototype._sourceBlockIsDestinationBlock = function (y) {",
            "line": 94,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_sourceBlockIsDestinationBlock'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/block.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "block.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "block",
      "name": "block",
      "camelName": "Block",
      "processedFilePath": "test-output/src/drag-drop/block.js",
      "mappedModuleName": "src/drag-drop/block",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/drag-drop/block~DragDropBlock": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function DragDropBlock() {",
          "comment": -1,
          "range": [
            273,
            378
          ],
          "name": "DragDropBlock",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/block",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 99,
        "requires": [
          "column-and-block-layout-editor-path/constants",
          "backbone",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 3833,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./block",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "DragDropBlock": 3995
        },
        "methods": [
          {
            "name": "DragDropBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function DragDropBlock() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isMove",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * Returns true if is move.\n * @return {object} boolean\n */",
            "description": "Returns true if is move.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype.isMove = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isReorder",
            "visibility": "public",
            "static": false,
            "lineNumber": 22,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * Returns true if is reorder.\n * @return {object} boolean\n */",
            "description": "Returns true if is reorder.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype.isReorder = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceColumnIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype.getSourceColumnIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceBlockIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 28,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype.getSourceBlockIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getAction",
            "visibility": "public",
            "static": false,
            "lineNumber": 31,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @param x\n * @param y\n */",
            "args": [
              "x",
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype.getAction = function (x, y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getBlockIndexForY",
            "visibility": "public",
            "static": false,
            "lineNumber": 41,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @param y\n */",
            "args": [
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype._getBlockIndexForY = function (y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getBlockIndexModifierForY",
            "visibility": "public",
            "static": false,
            "lineNumber": 46,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @param y\n * @return {object} UnaryExpression\n */",
            "args": [
              "y"
            ],
            "description": "",
            "return": "UnaryExpression",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype._getBlockIndexModifierForY = function (y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_sourceContentInDifferentLayoutPosition",
            "visibility": "public",
            "static": false,
            "lineNumber": 58,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype._sourceContentInDifferentLayoutPosition = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_willChangeLayout",
            "visibility": "public",
            "static": false,
            "lineNumber": 64,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype._willChangeLayout = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getDirection",
            "visibility": "public",
            "static": false,
            "lineNumber": 67,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @param y\n */",
            "args": [
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype._getDirection = function (y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getActionIdentifier",
            "visibility": "public",
            "static": false,
            "lineNumber": 76,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @param y\n */",
            "args": [
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype._getActionIdentifier = function (y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_shouldDoNothing",
            "visibility": "public",
            "static": false,
            "lineNumber": 88,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @param y\n * @return {boolean}\n */",
            "args": [
              "y"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype._shouldDoNothing = function (y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_sourceBlockIsDestinationBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 94,
            "memberOf": "DragDropBlock.prototype",
            "doclet": "/**\n * @param y\n */",
            "args": [
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlock.prototype._sourceBlockIsDestinationBlock = function (y) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "block.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 170,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/drag-drop/block"
          ],
          "moduleName": "blocks",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "blocks",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'DragDropBlocks'.",
            "code": "wfJD",
            "evidence": "function DragDropBlocks() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'DragDropBlocks'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.initialize = function (rawBlocks, options) {",
            "line": 11,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isMove'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.isMove = function () {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isMove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isReorder'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.isReorder = function () {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isReorder'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceColumnIndex'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.getSourceColumnIndex = function () {",
            "line": 22,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceColumnIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceBlockIndex'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.getSourceBlockIndex = function () {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceBlockIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'sourceIsChild'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.sourceIsChild = function () {",
            "line": 28,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'sourceIsChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getStackableBlock'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.getStackableBlock = function (y) {",
            "line": 31,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getStackableBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getBlock'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.getBlock = function (y) {",
            "line": 34,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getColumnId'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype.getColumnId = function () {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getColumnId'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_buildBlock'.",
            "code": "wfJD",
            "evidence": "DragDropBlocks.prototype._buildBlock = function (block, idx, blocks) {",
            "line": 42,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_buildBlock'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/blocks.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "blocks.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "blocks",
      "name": "blocks",
      "camelName": "Blocks",
      "processedFilePath": "test-output/src/drag-drop/blocks.js",
      "mappedModuleName": "src/drag-drop/blocks",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/drag-drop/blocks~DragDropBlocks": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function DragDropBlocks() {",
          "comment": -1,
          "range": [
            305,
            467
          ],
          "name": "DragDropBlocks",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/blocks",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 52,
        "requires": [
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/drag-drop/block"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 2057,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./blocks",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "DragDropBlocks": 2279
        },
        "methods": [
          {
            "name": "DragDropBlocks",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function DragDropBlocks() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 11,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * @param rawBlocks\n * @param options\n */",
            "args": [
              "rawBlocks",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.initialize = function (rawBlocks, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isMove",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * Returns true if is move.\n * @return {object} boolean\n */",
            "description": "Returns true if is move.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.isMove = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isReorder",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * Returns true if is reorder.\n * @return {object} boolean\n */",
            "description": "Returns true if is reorder.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.isReorder = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceColumnIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 22,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.getSourceColumnIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceBlockIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.getSourceBlockIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "sourceIsChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 28,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.sourceIsChild = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getStackableBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 31,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * @param y\n * @return {boolean}\n */",
            "args": [
              "y"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.getStackableBlock = function (y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 34,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * @param y\n */",
            "args": [
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.getBlock = function (y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getColumnId",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype.getColumnId = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_buildBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 42,
            "memberOf": "DragDropBlocks.prototype",
            "doclet": "/**\n * @param block\n * @param idx\n * @param blocks\n * @return {object} AssignmentExpression\n */",
            "args": [
              "block",
              "idx",
              "blocks"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "DragDropBlocks.prototype._buildBlock = function (block, idx, blocks) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "blocks.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 104,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "backbone",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/drag-drop/helpers",
            "column-and-block-layout-editor-path/drag-drop/blocks",
            "underscore"
          ],
          "moduleName": "column",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "column",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'DragDropColumn'.",
            "code": "wfJD",
            "evidence": "function DragDropColumn() {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'DragDropColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.initialize = function (attributes, options) {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceColumnIndex'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.getSourceColumnIndex = function () {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceColumnIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceBlockIndex'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.getSourceBlockIndex = function () {",
            "line": 33,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceBlockIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isMove'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.isMove = function () {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isMove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isReorder'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.isReorder = function () {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isReorder'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'sourceIsChild'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.sourceIsChild = function () {",
            "line": 42,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'sourceIsChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getAction'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.getAction = function (x, y) {",
            "line": 45,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getAction'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getColX'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.getColX = function (layoutXCoordinate) {",
            "line": 54,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getColX'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isStackable'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype.isStackable = function () {",
            "line": 57,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isStackable'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getColumnIndexForX'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._getColumnIndexForX = function (x) {",
            "line": 60,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getColumnIndexForX'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getColumnIndexModifierForX'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._getColumnIndexModifierForX = function (x) {",
            "line": 65,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getColumnIndexModifierForX'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_sourceContentInDifferentLayoutPosition'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._sourceContentInDifferentLayoutPosition = function () {",
            "line": 77,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_sourceContentInDifferentLayoutPosition'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_willChangeLayout'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._willChangeLayout = function () {",
            "line": 83,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_willChangeLayout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_sourceColumnIsDestinationColumn'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._sourceColumnIsDestinationColumn = function (x) {",
            "line": 86,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_sourceColumnIsDestinationColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_columnIsReorderable'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._columnIsReorderable = function (x) {",
            "line": 89,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_columnIsReorderable'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_shouldReorderColumn'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._shouldReorderColumn = function (x) {",
            "line": 92,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_shouldReorderColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_shouldDoNothing'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._shouldDoNothing = function (x) {",
            "line": 95,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_shouldDoNothing'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getXOffset'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._getXOffset = function (x) {",
            "line": 98,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getXOffset'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getBlockAction'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._getBlockAction = function (x, y) {",
            "line": 105,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getBlockAction'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getColumnAction'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._getColumnAction = function (x) {",
            "line": 110,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getColumnAction'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getDirection'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._getDirection = function (x) {",
            "line": 118,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getDirection'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getActionIdentifier'.",
            "code": "wfJD",
            "evidence": "DragDropColumn.prototype._getActionIdentifier = function (x) {",
            "line": 125,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getActionIdentifier'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/column.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "column.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "column",
      "name": "column",
      "camelName": "Column",
      "processedFilePath": "test-output/src/drag-drop/column.js",
      "mappedModuleName": "src/drag-drop/column",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/drag-drop/column~DragDropColumn": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 7,
          "line": "function DragDropColumn() {",
          "comment": -1,
          "range": [
            419,
            526
          ],
          "name": "DragDropColumn",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/column",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 139,
        "requires": [
          "backbone",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/drag-drop/helpers",
          "column-and-block-layout-editor-path/drag-drop/blocks",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 5486,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./column",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "DragDropColumn": 5688
        },
        "methods": [
          {
            "name": "DragDropColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function DragDropColumn() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param attributes\n * @param options\n */",
            "args": [
              "attributes",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.initialize = function (attributes, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceColumnIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.getSourceColumnIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceBlockIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 33,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.getSourceBlockIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isMove",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * Returns true if is move.\n * @return {object} boolean\n */",
            "description": "Returns true if is move.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.isMove = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isReorder",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * Returns true if is reorder.\n * @return {object} boolean\n */",
            "description": "Returns true if is reorder.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.isReorder = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "sourceIsChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 42,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.sourceIsChild = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getAction",
            "visibility": "public",
            "static": false,
            "lineNumber": 45,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n * @param y\n */",
            "args": [
              "x",
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.getAction = function (x, y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getColX",
            "visibility": "public",
            "static": false,
            "lineNumber": 54,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param layoutXCoordinate\n */",
            "args": [
              "layoutXCoordinate"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.getColX = function (layoutXCoordinate) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isStackable",
            "visibility": "public",
            "static": false,
            "lineNumber": 57,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * Returns true if is stackable.\n * @return {object} boolean\n */",
            "description": "Returns true if is stackable.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype.isStackable = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getColumnIndexForX",
            "visibility": "public",
            "static": false,
            "lineNumber": 60,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._getColumnIndexForX = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getColumnIndexModifierForX",
            "visibility": "public",
            "static": false,
            "lineNumber": 65,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n * @return {object} UnaryExpression\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "UnaryExpression",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._getColumnIndexModifierForX = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_sourceContentInDifferentLayoutPosition",
            "visibility": "public",
            "static": false,
            "lineNumber": 77,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._sourceContentInDifferentLayoutPosition = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_willChangeLayout",
            "visibility": "public",
            "static": false,
            "lineNumber": 83,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._willChangeLayout = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_sourceColumnIsDestinationColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 86,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._sourceColumnIsDestinationColumn = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_columnIsReorderable",
            "visibility": "public",
            "static": false,
            "lineNumber": 89,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n * @return {boolean}\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._columnIsReorderable = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_shouldReorderColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 92,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n * @return {boolean}\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._shouldReorderColumn = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_shouldDoNothing",
            "visibility": "public",
            "static": false,
            "lineNumber": 95,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n * @return {boolean}\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._shouldDoNothing = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getXOffset",
            "visibility": "public",
            "static": false,
            "lineNumber": 98,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._getXOffset = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getBlockAction",
            "visibility": "public",
            "static": false,
            "lineNumber": 105,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n * @param y\n */",
            "args": [
              "x",
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._getBlockAction = function (x, y) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getColumnAction",
            "visibility": "public",
            "static": false,
            "lineNumber": 110,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._getColumnAction = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getDirection",
            "visibility": "public",
            "static": false,
            "lineNumber": 118,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._getDirection = function (x) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getActionIdentifier",
            "visibility": "public",
            "static": false,
            "lineNumber": 125,
            "memberOf": "DragDropColumn.prototype",
            "doclet": "/**\n * @param x\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumn.prototype._getActionIdentifier = function (x) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "column.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 244,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/drag-drop/column"
          ],
          "moduleName": "columns",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "columns",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'DragDropColumns'.",
            "code": "wfJD",
            "evidence": "function DragDropColumns() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'DragDropColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.initialize = function (rawColumns, options) {",
            "line": 11,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isMultiColumn'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.isMultiColumn = function () {",
            "line": 15,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isMultiColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'atMaxColumns'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.atMaxColumns = function () {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'atMaxColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isMove'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.isMove = function () {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isMove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isReorder'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.isReorder = function () {",
            "line": 24,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isReorder'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isReorderColumn'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.isReorderColumn = function () {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isReorderColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'sourceIsChild'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.sourceIsChild = function () {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'sourceIsChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceColumnIndex'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.getSourceColumnIndex = function () {",
            "line": 33,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceColumnIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceBlockIndex'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.getSourceBlockIndex = function () {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceBlockIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_buildColumn'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype._buildColumn = function (column, idx, columns) {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_buildColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getColumn'.",
            "code": "wfJD",
            "evidence": "DragDropColumns.prototype.getColumn = function (x) {",
            "line": 48,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getColumn'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/columns.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "columns.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "columns",
      "name": "columns",
      "camelName": "Columns",
      "processedFilePath": "test-output/src/drag-drop/columns.js",
      "mappedModuleName": "src/drag-drop/columns",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/drag-drop/columns~DragDropColumns": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function DragDropColumns() {",
          "comment": -1,
          "range": [
            312,
            478
          ],
          "name": "DragDropColumns",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/columns",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 55,
        "requires": [
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/drag-drop/column"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 2254,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./columns",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "DragDropColumns": 2482
        },
        "methods": [
          {
            "name": "DragDropColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function DragDropColumns() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 11,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * @param rawColumns\n * @param options\n */",
            "args": [
              "rawColumns",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.initialize = function (rawColumns, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isMultiColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 15,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * Returns true if is multi column.\n * @return {object} boolean\n */",
            "description": "Returns true if is multi column.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.isMultiColumn = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "atMaxColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.atMaxColumns = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isMove",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * Returns true if is move.\n * @return {object} boolean\n */",
            "description": "Returns true if is move.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.isMove = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isReorder",
            "visibility": "public",
            "static": false,
            "lineNumber": 24,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * Returns true if is reorder.\n * @return {object} boolean\n */",
            "description": "Returns true if is reorder.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.isReorder = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isReorderColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * Returns true if is reorder column.\n * @return {object} boolean\n */",
            "description": "Returns true if is reorder column.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.isReorderColumn = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "sourceIsChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.sourceIsChild = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceColumnIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 33,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.getSourceColumnIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceBlockIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.getSourceBlockIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_buildColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * @param column\n * @param idx\n * @param columns\n * @return {object} AssignmentExpression\n */",
            "args": [
              "column",
              "idx",
              "columns"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype._buildColumn = function (column, idx, columns) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 48,
            "memberOf": "DragDropColumns.prototype",
            "doclet": "/**\n * @param x\n */",
            "args": [
              "x"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropColumns.prototype.getColumn = function (x) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "columns.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 111,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "helpers",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "helpers",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'actionableEvent'.",
            "code": "wfJD",
            "evidence": "actionableEvent: function (uiEvent, width, height, offset) {",
            "line": 3,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'actionableEvent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'within'.",
            "code": "wfJD",
            "evidence": "within: function (position, dimension, offset, offsetCap) {",
            "line": 12,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'within'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getRelativeX'.",
            "code": "wfJD",
            "evidence": "getRelativeX: function (uiEvent, leftOffset) {",
            "line": 26,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getRelativeX'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getRelativeY'.",
            "code": "wfJD",
            "evidence": "getRelativeY: function (uiEvent, topOffset) {",
            "line": 29,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getRelativeY'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getRelativePoint'.",
            "code": "wfJD",
            "evidence": "getRelativePoint: function (uiEvent, offset) {",
            "line": 32,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getRelativePoint'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/helpers.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "helpers.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "helpers",
      "name": "helpers",
      "camelName": "Helpers",
      "processedFilePath": "test-output/src/drag-drop/helpers.js",
      "mappedModuleName": "src/drag-drop/helpers",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/helpers",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 39,
        "requires": [
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 1420,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./helpers",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [
          {
            "name": "actionableEvent",
            "visibility": "public",
            "static": false,
            "lineNumber": 3,
            "memberOf": "",
            "doclet": "/**\n * @param uiEvent\n * @param width\n * @param height\n * @param offset\n * @return {boolean}\n */",
            "args": [
              "uiEvent",
              "width",
              "height",
              "offset"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "actionableEvent: function (uiEvent, width, height, offset) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "within",
            "visibility": "public",
            "static": false,
            "lineNumber": 12,
            "memberOf": "",
            "doclet": "/**\n * @param position\n * @param dimension\n * @param offset\n * @param offsetCap\n * @return {boolean}\n */",
            "args": [
              "position",
              "dimension",
              "offset",
              "offsetCap"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "within: function (position, dimension, offset, offsetCap) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getRelativeX",
            "visibility": "public",
            "static": false,
            "lineNumber": 26,
            "memberOf": "",
            "doclet": "/**\n * @param uiEvent\n * @param leftOffset\n */",
            "args": [
              "uiEvent",
              "leftOffset"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getRelativeX: function (uiEvent, leftOffset) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getRelativeY",
            "visibility": "public",
            "static": false,
            "lineNumber": 29,
            "memberOf": "",
            "doclet": "/**\n * @param uiEvent\n * @param topOffset\n */",
            "args": [
              "uiEvent",
              "topOffset"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getRelativeY: function (uiEvent, topOffset) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getRelativePoint",
            "visibility": "public",
            "static": false,
            "lineNumber": 32,
            "memberOf": "",
            "doclet": "/**\n * @param uiEvent\n * @param offset\n */",
            "args": [
              "uiEvent",
              "offset"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "getRelativePoint: function (uiEvent, offset) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "helpers.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 76,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "jquery",
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "insert-marker",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "insert_marker",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'InsertionMarker'.",
            "code": "wfJD",
            "evidence": "function InsertionMarker(view) {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'InsertionMarker'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'showMarker'.",
            "code": "wfJD",
            "evidence": "InsertionMarker.prototype.showMarker = function (dropAction) {",
            "line": 11,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'showMarker'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'removeAll'.",
            "code": "wfJD",
            "evidence": "InsertionMarker.prototype.removeAll = function () {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'removeAll'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_insertColumnMarker'.",
            "code": "wfJD",
            "evidence": "InsertionMarker.prototype._insertColumnMarker = function (dropAction) {",
            "line": 31,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_insertColumnMarker'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_insertBlockMarker'.",
            "code": "wfJD",
            "evidence": "InsertionMarker.prototype._insertBlockMarker = function (dropAction) {",
            "line": 37,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_insertBlockMarker'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_repeatAction'.",
            "code": "wfJD",
            "evidence": "InsertionMarker.prototype._repeatAction = function (dropAction) {",
            "line": 44,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_repeatAction'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/insert-marker.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "insert-marker.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "insert-marker",
      "name": "insert-marker",
      "camelName": "InsertMarker",
      "processedFilePath": "test-output/src/drag-drop/insert-marker.js",
      "mappedModuleName": "src/drag-drop/insert-marker",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/drag-drop/insert-marker~InsertionMarker": {
          "todos": [],
          "params": [
            "view"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 7,
          "line": "function InsertionMarker(view) {",
          "comment": -1,
          "range": [
            657,
            753
          ],
          "name": "InsertionMarker",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param view\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/insert-marker",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 49,
        "requires": [
          "underscore",
          "jquery",
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 2504,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./insert-marker",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "InsertionMarker": 2582
        },
        "methods": [
          {
            "name": "InsertionMarker",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param view\n */",
            "args": [
              "view"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function InsertionMarker(view) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "showMarker",
            "visibility": "public",
            "static": false,
            "lineNumber": 11,
            "memberOf": "InsertionMarker.prototype",
            "doclet": "/**\n * @param dropAction\n */",
            "args": [
              "dropAction"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "InsertionMarker.prototype.showMarker = function (dropAction) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "removeAll",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "InsertionMarker.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "InsertionMarker.prototype.removeAll = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_insertColumnMarker",
            "visibility": "public",
            "static": false,
            "lineNumber": 31,
            "memberOf": "InsertionMarker.prototype",
            "doclet": "/**\n * @param dropAction\n */",
            "args": [
              "dropAction"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "InsertionMarker.prototype._insertColumnMarker = function (dropAction) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_insertBlockMarker",
            "visibility": "public",
            "static": false,
            "lineNumber": 37,
            "memberOf": "InsertionMarker.prototype",
            "doclet": "/**\n * @param dropAction\n */",
            "args": [
              "dropAction"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "InsertionMarker.prototype._insertBlockMarker = function (dropAction) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_repeatAction",
            "visibility": "public",
            "static": false,
            "lineNumber": 44,
            "memberOf": "InsertionMarker.prototype",
            "doclet": "/**\n * @param dropAction\n * @return {boolean}\n */",
            "args": [
              "dropAction"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "InsertionMarker.prototype._repeatAction = function (dropAction) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "insert-marker.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 88,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/drag-drop/columns"
          ],
          "moduleName": "layout",
          "AMD": true,
          "webPath": "/src/drag-drop",
          "convertedName": "layout",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'DragDropLayout'.",
            "code": "wfJD",
            "evidence": "function DragDropLayout() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'DragDropLayout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.initialize = function (attributes, options) {",
            "line": 9,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isMove'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.isMove = function () {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isMove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isReorder'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.isReorder = function () {",
            "line": 24,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isReorder'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isReorderColumn'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.isReorderColumn = function () {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isReorderColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'sourceIsMovableColumn'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.sourceIsMovableColumn = function () {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'sourceIsMovableColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'sourceIsDestination'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.sourceIsDestination = function () {",
            "line": 33,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'sourceIsDestination'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'sourceIsChild'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.sourceIsChild = function () {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'sourceIsChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceColumnIndex'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.getSourceColumnIndex = function () {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceColumnIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getSourceBlockIndex'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.getSourceBlockIndex = function () {",
            "line": 42,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getSourceBlockIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'atMaxColumns'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.atMaxColumns = function () {",
            "line": 45,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'atMaxColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getWidth'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.getWidth = function () {",
            "line": 48,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getWidth'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getHeight'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.getHeight = function () {",
            "line": 51,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getHeight'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getAction'.",
            "code": "wfJD",
            "evidence": "DragDropLayout.prototype.getAction = function (x, y) {",
            "line": 54,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getAction'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/drag-drop/layout.js",
      "folderPath": "test-source/src/drag-drop",
      "fileName": "layout.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/drag-drop",
      "webPath": "/src/drag-drop",
      "libFile": false,
      "min": false,
      "realName": "layout",
      "name": "layout",
      "camelName": "Layout",
      "processedFilePath": "test-output/src/drag-drop/layout.js",
      "mappedModuleName": "src/drag-drop/layout",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/drag-drop/layout~DragDropLayout": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function DragDropLayout() {",
          "comment": -1,
          "range": [
            369,
            476
          ],
          "name": "DragDropLayout",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/drag-drop/layout",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 61,
        "requires": [
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/drag-drop/columns"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 2400,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./layout",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "DragDropLayout": 2443
        },
        "methods": [
          {
            "name": "DragDropLayout",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function DragDropLayout() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 9,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @param attributes\n * @param options\n */",
            "args": [
              "attributes",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.initialize = function (attributes, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isMove",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * Returns true if is move.\n * @return {object} boolean\n */",
            "description": "Returns true if is move.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.isMove = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isReorder",
            "visibility": "public",
            "static": false,
            "lineNumber": 24,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * Returns true if is reorder.\n * @return {object} boolean\n */",
            "description": "Returns true if is reorder.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.isReorder = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isReorderColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * Returns true if is reorder column.\n * @return {object} boolean\n */",
            "description": "Returns true if is reorder column.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.isReorderColumn = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "sourceIsMovableColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.sourceIsMovableColumn = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "sourceIsDestination",
            "visibility": "public",
            "static": false,
            "lineNumber": 33,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.sourceIsDestination = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "sourceIsChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.sourceIsChild = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceColumnIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.getSourceColumnIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getSourceBlockIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 42,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.getSourceBlockIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "atMaxColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 45,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @return {object} UnaryExpression\n */",
            "description": "",
            "return": "UnaryExpression",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.atMaxColumns = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getWidth",
            "visibility": "public",
            "static": false,
            "lineNumber": 48,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.getWidth = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getHeight",
            "visibility": "public",
            "static": false,
            "lineNumber": 51,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.getHeight = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getAction",
            "visibility": "public",
            "static": false,
            "lineNumber": 54,
            "memberOf": "DragDropLayout.prototype",
            "doclet": "/**\n * @param x\n * @param y\n */",
            "args": [
              "x",
              "y"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "DragDropLayout.prototype.getAction = function (x, y) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/drag-drop",
        "fileName": "layout.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 121,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "jquery",
            "column-and-block-layout-editor-path/models/column",
            "column-and-block-layout-editor-path/import/parser"
          ],
          "moduleName": "importer",
          "AMD": true,
          "webPath": "/src/import",
          "convertedName": "importer.js",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'Importer'.",
            "code": "wfJD",
            "evidence": "function Importer() {}",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'Importer'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getBlocks'.",
            "code": "wfJD",
            "evidence": "Importer.prototype._getBlocks = function ($el) {",
            "line": 5,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getBlocks'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_buildContentStates'.",
            "code": "wfJD",
            "evidence": "Importer.prototype._buildContentStates = function (contentStates, contentEditorResolvers) {",
            "line": 15,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_buildContentStates'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getContentEditorResolvers'.",
            "code": "wfJD",
            "evidence": "Importer.prototype._getContentEditorResolvers = function ($container, contentEditors) {",
            "line": 28,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getContentEditorResolvers'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'import'.",
            "code": "wfJD",
            "evidence": "Importer.prototype[\"import\"] = function (markup, contentEditors, actualCreate) {",
            "line": 41,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'import'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/import/importer.js.js",
      "folderPath": "test-source/src/import",
      "fileName": "importer.js.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/import",
      "webPath": "/src/import",
      "libFile": false,
      "min": false,
      "realName": "importer.js",
      "name": "importer",
      "camelName": "Importer.js",
      "processedFilePath": "test-output/src/import/importer.js.js",
      "mappedModuleName": "src/import/importer",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/import/importer~Importer": {
          "todos": [],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function Importer() {}",
          "comment": -1,
          "range": [
            264,
            286
          ],
          "name": "Importer",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/import/importer",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 64,
        "requires": [
          "underscore",
          "jquery",
          "column-and-block-layout-editor-path/models/column",
          "column-and-block-layout-editor-path/import/parser"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/import",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 2589,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./importer",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "Importer": 2798
        },
        "methods": [
          {
            "name": "Importer",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function Importer() {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getBlocks",
            "visibility": "public",
            "static": false,
            "lineNumber": 5,
            "memberOf": "Importer.prototype",
            "doclet": "/**\n * @param $el\n */",
            "args": [
              "$el"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Importer.prototype._getBlocks = function ($el) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_buildContentStates",
            "visibility": "public",
            "static": false,
            "lineNumber": 15,
            "memberOf": "Importer.prototype",
            "doclet": "/**\n * @param contentStates\n * @param contentEditorResolvers\n */",
            "args": [
              "contentStates",
              "contentEditorResolvers"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Importer.prototype._buildContentStates = function (contentStates, contentEditorResolvers) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getContentEditorResolvers",
            "visibility": "public",
            "static": false,
            "lineNumber": 28,
            "memberOf": "Importer.prototype",
            "doclet": "/**\n * @param $container\n * @param contentEditors\n */",
            "args": [
              "$container",
              "contentEditors"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Importer.prototype._getContentEditorResolvers = function ($container, contentEditors) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "import",
            "visibility": "public",
            "static": false,
            "lineNumber": 41,
            "memberOf": "Importer.prototype",
            "doclet": "/**\n * @param markup\n * @param contentEditors\n * @param actualCreate\n * @return {function}\n */",
            "args": [
              "markup",
              "contentEditors",
              "actualCreate"
            ],
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "Importer.prototype[\"import\"] = function (markup, contentEditors, actualCreate) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/import",
        "fileName": "importer.js.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 104,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "parser",
          "AMD": true,
          "webPath": "/src/import",
          "convertedName": "parser",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'contentChildExclusionFilter'.",
            "code": "wfJD",
            "evidence": "contentChildExclusionFilter = function () {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'contentChildExclusionFilter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'childContentEditorExclusionFilter'.",
            "code": "wfJD",
            "evidence": "childContentEditorExclusionFilter = function () {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'childContentEditorExclusionFilter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'columnChildExclusionFilter'.",
            "code": "wfJD",
            "evidence": "columnChildExclusionFilter = function () {",
            "line": 42,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'columnChildExclusionFilter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'columnExclusionFilter'.",
            "code": "wfJD",
            "evidence": "columnExclusionFilter = function () {",
            "line": 45,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'columnExclusionFilter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'Parser'.",
            "code": "wfJD",
            "evidence": "function Parser($markup1, actualCreate) {",
            "line": 51,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'Parser'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_determine$ContentDecoratorElement'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._determine$ContentDecoratorElement = function ($content) {",
            "line": 55,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_determine$ContentDecoratorElement'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseFormattingAttrs'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseFormattingAttrs = function ($markup, substate, filter) {",
            "line": 71,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseFormattingAttrs'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseContent'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseContent = function ($content) {",
            "line": 92,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseChildContent'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseChildContent = function ($content) {",
            "line": 111,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseChildContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseContents'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseContents = function ($block) {",
            "line": 123,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseBlock'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseBlock = function ($block) {",
            "line": 134,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseBlocks'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseBlocks = function ($column) {",
            "line": 142,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseBlocks'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseColumn'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseColumn = function ($column, columnCount) {",
            "line": 158,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseColumnWidth'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseColumnWidth = function ($column, defaultPercentage) {",
            "line": 167,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseColumnWidth'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseColumns'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseColumns = function ($markup) {",
            "line": 173,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parseAttrs'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parseAttrs = function ($markup, state) {",
            "line": 182,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parseAttrs'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parse'.",
            "code": "wfJD",
            "evidence": "Parser.prototype._parse = function () {",
            "line": 189,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parse'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toState'.",
            "code": "wfJD",
            "evidence": "Parser.prototype.toState = function () {",
            "line": 194,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toState'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/import/parser.js",
      "folderPath": "test-source/src/import",
      "fileName": "parser.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/import",
      "webPath": "/src/import",
      "libFile": false,
      "min": false,
      "realName": "parser",
      "name": "parser",
      "camelName": "Parser",
      "processedFilePath": "test-output/src/import/parser.js",
      "mappedModuleName": "src/import/parser",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/import/parser~Parser": {
          "todos": [],
          "params": [
            "$markup1",
            "actualCreate"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 51,
          "line": "function Parser($markup1, actualCreate) {",
          "comment": -1,
          "range": [
            1757,
            1906
          ],
          "name": "Parser",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param $markup1\n * @param actualCreate\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/import/parser",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 203,
        "requires": [
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/import",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 8175,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./parser",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "Parser": 9042
        },
        "methods": [
          {
            "name": "contentChildExclusionFilter",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "contentChildExclusionFilter = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "childContentEditorExclusionFilter",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "childContentEditorExclusionFilter = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "columnChildExclusionFilter",
            "visibility": "public",
            "static": false,
            "lineNumber": 42,
            "memberOf": "",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "columnChildExclusionFilter = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "columnExclusionFilter",
            "visibility": "public",
            "static": false,
            "lineNumber": 45,
            "memberOf": "",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "columnExclusionFilter = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "Parser",
            "visibility": "public",
            "static": false,
            "lineNumber": 51,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param $markup1\n * @param actualCreate\n */",
            "args": [
              "$markup1",
              "actualCreate"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function Parser($markup1, actualCreate) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_determine$ContentDecoratorElement",
            "visibility": "public",
            "static": false,
            "lineNumber": 55,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $content\n */",
            "args": [
              "$content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._determine$ContentDecoratorElement = function ($content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseFormattingAttrs",
            "visibility": "public",
            "static": false,
            "lineNumber": 71,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $markup\n * @param substate\n * @param filter\n */",
            "args": [
              "$markup",
              "substate",
              "filter"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseFormattingAttrs = function ($markup, substate, filter) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 92,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $content\n */",
            "args": [
              "$content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseContent = function ($content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseChildContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 111,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $content\n */",
            "args": [
              "$content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseChildContent = function ($content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 123,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $block\n */",
            "args": [
              "$block"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseContents = function ($block) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 134,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $block\n */",
            "args": [
              "$block"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseBlock = function ($block) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseBlocks",
            "visibility": "public",
            "static": false,
            "lineNumber": 142,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $column\n */",
            "args": [
              "$column"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseBlocks = function ($column) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 158,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $column\n * @param columnCount\n */",
            "args": [
              "$column",
              "columnCount"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseColumn = function ($column, columnCount) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseColumnWidth",
            "visibility": "public",
            "static": false,
            "lineNumber": 167,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $column\n * @param defaultPercentage\n * @return {boolean}\n */",
            "args": [
              "$column",
              "defaultPercentage"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseColumnWidth = function ($column, defaultPercentage) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 173,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $markup\n */",
            "args": [
              "$markup"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseColumns = function ($markup) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parseAttrs",
            "visibility": "public",
            "static": false,
            "lineNumber": 182,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @param $markup\n * @param state\n * @return {object} AssignmentExpression\n */",
            "args": [
              "$markup",
              "state"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parseAttrs = function ($markup, state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parse",
            "visibility": "public",
            "static": false,
            "lineNumber": 189,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "Parser.prototype._parse = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toState",
            "visibility": "public",
            "static": false,
            "lineNumber": 194,
            "memberOf": "Parser.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Parser.prototype.toState = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/import",
        "fileName": "parser.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 310,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "galileo-lib/modules/services/descriptors/block/block-descriptor",
            "column-and-block-layout-editor-path/models/content",
            "column-and-block-layout-editor-path/models/contents"
          ],
          "moduleName": "block",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "block",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'BlockModel'.",
            "code": "wfJD",
            "evidence": "function BlockModel() {",
            "line": 8,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'BlockModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createContentModel'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype._createContentModel = function (contents) {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createContentModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeBlockIfContentsIsEmpty'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype._removeBlockIfContentsIsEmpty = function (model, collection, options) {",
            "line": 23,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeBlockIfContentsIsEmpty'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toState'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.toState = function () {",
            "line": 28,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentsCollection'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.getContentsCollection = function () {",
            "line": 34,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentsCollection'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContainedContentTypes'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.getContainedContentTypes = function () {",
            "line": 37,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContainedContentTypes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContents'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.getContents = function () {",
            "line": 40,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentEditors'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.getContentEditors = function () {",
            "line": 43,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'deactivate'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.deactivate = function () {",
            "line": 46,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'deactivate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getWidthPx'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.getWidthPx = function () {",
            "line": 49,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getWidthPx'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentLeft'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.hasContentLeft = function () {",
            "line": 52,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentLeft'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentRight'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.hasContentRight = function () {",
            "line": 55,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentRight'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toBlockDescriptor'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.toBlockDescriptor = function () {",
            "line": 58,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toBlockDescriptor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getMetadata'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.getMetadata = function () {",
            "line": 63,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getMetadata'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getDescriptorContents'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.getDescriptorContents = function () {",
            "line": 72,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getDescriptorContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getBlockIndex'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.getBlockIndex = function () {",
            "line": 77,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getBlockIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "BlockModel.prototype.initialize = function (block, opts) {",
            "line": 80,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/block.js",
      "folderPath": "test-source/src/models",
      "fileName": "block.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "block",
      "name": "block",
      "camelName": "Block",
      "processedFilePath": "test-output/src/models/block.js",
      "mappedModuleName": "src/models/block",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/block~BlockModel": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 8,
          "line": "function BlockModel() {",
          "comment": -1,
          "range": [
            430,
            596
          ],
          "name": "BlockModel",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/block",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 89,
        "requires": [
          "underscore",
          "backbone",
          "galileo-lib/modules/services/descriptors/block/block-descriptor",
          "column-and-block-layout-editor-path/models/content",
          "column-and-block-layout-editor-path/models/contents"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 3437,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./block",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "BlockModel": 3330
        },
        "methods": [
          {
            "name": "BlockModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 8,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function BlockModel() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createContentModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @param contents\n * @return {object} NewExpression\n */",
            "args": [
              "contents"
            ],
            "description": "",
            "return": "NewExpression",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype._createContentModel = function (contents) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeBlockIfContentsIsEmpty",
            "visibility": "public",
            "static": false,
            "lineNumber": 23,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @param model\n * @param collection\n * @param options\n */",
            "args": [
              "model",
              "collection",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype._removeBlockIfContentsIsEmpty = function (model, collection, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toState",
            "visibility": "public",
            "static": false,
            "lineNumber": 28,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.toState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentsCollection",
            "visibility": "public",
            "static": false,
            "lineNumber": 34,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.getContentsCollection = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContainedContentTypes",
            "visibility": "public",
            "static": false,
            "lineNumber": 37,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.getContainedContentTypes = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 40,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.getContents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 43,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.getContentEditors = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "deactivate",
            "visibility": "public",
            "static": false,
            "lineNumber": 46,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.deactivate = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getWidthPx",
            "visibility": "public",
            "static": false,
            "lineNumber": 49,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.getWidthPx = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentLeft",
            "visibility": "public",
            "static": false,
            "lineNumber": 52,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.hasContentLeft = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentRight",
            "visibility": "public",
            "static": false,
            "lineNumber": 55,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.hasContentRight = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toBlockDescriptor",
            "visibility": "public",
            "static": false,
            "lineNumber": 58,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @return {object} NewExpression\n */",
            "description": "",
            "return": "NewExpression",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.toBlockDescriptor = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getMetadata",
            "visibility": "public",
            "static": false,
            "lineNumber": 63,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.getMetadata = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getDescriptorContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 72,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.getDescriptorContents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getBlockIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 77,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.getBlockIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 80,
            "memberOf": "BlockModel.prototype",
            "doclet": "/**\n * @param block\n * @param opts\n */",
            "args": [
              "block",
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockModel.prototype.initialize = function (block, opts) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "block.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 161,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/models/block"
          ],
          "moduleName": "blocks",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "blocks",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'Blocks'.",
            "code": "wfJD",
            "evidence": "function Blocks() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'Blocks'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onAdd'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype._onAdd = function (block) {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onAdd'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onRemove'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype._onRemove = function (block, collection, options) {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onRemove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.initialize = function (models, blockOpts) {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toState'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.toState = function () {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getWidthPx'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.getWidthPx = function () {",
            "line": 24,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getWidthPx'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentLeft'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.hasContentLeft = function () {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentLeft'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentRight'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.hasContentRight = function () {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentRight'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLayoutInstanceId'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.getLayoutInstanceId = function () {",
            "line": 33,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLayoutInstanceId'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContents'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.getContents = function () {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getColumnIndex'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.getColumnIndex = function () {",
            "line": 39,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getColumnIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentEditors'.",
            "code": "wfJD",
            "evidence": "Blocks.prototype.getContentEditors = function () {",
            "line": 42,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentEditors'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/blocks.js",
      "folderPath": "test-source/src/models",
      "fileName": "blocks.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "blocks",
      "name": "blocks",
      "camelName": "Blocks",
      "processedFilePath": "test-output/src/models/blocks.js",
      "mappedModuleName": "src/models/blocks",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/blocks~Blocks": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function Blocks() {",
          "comment": -1,
          "range": [
            319,
            410
          ],
          "name": "Blocks",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/blocks",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 47,
        "requires": [
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/models/block"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 1839,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./blocks",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "Blocks": 1999
        },
        "methods": [
          {
            "name": "Blocks",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function Blocks() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onAdd",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @param block\n */",
            "args": [
              "block"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype._onAdd = function (block) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onRemove",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @param block\n * @param collection\n * @param options\n */",
            "args": [
              "block",
              "collection",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype._onRemove = function (block, collection, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @param models\n * @param blockOpts\n */",
            "args": [
              "models",
              "blockOpts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.initialize = function (models, blockOpts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toState",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.toState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getWidthPx",
            "visibility": "public",
            "static": false,
            "lineNumber": 24,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.getWidthPx = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentLeft",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.hasContentLeft = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentRight",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.hasContentRight = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLayoutInstanceId",
            "visibility": "public",
            "static": false,
            "lineNumber": 33,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.getLayoutInstanceId = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.getContents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getColumnIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 39,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.getColumnIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 42,
            "memberOf": "Blocks.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Blocks.prototype.getContentEditors = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "blocks.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 96,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/models/block",
            "column-and-block-layout-editor-path/models/blocks",
            "column-and-block-layout-editor-path/models/converters/block-converter"
          ],
          "moduleName": "column",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "column",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ColumnModel'.",
            "code": "wfJD",
            "evidence": "function ColumnModel() {",
            "line": 8,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ColumnModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeColumnIfBlocksIsEmpty'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype._removeColumnIfBlocksIsEmpty = function (model, collection, options) {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeColumnIfBlocksIsEmpty'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createBlockModel'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype._createBlockModel = function (blocks) {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createBlockModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onBlockRemoved'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype._onBlockRemoved = function (block) {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onBlockRemoved'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_refreshAttributes'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype._refreshAttributes = function () {",
            "line": 24,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_refreshAttributes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'applyDeltaToColumnWidth'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.applyDeltaToColumnWidth = function (delta) {",
            "line": 32,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'applyDeltaToColumnWidth'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'resizeColumnFromHandle'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.resizeColumnFromHandle = function (firstColumnWidthPercentage) {",
            "line": 35,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'resizeColumnFromHandle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toState'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.toState = function () {",
            "line": 38,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getBlocksCollection'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getBlocksCollection = function () {",
            "line": 44,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getBlocksCollection'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContents'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getContents = function () {",
            "line": 47,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentEditors'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getContentEditors = function () {",
            "line": 50,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLayoutInstanceId'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getLayoutInstanceId = function () {",
            "line": 53,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLayoutInstanceId'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getWidthPct'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getWidthPct = function () {",
            "line": 56,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getWidthPct'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getWidthPx'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getWidthPx = function () {",
            "line": 59,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getWidthPx'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLayoutContainerWidth'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getLayoutContainerWidth = function () {",
            "line": 62,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLayoutContainerWidth'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLayoutReadyPromise'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getLayoutReadyPromise = function () {",
            "line": 65,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLayoutReadyPromise'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getAttributesForRender'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getAttributesForRender = function () {",
            "line": 68,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getAttributesForRender'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentLeft'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.hasContentLeft = function () {",
            "line": 74,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentLeft'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentRight'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.hasContentRight = function () {",
            "line": 77,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentRight'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasBlock'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.hasBlock = function (name) {",
            "line": 80,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasMultipleBlocks'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.hasMultipleBlocks = function () {",
            "line": 83,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasMultipleBlocks'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'addBlock'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.addBlock = function (position, blockJSON) {",
            "line": 86,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'addBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getColumnIndex'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.getColumnIndex = function () {",
            "line": 94,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getColumnIndex'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ColumnModel.prototype.initialize = function (column, opts) {",
            "line": 97,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/column.js",
      "folderPath": "test-source/src/models",
      "fileName": "column.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "column",
      "name": "column",
      "camelName": "Column",
      "processedFilePath": "test-output/src/models/column.js",
      "mappedModuleName": "src/models/column",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/column~ColumnModel": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 8,
          "line": "function ColumnModel() {",
          "comment": -1,
          "range": [
            492,
            668
          ],
          "name": "ColumnModel",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/column",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 111,
        "requires": [
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/models/block",
          "column-and-block-layout-editor-path/models/blocks",
          "column-and-block-layout-editor-path/models/converters/block-converter"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 4422,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./column",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ColumnModel": 4471
        },
        "methods": [
          {
            "name": "ColumnModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 8,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ColumnModel() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeColumnIfBlocksIsEmpty",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @param model\n * @param collection\n * @param options\n */",
            "args": [
              "model",
              "collection",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype._removeColumnIfBlocksIsEmpty = function (model, collection, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createBlockModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @param blocks\n * @return {object} NewExpression\n */",
            "args": [
              "blocks"
            ],
            "description": "",
            "return": "NewExpression",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype._createBlockModel = function (blocks) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onBlockRemoved",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @param block\n */",
            "args": [
              "block"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype._onBlockRemoved = function (block) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_refreshAttributes",
            "visibility": "public",
            "static": false,
            "lineNumber": 24,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype._refreshAttributes = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "applyDeltaToColumnWidth",
            "visibility": "public",
            "static": false,
            "lineNumber": 32,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @param delta\n */",
            "args": [
              "delta"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.applyDeltaToColumnWidth = function (delta) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "resizeColumnFromHandle",
            "visibility": "public",
            "static": false,
            "lineNumber": 35,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @param firstColumnWidthPercentage\n */",
            "args": [
              "firstColumnWidthPercentage"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.resizeColumnFromHandle = function (firstColumnWidthPercentage) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toState",
            "visibility": "public",
            "static": false,
            "lineNumber": 38,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.toState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getBlocksCollection",
            "visibility": "public",
            "static": false,
            "lineNumber": 44,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getBlocksCollection = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 47,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getContents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 50,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getContentEditors = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLayoutInstanceId",
            "visibility": "public",
            "static": false,
            "lineNumber": 53,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getLayoutInstanceId = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getWidthPct",
            "visibility": "public",
            "static": false,
            "lineNumber": 56,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getWidthPct = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getWidthPx",
            "visibility": "public",
            "static": false,
            "lineNumber": 59,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getWidthPx = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLayoutContainerWidth",
            "visibility": "public",
            "static": false,
            "lineNumber": 62,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getLayoutContainerWidth = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLayoutReadyPromise",
            "visibility": "public",
            "static": false,
            "lineNumber": 65,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getLayoutReadyPromise = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getAttributesForRender",
            "visibility": "public",
            "static": false,
            "lineNumber": 68,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getAttributesForRender = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentLeft",
            "visibility": "public",
            "static": false,
            "lineNumber": 74,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.hasContentLeft = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentRight",
            "visibility": "public",
            "static": false,
            "lineNumber": 77,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.hasContentRight = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 80,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @param name\n */",
            "args": [
              "name"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.hasBlock = function (name) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasMultipleBlocks",
            "visibility": "public",
            "static": false,
            "lineNumber": 83,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.hasMultipleBlocks = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "addBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 86,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @param position\n * @param blockJSON\n */",
            "args": [
              "position",
              "blockJSON"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.addBlock = function (position, blockJSON) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getColumnIndex",
            "visibility": "public",
            "static": false,
            "lineNumber": 94,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.getColumnIndex = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 97,
            "memberOf": "ColumnModel.prototype",
            "doclet": "/**\n * @param column\n * @param opts\n */",
            "args": [
              "column",
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnModel.prototype.initialize = function (column, opts) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "column.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 212,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/percentage-utils",
            "column-and-block-layout-editor-path/models/column",
            "column-and-block-layout-editor-path/models/converters/block-converter"
          ],
          "moduleName": "columns",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "columns",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'Columns'.",
            "code": "wfJD",
            "evidence": "function Columns() {",
            "line": 9,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'Columns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.initialize = function (models, opts) {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toState'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.toState = function () {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getNumBlocks'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.getNumBlocks = function () {",
            "line": 22,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getNumBlocks'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setColumns'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.setColumns = function (columns, options) {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'resizeColumns'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.resizeColumns = function () {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'resizeColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'evenlySplitColumns'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.evenlySplitColumns = function () {",
            "line": 54,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'evenlySplitColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'applyDeltaToColumnWidth'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.applyDeltaToColumnWidth = function (model, delta) {",
            "line": 63,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'applyDeltaToColumnWidth'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'resizeColumnFromHandle'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.resizeColumnFromHandle = function (decimal) {",
            "line": 82,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'resizeColumnFromHandle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'createChildContent'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.createChildContent = function (name, contentJSON) {",
            "line": 91,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'createChildContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContents'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.getContents = function () {",
            "line": 102,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentEditors'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.getContentEditors = function () {",
            "line": 105,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLayoutInstanceId'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.getLayoutInstanceId = function () {",
            "line": 108,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLayoutInstanceId'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'findContentModelByName'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.findContentModelByName = function (name) {",
            "line": 111,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'findContentModelByName'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'atMaxColumns'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.atMaxColumns = function () {",
            "line": 121,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'atMaxColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'reorderBlock'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.reorderBlock = function (columnIdx, position, contentType, content) {",
            "line": 124,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'reorderBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_checkIfColumnsShouldBeEventlySplit'.",
            "code": "wfJD",
            "evidence": "Columns.prototype._checkIfColumnsShouldBeEventlySplit = function (model, collection, options) {",
            "line": 132,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_checkIfColumnsShouldBeEventlySplit'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLayoutReadyPromise'.",
            "code": "wfJD",
            "evidence": "Columns.prototype.getLayoutReadyPromise = function () {",
            "line": 137,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLayoutReadyPromise'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/columns.js",
      "folderPath": "test-source/src/models",
      "fileName": "columns.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "columns",
      "name": "columns",
      "camelName": "Columns",
      "processedFilePath": "test-output/src/models/columns.js",
      "mappedModuleName": "src/models/columns",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/columns~Columns": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 9,
          "line": "function Columns() {",
          "comment": -1,
          "range": [
            523,
            616
          ],
          "name": "Columns",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/columns",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 142,
        "requires": [
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/percentage-utils",
          "column-and-block-layout-editor-path/models/column",
          "column-and-block-layout-editor-path/models/converters/block-converter"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 5710,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./columns",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "Columns": 6042
        },
        "methods": [
          {
            "name": "Columns",
            "visibility": "public",
            "static": false,
            "lineNumber": 9,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function Columns() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @param models\n * @param opts\n */",
            "args": [
              "models",
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.initialize = function (models, opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toState",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.toState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getNumBlocks",
            "visibility": "public",
            "static": false,
            "lineNumber": 22,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.getNumBlocks = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @param columns\n * @param options\n */",
            "args": [
              "columns",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.setColumns = function (columns, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "resizeColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.resizeColumns = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "evenlySplitColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 54,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.evenlySplitColumns = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "applyDeltaToColumnWidth",
            "visibility": "public",
            "static": false,
            "lineNumber": 63,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @param model\n * @param delta\n * @return {boolean}\n */",
            "args": [
              "model",
              "delta"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.applyDeltaToColumnWidth = function (model, delta) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "resizeColumnFromHandle",
            "visibility": "public",
            "static": false,
            "lineNumber": 82,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @param decimal\n */",
            "args": [
              "decimal"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.resizeColumnFromHandle = function (decimal) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "createChildContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 91,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @param name\n * @param contentJSON\n */",
            "args": [
              "name",
              "contentJSON"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.createChildContent = function (name, contentJSON) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 102,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.getContents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 105,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.getContentEditors = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLayoutInstanceId",
            "visibility": "public",
            "static": false,
            "lineNumber": 108,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.getLayoutInstanceId = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "findContentModelByName",
            "visibility": "public",
            "static": false,
            "lineNumber": 111,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @param name\n */",
            "args": [
              "name"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.findContentModelByName = function (name) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "atMaxColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 121,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.atMaxColumns = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "reorderBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 124,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @param columnIdx\n * @param position\n * @param contentType\n * @param content\n */",
            "args": [
              "columnIdx",
              "position",
              "contentType",
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.reorderBlock = function (columnIdx, position, contentType, content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_checkIfColumnsShouldBeEventlySplit",
            "visibility": "public",
            "static": false,
            "lineNumber": 132,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @param model\n * @param collection\n * @param options\n */",
            "args": [
              "model",
              "collection",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype._checkIfColumnsShouldBeEventlySplit = function (model, collection, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getLayoutReadyPromise",
            "visibility": "public",
            "static": false,
            "lineNumber": 137,
            "memberOf": "Columns.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Columns.prototype.getLayoutReadyPromise = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "columns.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 239,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "galileo-lib/modules/services/descriptors/block/block-descriptor",
            "utils",
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "content-editor-state-map",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "content_editor_state_map",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ContentEditorStateMap'.",
            "code": "wfJD",
            "evidence": "function ContentEditorStateMap() {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ContentEditorStateMap'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContents'.",
            "code": "wfJD",
            "evidence": "ContentEditorStateMap.prototype.getContents = function () {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setContents'.",
            "code": "wfJD",
            "evidence": "ContentEditorStateMap.prototype.setContents = function (contents) {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createStateFromBlockDescriptor'.",
            "code": "wfJD",
            "evidence": "ContentEditorStateMap.prototype._createStateFromBlockDescriptor = function (blockDescriptor) {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createStateFromBlockDescriptor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createStateFromContentEditorState'.",
            "code": "wfJD",
            "evidence": "ContentEditorStateMap.prototype._createStateFromContentEditorState = function (ceState) {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createStateFromContentEditorState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'createState'.",
            "code": "wfJD",
            "evidence": "ContentEditorStateMap.prototype.createState = function (state, contentType) {",
            "line": 37,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'createState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_randomizeContentEditorStateName'.",
            "code": "wfJD",
            "evidence": "ContentEditorStateMap.prototype._randomizeContentEditorStateName = function (content) {",
            "line": 44,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_randomizeContentEditorStateName'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'refresh'.",
            "code": "wfJD",
            "evidence": "ContentEditorStateMap.prototype.refresh = function (contentEditors) {",
            "line": 51,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'refresh'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'onStateReady'.",
            "code": "wfJD",
            "evidence": "onStateReady = function (editor, state) {",
            "line": 56,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'onStateReady'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/content-editor-state-map.js",
      "folderPath": "test-source/src/models",
      "fileName": "content-editor-state-map.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "content-editor-state-map",
      "name": "content-editor-state-map",
      "camelName": "ContentEditorStateMap",
      "processedFilePath": "test-output/src/models/content-editor-state-map.js",
      "mappedModuleName": "src/models/content-editor-state-map",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/content-editor-state-map~ContentEditorStateMap": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 7,
          "line": "function ContentEditorStateMap() {",
          "comment": -1,
          "range": [
            440,
            561
          ],
          "name": "ContentEditorStateMap",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/content-editor-state-map",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 77,
        "requires": [
          "underscore",
          "backbone",
          "galileo-lib/modules/services/descriptors/block/block-descriptor",
          "utils",
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 3165,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./content-editor-state-map",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ContentEditorStateMap": 3250
        },
        "methods": [
          {
            "name": "ContentEditorStateMap",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ContentEditorStateMap() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "ContentEditorStateMap.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditorStateMap.prototype.getContents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "ContentEditorStateMap.prototype",
            "doclet": "/**\n * @param contents\n */",
            "args": [
              "contents"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditorStateMap.prototype.setContents = function (contents) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createStateFromBlockDescriptor",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "ContentEditorStateMap.prototype",
            "doclet": "/**\n * @param blockDescriptor\n */",
            "args": [
              "blockDescriptor"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditorStateMap.prototype._createStateFromBlockDescriptor = function (blockDescriptor) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createStateFromContentEditorState",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "ContentEditorStateMap.prototype",
            "doclet": "/**\n * @param ceState\n */",
            "args": [
              "ceState"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditorStateMap.prototype._createStateFromContentEditorState = function (ceState) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "createState",
            "visibility": "public",
            "static": false,
            "lineNumber": 37,
            "memberOf": "ContentEditorStateMap.prototype",
            "doclet": "/**\n * @param state\n * @param contentType\n */",
            "args": [
              "state",
              "contentType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditorStateMap.prototype.createState = function (state, contentType) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_randomizeContentEditorStateName",
            "visibility": "public",
            "static": false,
            "lineNumber": 44,
            "memberOf": "ContentEditorStateMap.prototype",
            "doclet": "/**\n * @param content\n */",
            "args": [
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditorStateMap.prototype._randomizeContentEditorStateName = function (content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "refresh",
            "visibility": "public",
            "static": false,
            "lineNumber": 51,
            "memberOf": "ContentEditorStateMap.prototype",
            "doclet": "/**\n * @param contentEditors\n */",
            "args": [
              "contentEditors"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditorStateMap.prototype.refresh = function (contentEditors) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "onStateReady",
            "visibility": "public",
            "static": false,
            "lineNumber": 56,
            "memberOf": "",
            "doclet": "/**\n * @param editor\n * @param state\n */",
            "args": [
              "editor",
              "state"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "onStateReady = function (editor, state) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "content-editor-state-map.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 132,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/models/content-editor"
          ],
          "moduleName": "content-editors",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "content_editors",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ContentEditors'.",
            "code": "wfJD",
            "evidence": "function ContentEditors() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ContentEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getEditors'.",
            "code": "wfJD",
            "evidence": "ContentEditors.prototype.getEditors = function () {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'deactivate'.",
            "code": "wfJD",
            "evidence": "ContentEditors.prototype.deactivate = function () {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'deactivate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getWidthPx'.",
            "code": "wfJD",
            "evidence": "ContentEditors.prototype.getWidthPx = function () {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getWidthPx'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ContentEditors.prototype.initialize = function (models, opts) {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/content-editors.js",
      "folderPath": "test-source/src/models",
      "fileName": "content-editors.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "content-editors",
      "name": "content-editors",
      "camelName": "ContentEditors",
      "processedFilePath": "test-output/src/models/content-editors.js",
      "mappedModuleName": "src/models/content-editors",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/content-editors~ContentEditors": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function ContentEditors() {",
          "comment": -1,
          "range": [
            317,
            424
          ],
          "name": "ContentEditors",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/content-editors",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 24,
        "requires": [
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/models/content-editor"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 953,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./content-editors",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ContentEditors": 832
        },
        "methods": [
          {
            "name": "ContentEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ContentEditors() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "ContentEditors.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditors.prototype.getEditors = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "deactivate",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "ContentEditors.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditors.prototype.deactivate = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getWidthPx",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "ContentEditors.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentEditors.prototype.getWidthPx = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "ContentEditors.prototype",
            "doclet": "/**\n * @param models\n * @param opts\n * @return {object} AssignmentExpression\n */",
            "args": [
              "models",
              "opts"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "ContentEditors.prototype.initialize = function (models, opts) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "content-editors.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 50,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "jquery",
            "backbone",
            "debug",
            "galileo-lib/modules/events",
            "galileo-lib/modules/galileo-event",
            "galileo-lib/modules/services/descriptors/block/block-descriptor",
            "column-and-block-layout-editor-path/constants",
            "galileo-lib/modules/services/editor-lifecycle-service"
          ],
          "moduleName": "content",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "content",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ContentModel'.",
            "code": "wfJD",
            "evidence": "function ContentModel() {",
            "line": 9,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ContentModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initializeContentEditor'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.initializeContentEditor = function (options) {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initializeContentEditor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toState'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.toState = function () {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_editorState'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._editorState = function () {",
            "line": 33,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_editorState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'createChild'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.createChild = function (contentJSON) {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'createChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'remove'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.remove = function (options) {",
            "line": 46,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'remove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getName'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.getName = function () {",
            "line": 60,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getName'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'removeChild'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.removeChild = function (options) {",
            "line": 63,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'removeChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasChild'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.hasChild = function () {",
            "line": 73,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isChild'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.isChild = function () {",
            "line": 76,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getChildContentModel'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.getChildContentModel = function () {",
            "line": 79,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getChildContentModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_updateContents'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._updateContents = function (state) {",
            "line": 82,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_updateContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getStateForBlockDescriptor'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.getStateForBlockDescriptor = function () {",
            "line": 88,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getStateForBlockDescriptor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'blockDescriptorProviderFn'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.blockDescriptorProviderFn = function () {",
            "line": 96,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'blockDescriptorProviderFn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createContentEditor'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._createContentEditor = function (options) {",
            "line": 108,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createContentEditor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onEditorInitialized'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._onEditorInitialized = function (editor1) {",
            "line": 132,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onEditorInitialized'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_cleanup'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._cleanup = function () {",
            "line": 142,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_cleanup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onEditorStateUpdated'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._onEditorStateUpdated = function () {",
            "line": 146,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onEditorStateUpdated'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getEditor'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.getEditor = function () {",
            "line": 149,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getEditor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getEditors'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.getEditors = function () {",
            "line": 152,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContent'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.getContent = function () {",
            "line": 159,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'whenEditorReady'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.whenEditorReady = function () {",
            "line": 166,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'whenEditorReady'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getWidthPx'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.getWidthPx = function () {",
            "line": 169,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getWidthPx'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentLeft'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.hasContentLeft = function () {",
            "line": 172,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentLeft'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentRight'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.hasContentRight = function () {",
            "line": 175,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentRight'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'triggerInsertedIntoBlock'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.triggerInsertedIntoBlock = function (totalBlockHorizontalPadding) {",
            "line": 178,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'triggerInsertedIntoBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'deactivate'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.deactivate = function (options) {",
            "line": 208,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'deactivate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getDecoratorType'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.getDecoratorType = function () {",
            "line": 221,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getDecoratorType'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toggleVspace'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.toggleVspace = function () {",
            "line": 224,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toggleVspace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'supportsContentVspace'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.supportsContentVspace = function () {",
            "line": 229,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'supportsContentVspace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setVspace'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._setVspace = function () {",
            "line": 234,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setVspace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setDefaultVspace'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._setDefaultVspace = function () {",
            "line": 239,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setDefaultVspace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype.initialize = function (state, opts) {",
            "line": 244,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setChild'.",
            "code": "wfJD",
            "evidence": "ContentModel.prototype._setChild = function () {",
            "line": 254,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setChild'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/content.js",
      "folderPath": "test-source/src/models",
      "fileName": "content.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "content",
      "name": "content",
      "camelName": "Content",
      "processedFilePath": "test-output/src/models/content.js",
      "mappedModuleName": "src/models/content",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/content~ContentModel": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 9,
          "line": "function ContentModel() {",
          "comment": -1,
          "range": [
            605,
            903
          ],
          "name": "ContentModel",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/content",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 265,
        "requires": [
          "underscore",
          "jquery",
          "backbone",
          "debug",
          "galileo-lib/modules/events",
          "galileo-lib/modules/galileo-event",
          "galileo-lib/modules/services/descriptors/block/block-descriptor",
          "column-and-block-layout-editor-path/constants",
          "galileo-lib/modules/services/editor-lifecycle-service"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 10043,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./content",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ContentModel": 11282
        },
        "methods": [
          {
            "name": "ContentModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 9,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ContentModel() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initializeContentEditor",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.initializeContentEditor = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toState",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.toState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_editorState",
            "visibility": "public",
            "static": false,
            "lineNumber": 33,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._editorState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "createChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param contentJSON\n */",
            "args": [
              "contentJSON"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.createChild = function (contentJSON) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "remove",
            "visibility": "public",
            "static": false,
            "lineNumber": 46,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param options\n * @return {object} ThisExpression\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.remove = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getName",
            "visibility": "public",
            "static": false,
            "lineNumber": 60,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.getName = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "removeChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 63,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.removeChild = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 73,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @return {object} UnaryExpression\n */",
            "description": "",
            "return": "UnaryExpression",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.hasChild = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 76,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * Returns true if is child.\n * @return {object} boolean\n */",
            "description": "Returns true if is child.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.isChild = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getChildContentModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 79,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.getChildContentModel = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_updateContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 82,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param state\n */",
            "args": [
              "state"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._updateContents = function (state) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getStateForBlockDescriptor",
            "visibility": "public",
            "static": false,
            "lineNumber": 88,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.getStateForBlockDescriptor = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "blockDescriptorProviderFn",
            "visibility": "public",
            "static": false,
            "lineNumber": 96,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.blockDescriptorProviderFn = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createContentEditor",
            "visibility": "public",
            "static": false,
            "lineNumber": 108,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._createContentEditor = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onEditorInitialized",
            "visibility": "public",
            "static": false,
            "lineNumber": 132,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param editor1\n */",
            "args": [
              "editor1"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._onEditorInitialized = function (editor1) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_cleanup",
            "visibility": "public",
            "static": false,
            "lineNumber": 142,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._cleanup = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onEditorStateUpdated",
            "visibility": "public",
            "static": false,
            "lineNumber": 146,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._onEditorStateUpdated = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getEditor",
            "visibility": "public",
            "static": false,
            "lineNumber": 149,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.getEditor = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 152,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @return {array}\n */",
            "description": "",
            "return": "{array}",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.getEditors = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 159,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @return {array}\n */",
            "description": "",
            "return": "{array}",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.getContent = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "whenEditorReady",
            "visibility": "public",
            "static": false,
            "lineNumber": 166,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.whenEditorReady = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getWidthPx",
            "visibility": "public",
            "static": false,
            "lineNumber": 169,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.getWidthPx = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentLeft",
            "visibility": "public",
            "static": false,
            "lineNumber": 172,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.hasContentLeft = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentRight",
            "visibility": "public",
            "static": false,
            "lineNumber": 175,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.hasContentRight = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "triggerInsertedIntoBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 178,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param totalBlockHorizontalPadding\n */",
            "args": [
              "totalBlockHorizontalPadding"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.triggerInsertedIntoBlock = function (totalBlockHorizontalPadding) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "deactivate",
            "visibility": "public",
            "static": false,
            "lineNumber": 208,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.deactivate = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getDecoratorType",
            "visibility": "public",
            "static": false,
            "lineNumber": 221,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.getDecoratorType = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toggleVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 224,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.toggleVspace = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "supportsContentVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 229,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.supportsContentVspace = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 234,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._setVspace = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setDefaultVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 239,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._setDefaultVspace = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 244,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @param state\n * @param opts\n */",
            "args": [
              "state",
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype.initialize = function (state, opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 254,
            "memberOf": "ContentModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentModel.prototype._setChild = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "content.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 412,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/models/content",
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "contents",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "contents",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'Contents'.",
            "code": "wfJD",
            "evidence": "function Contents() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'Contents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContents'.",
            "code": "wfJD",
            "evidence": "Contents.prototype.getContents = function () {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toState'.",
            "code": "wfJD",
            "evidence": "Contents.prototype.toState = function () {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getEditors'.",
            "code": "wfJD",
            "evidence": "Contents.prototype.getEditors = function () {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'deactivate'.",
            "code": "wfJD",
            "evidence": "Contents.prototype.deactivate = function () {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'deactivate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getWidthPx'.",
            "code": "wfJD",
            "evidence": "Contents.prototype.getWidthPx = function () {",
            "line": 22,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getWidthPx'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentLeft'.",
            "code": "wfJD",
            "evidence": "Contents.prototype.hasContentLeft = function () {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentLeft'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hasContentRight'.",
            "code": "wfJD",
            "evidence": "Contents.prototype.hasContentRight = function () {",
            "line": 28,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hasContentRight'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "Contents.prototype.initialize = function (models, opts) {",
            "line": 31,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onRemove'.",
            "code": "wfJD",
            "evidence": "Contents.prototype._onRemove = function (content, collection, options) {",
            "line": 35,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onRemove'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/contents.js",
      "folderPath": "test-source/src/models",
      "fileName": "contents.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "contents",
      "name": "contents",
      "camelName": "Contents",
      "processedFilePath": "test-output/src/models/contents.js",
      "mappedModuleName": "src/models/contents",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/contents~Contents": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function Contents() {",
          "comment": -1,
          "range": [
            333,
            428
          ],
          "name": "Contents",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/contents",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 40,
        "requires": [
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/models/content",
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 1540,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./contents",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "Contents": 1622
        },
        "methods": [
          {
            "name": "Contents",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function Contents() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype.getContents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toState",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype.toState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype.getEditors = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "deactivate",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype.deactivate = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getWidthPx",
            "visibility": "public",
            "static": false,
            "lineNumber": 22,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype.getWidthPx = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentLeft",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype.hasContentLeft = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hasContentRight",
            "visibility": "public",
            "static": false,
            "lineNumber": 28,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype.hasContentRight = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 31,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @param models\n * @param opts\n */",
            "args": [
              "models",
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype.initialize = function (models, opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onRemove",
            "visibility": "public",
            "static": false,
            "lineNumber": 35,
            "memberOf": "Contents.prototype",
            "doclet": "/**\n * @param content\n * @param collection\n * @param options\n */",
            "args": [
              "content",
              "collection",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "Contents.prototype._onRemove = function (content, collection, options) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "contents.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 83,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "underscore",
            "backbone",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/percentage-utils",
            "column-and-block-layout-editor-path/models/column",
            "column-and-block-layout-editor-path/models/columns",
            "column-and-block-layout-editor-path/models/content-editor-state-map",
            "column-and-block-layout-editor-path/models/converters/block-converter",
            "column-and-block-layout-editor-path/models/converters/content-converter",
            "galileo-lib/modules/services/activation-service"
          ],
          "moduleName": "layout",
          "AMD": true,
          "webPath": "/src/models",
          "convertedName": "layout",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'LayoutModel'.",
            "code": "wfJD",
            "evidence": "function LayoutModel() {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'LayoutModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setLayoutState'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.setLayoutState = function (layoutState, options) {",
            "line": 17,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setLayoutState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_layoutWillDeleteIfContentIsRemoved'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._layoutWillDeleteIfContentIsRemoved = function (content) {",
            "line": 26,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_layoutWillDeleteIfContentIsRemoved'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_numColumns'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._numColumns = function () {",
            "line": 32,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_numColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_initColumnWidth'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._initColumnWidth = function () {",
            "line": 35,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_initColumnWidth'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_refreshColumnsAndTriggerChanged'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._refreshColumnsAndTriggerChanged = function (column, columns, options) {",
            "line": 40,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_refreshColumnsAndTriggerChanged'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createColumnJson'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._createColumnJson = function (blockJSON) {",
            "line": 46,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createColumnJson'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeColumnFrom'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._removeColumnFrom = function (columns, position) {",
            "line": 52,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeColumnFrom'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_reorderColumn'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._reorderColumn = function (columns, sourceIndex, destinationIndex) {",
            "line": 56,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_reorderColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeColumn'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._removeColumn = function (position) {",
            "line": 63,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_insertColumnAt'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._insertColumnAt = function (columns, position, blockJSON) {",
            "line": 67,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_insertColumnAt'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_createColumnModel'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._createColumnModel = function () {",
            "line": 82,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_createColumnModel'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_handledChangedEvent'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._handledChangedEvent = function (options) {",
            "line": 91,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_handledChangedEvent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onChanged'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._onChanged = function (model, options) {",
            "line": 98,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onChanged'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onColumnEmpty'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._onColumnEmpty = function (column) {",
            "line": 104,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onColumnEmpty'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_refreshAttributes'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._refreshAttributes = function () {",
            "line": 107,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_refreshAttributes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_refreshContentEditorStateMap'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._refreshContentEditorStateMap = function () {",
            "line": 115,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_refreshContentEditorStateMap'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_triggerStateUpdated'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._triggerStateUpdated = function (action) {",
            "line": 122,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_triggerStateUpdated'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_whenAllContentEditorsReady'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype._whenAllContentEditorsReady = function () {",
            "line": 128,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_whenAllContentEditorsReady'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.initialize = function (state, opts) {",
            "line": 131,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentStates'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.getContentStates = function () {",
            "line": 152,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentStates'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setContentStates'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.setContentStates = function (contents) {",
            "line": 159,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setContentStates'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContents'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.getContents = function () {",
            "line": 162,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentByName'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.getContentByName = function (editorName) {",
            "line": 165,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentByName'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getContentEditors'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.getContentEditors = function () {",
            "line": 168,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getContentEditors'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getColumns'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.getColumns = function () {",
            "line": 171,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'addColumn'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.addColumn = function (position, contentType, content, actualCreate) {",
            "line": 174,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'addColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'addBlock'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.addBlock = function (columnIdx, position, contentType, content, actualCreate) {",
            "line": 185,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'addBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'addChildContentToBlock'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.addChildContentToBlock = function (blockName, contentType, contentEditorState, decoratorType, newContent) {",
            "line": 197,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'addChildContentToBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'reorderColumn'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.reorderColumn = function (position, contentType, content) {",
            "line": 214,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'reorderColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'reorderBlock'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.reorderBlock = function (columnIdx, position, contentType, content) {",
            "line": 233,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'reorderBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'contentContainsChild'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.contentContainsChild = function (editorName) {",
            "line": 239,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'contentContainsChild'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'removeContent'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.removeContent = function (name, options) {",
            "line": 244,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'removeContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toggleContentVspace'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.toggleContentVspace = function (content) {",
            "line": 266,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toggleContentVspace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'toState'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.toState = function () {",
            "line": 271,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'toState'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getAttributesForRender'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.getAttributesForRender = function () {",
            "line": 277,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getAttributesForRender'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isLayoutIncluded'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.isLayoutIncluded = function () {",
            "line": 283,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isLayoutIncluded'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'atMaxColumns'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.atMaxColumns = function () {",
            "line": 291,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'atMaxColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getReadyPromise'.",
            "code": "wfJD",
            "evidence": "LayoutModel.prototype.getReadyPromise = function () {",
            "line": 295,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getReadyPromise'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/layout.js",
      "folderPath": "test-source/src/models",
      "fileName": "layout.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models",
      "webPath": "/src/models",
      "libFile": false,
      "min": false,
      "realName": "layout",
      "name": "layout",
      "camelName": "Layout",
      "processedFilePath": "test-output/src/models/layout.js",
      "mappedModuleName": "src/models/layout",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/layout~LayoutModel": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 10,
          "line": "function LayoutModel() {",
          "comment": -1,
          "range": [
            843,
            944
          ],
          "name": "LayoutModel",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/layout",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 300,
        "requires": [
          "jquery",
          "underscore",
          "backbone",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/percentage-utils",
          "column-and-block-layout-editor-path/models/column",
          "column-and-block-layout-editor-path/models/columns",
          "column-and-block-layout-editor-path/models/content-editor-state-map",
          "column-and-block-layout-editor-path/models/converters/block-converter",
          "column-and-block-layout-editor-path/models/converters/content-converter",
          "galileo-lib/modules/services/activation-service"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 12598,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./layout",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "LayoutModel": 12995
        },
        "methods": [
          {
            "name": "LayoutModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function LayoutModel() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setLayoutState",
            "visibility": "public",
            "static": false,
            "lineNumber": 17,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param layoutState\n * @param options\n */",
            "args": [
              "layoutState",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.setLayoutState = function (layoutState, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_layoutWillDeleteIfContentIsRemoved",
            "visibility": "public",
            "static": false,
            "lineNumber": 26,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param content\n * @return {boolean}\n */",
            "args": [
              "content"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._layoutWillDeleteIfContentIsRemoved = function (content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_numColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 32,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._numColumns = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_initColumnWidth",
            "visibility": "public",
            "static": false,
            "lineNumber": 35,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._initColumnWidth = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_refreshColumnsAndTriggerChanged",
            "visibility": "public",
            "static": false,
            "lineNumber": 40,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param column\n * @param columns\n * @param options\n */",
            "args": [
              "column",
              "columns",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._refreshColumnsAndTriggerChanged = function (column, columns, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createColumnJson",
            "visibility": "public",
            "static": false,
            "lineNumber": 46,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param blockJSON\n */",
            "args": [
              "blockJSON"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._createColumnJson = function (blockJSON) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeColumnFrom",
            "visibility": "public",
            "static": false,
            "lineNumber": 52,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param columns\n * @param position\n */",
            "args": [
              "columns",
              "position"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._removeColumnFrom = function (columns, position) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_reorderColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 56,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param columns\n * @param sourceIndex\n * @param destinationIndex\n */",
            "args": [
              "columns",
              "sourceIndex",
              "destinationIndex"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._reorderColumn = function (columns, sourceIndex, destinationIndex) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 63,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param position\n */",
            "args": [
              "position"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._removeColumn = function (position) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_insertColumnAt",
            "visibility": "public",
            "static": false,
            "lineNumber": 67,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param columns\n * @param position\n * @param blockJSON\n * @return {object} AssignmentExpression\n */",
            "args": [
              "columns",
              "position",
              "blockJSON"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._insertColumnAt = function (columns, position, blockJSON) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_createColumnModel",
            "visibility": "public",
            "static": false,
            "lineNumber": 82,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._createColumnModel = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_handledChangedEvent",
            "visibility": "public",
            "static": false,
            "lineNumber": 91,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._handledChangedEvent = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onChanged",
            "visibility": "public",
            "static": false,
            "lineNumber": 98,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param model\n * @param options\n */",
            "args": [
              "model",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._onChanged = function (model, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onColumnEmpty",
            "visibility": "public",
            "static": false,
            "lineNumber": 104,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param column\n */",
            "args": [
              "column"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._onColumnEmpty = function (column) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_refreshAttributes",
            "visibility": "public",
            "static": false,
            "lineNumber": 107,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._refreshAttributes = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_refreshContentEditorStateMap",
            "visibility": "public",
            "static": false,
            "lineNumber": 115,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._refreshContentEditorStateMap = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_triggerStateUpdated",
            "visibility": "public",
            "static": false,
            "lineNumber": 122,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param action\n */",
            "args": [
              "action"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._triggerStateUpdated = function (action) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_whenAllContentEditorsReady",
            "visibility": "public",
            "static": false,
            "lineNumber": 128,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype._whenAllContentEditorsReady = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 131,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param state\n * @param opts\n */",
            "args": [
              "state",
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.initialize = function (state, opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentStates",
            "visibility": "public",
            "static": false,
            "lineNumber": 152,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.getContentStates = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "setContentStates",
            "visibility": "public",
            "static": false,
            "lineNumber": 159,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param contents\n */",
            "args": [
              "contents"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.setContentStates = function (contents) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 162,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.getContents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentByName",
            "visibility": "public",
            "static": false,
            "lineNumber": 165,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param editorName\n */",
            "args": [
              "editorName"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.getContentByName = function (editorName) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getContentEditors",
            "visibility": "public",
            "static": false,
            "lineNumber": 168,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.getContentEditors = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 171,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.getColumns = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "addColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 174,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param position\n * @param contentType\n * @param content\n * @param actualCreate\n */",
            "args": [
              "position",
              "contentType",
              "content",
              "actualCreate"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.addColumn = function (position, contentType, content, actualCreate) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "addBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 185,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param columnIdx\n * @param position\n * @param contentType\n * @param content\n * @param actualCreate\n */",
            "args": [
              "columnIdx",
              "position",
              "contentType",
              "content",
              "actualCreate"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.addBlock = function (columnIdx, position, contentType, content, actualCreate) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "addChildContentToBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 197,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param blockName\n * @param contentType\n * @param contentEditorState\n * @param decoratorType\n * @param newContent\n */",
            "args": [
              "blockName",
              "contentType",
              "contentEditorState",
              "decoratorType",
              "newContent"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.addChildContentToBlock = function (blockName, contentType, contentEditorState, decoratorType, newContent) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "reorderColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 214,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param position\n * @param contentType\n * @param content\n */",
            "args": [
              "position",
              "contentType",
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.reorderColumn = function (position, contentType, content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "reorderBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 233,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param columnIdx\n * @param position\n * @param contentType\n * @param content\n */",
            "args": [
              "columnIdx",
              "position",
              "contentType",
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.reorderBlock = function (columnIdx, position, contentType, content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "contentContainsChild",
            "visibility": "public",
            "static": false,
            "lineNumber": 239,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param editorName\n */",
            "args": [
              "editorName"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.contentContainsChild = function (editorName) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "removeContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 244,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param name\n * @param options\n */",
            "args": [
              "name",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.removeContent = function (name, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toggleContentVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 266,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @param content\n */",
            "args": [
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.toggleContentVspace = function (content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "toState",
            "visibility": "public",
            "static": false,
            "lineNumber": 271,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.toState = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getAttributesForRender",
            "visibility": "public",
            "static": false,
            "lineNumber": 277,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.getAttributesForRender = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "isLayoutIncluded",
            "visibility": "public",
            "static": false,
            "lineNumber": 283,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * Returns true if is layout included.\n * @return {object} boolean\n */",
            "description": "Returns true if is layout included.",
            "return": "boolean",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.isLayoutIncluded = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "atMaxColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 291,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @return {object} ConditionalExpression\n */",
            "description": "",
            "return": "ConditionalExpression",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.atMaxColumns = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getReadyPromise",
            "visibility": "public",
            "static": false,
            "lineNumber": 295,
            "memberOf": "LayoutModel.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutModel.prototype.getReadyPromise = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models",
        "fileName": "layout.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 509,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/models/converters/block-descriptor-to-block",
            "column-and-block-layout-editor-path/models/converters/content-to-block"
          ],
          "moduleName": "block-converter",
          "AMD": true,
          "webPath": "/src/models/converters",
          "convertedName": "block_converter",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'BlockConverter'.",
            "code": "wfJD",
            "evidence": "function BlockConverter() {}",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'BlockConverter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'convert'.",
            "code": "wfJD",
            "evidence": "BlockConverter.convert = function (content, contentType, actualCreate) {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'convert'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/converters/block-converter.js",
      "folderPath": "test-source/src/models/converters",
      "fileName": "block-converter.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models/converters",
      "webPath": "/src/models/converters",
      "libFile": false,
      "min": false,
      "realName": "block-converter",
      "name": "block-converter",
      "camelName": "BlockConverter",
      "processedFilePath": "test-output/src/models/converters/block-converter.js",
      "mappedModuleName": "src/models/converters/block-converter",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/converters/block-converter~BlockConverter": {
          "todos": [],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function BlockConverter() {}",
          "comment": -1,
          "range": [
            422,
            450
          ],
          "name": "BlockConverter",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/converters/block-converter",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 19,
        "requires": [
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/models/converters/block-descriptor-to-block",
          "column-and-block-layout-editor-path/models/converters/content-to-block"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 864,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./block-converter",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "BlockConverter": 530
        },
        "methods": [
          {
            "name": "BlockConverter",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function BlockConverter() {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "convert",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "BlockConverter",
            "doclet": "/**\n * @param content\n * @param contentType\n * @param actualCreate\n */",
            "args": [
              "content",
              "contentType",
              "actualCreate"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockConverter.convert = function (content, contentType, actualCreate) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "fileName": "block-converter.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 37,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore"
          ],
          "moduleName": "block-descriptor-to-block",
          "AMD": true,
          "webPath": "/src/models/converters",
          "convertedName": "block_descriptor_to_block",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'BlockDescriptorToBlock'.",
            "code": "wfJD",
            "evidence": "function BlockDescriptorToBlock(descriptor1) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'BlockDescriptorToBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'convert'.",
            "code": "wfJD",
            "evidence": "BlockDescriptorToBlock.prototype.convert = function () {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'convert'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getContents'.",
            "code": "wfJD",
            "evidence": "BlockDescriptorToBlock.prototype._getContents = function () {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getContents'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/converters/block-descriptor-to-block.js",
      "folderPath": "test-source/src/models/converters",
      "fileName": "block-descriptor-to-block.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models/converters",
      "webPath": "/src/models/converters",
      "libFile": false,
      "min": false,
      "realName": "block-descriptor-to-block",
      "name": "block-descriptor-to-block",
      "camelName": "BlockDescriptorToBlock",
      "processedFilePath": "test-output/src/models/converters/block-descriptor-to-block.js",
      "mappedModuleName": "src/models/converters/block-descriptor-to-block",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/converters/block-descriptor-to-block~BlockDescriptorToBlock": {
          "todos": [],
          "params": [
            "descriptor1"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function BlockDescriptorToBlock(descriptor1) {",
          "comment": -1,
          "range": [
            213,
            302
          ],
          "name": "BlockDescriptorToBlock",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param descriptor1\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/converters/block-descriptor-to-block",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 23,
        "requires": [
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 986,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./block-descriptor-to-block",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "BlockDescriptorToBlock": 886
        },
        "methods": [
          {
            "name": "BlockDescriptorToBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param descriptor1\n */",
            "args": [
              "descriptor1"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function BlockDescriptorToBlock(descriptor1) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "convert",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "BlockDescriptorToBlock.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockDescriptorToBlock.prototype.convert = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "BlockDescriptorToBlock.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockDescriptorToBlock.prototype._getContents = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "fileName": "block-descriptor-to-block.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 44,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/models/converters/content-to-content-json"
          ],
          "moduleName": "block-descriptor-to-content-json",
          "AMD": true,
          "webPath": "/src/models/converters",
          "convertedName": "block_descriptor_to_content_json",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'BlockDescriptorToContent'.",
            "code": "wfJD",
            "evidence": "function BlockDescriptorToContent(descriptor1, decoratorType1) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'BlockDescriptorToContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'convert'.",
            "code": "wfJD",
            "evidence": "BlockDescriptorToContent.prototype.convert = function () {",
            "line": 14,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'convert'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/converters/block-descriptor-to-content-json.js",
      "folderPath": "test-source/src/models/converters",
      "fileName": "block-descriptor-to-content-json.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models/converters",
      "webPath": "/src/models/converters",
      "libFile": false,
      "min": false,
      "realName": "block-descriptor-to-content-json",
      "name": "block-descriptor-to-content-json",
      "camelName": "BlockDescriptorToContentJson",
      "processedFilePath": "test-output/src/models/converters/block-descriptor-to-content-json.js",
      "mappedModuleName": "src/models/converters/block-descriptor-to-content-json",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/converters/block-descriptor-to-content-json~BlockDescriptorToContent": {
          "todos": [],
          "params": [
            "descriptor1",
            "decoratorType1"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function BlockDescriptorToContent(descriptor1, decoratorType1) {",
          "comment": -1,
          "range": [
            312,
            677
          ],
          "name": "BlockDescriptorToContent",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param descriptor1\n * @param decoratorType1\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/converters/block-descriptor-to-content-json",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 21,
        "requires": [
          "column-and-block-layout-editor-path/models/converters/content-to-content-json"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 1166,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./block-descriptor-to-content-json",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "BlockDescriptorToContent": 780
        },
        "methods": [
          {
            "name": "BlockDescriptorToContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param descriptor1\n * @param decoratorType1\n */",
            "args": [
              "descriptor1",
              "decoratorType1"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function BlockDescriptorToContent(descriptor1, decoratorType1) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "convert",
            "visibility": "public",
            "static": false,
            "lineNumber": 14,
            "memberOf": "BlockDescriptorToContent.prototype",
            "doclet": "/**\n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "BlockDescriptorToContent.prototype.convert = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "fileName": "block-descriptor-to-content-json.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 40,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/models/converters/content-to-content-json",
            "column-and-block-layout-editor-path/models/converters/block-descriptor-to-content-json"
          ],
          "moduleName": "content-converter",
          "AMD": true,
          "webPath": "/src/models/converters",
          "convertedName": "content_converter",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ContentConverter'.",
            "code": "wfJD",
            "evidence": "function ContentConverter() {}",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ContentConverter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'convert'.",
            "code": "wfJD",
            "evidence": "ContentConverter.convert = function (content, contentType, decoratorType) {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'convert'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/converters/content-converter.js",
      "folderPath": "test-source/src/models/converters",
      "fileName": "content-converter.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models/converters",
      "webPath": "/src/models/converters",
      "libFile": false,
      "min": false,
      "realName": "content-converter",
      "name": "content-converter",
      "camelName": "ContentConverter",
      "processedFilePath": "test-output/src/models/converters/content-converter.js",
      "mappedModuleName": "src/models/converters/content-converter",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/converters/content-converter~ContentConverter": {
          "todos": [],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function ContentConverter() {}",
          "comment": -1,
          "range": [
            456,
            486
          ],
          "name": "ContentConverter",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/converters/content-converter",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 16,
        "requires": [
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/models/converters/content-to-content-json",
          "column-and-block-layout-editor-path/models/converters/block-descriptor-to-content-json"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 848,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./content-converter",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "ContentConverter": 475
        },
        "methods": [
          {
            "name": "ContentConverter",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ContentConverter() {}",
            "originalJsDocDescription": {}
          },
          {
            "name": "convert",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "ContentConverter",
            "doclet": "/**\n * @param content\n * @param contentType\n * @param decoratorType\n */",
            "args": [
              "content",
              "contentType",
              "decoratorType"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentConverter.convert = function (content, contentType, decoratorType) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "fileName": "content-converter.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 34,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [],
          "moduleName": "content-to-block",
          "AMD": true,
          "webPath": "/src/models/converters",
          "convertedName": "content_to_block",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ContentToBlock'.",
            "code": "wfJD",
            "evidence": "function ContentToBlock(descriptor1, contentType1, actualCreate1) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ContentToBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'convert'.",
            "code": "wfJD",
            "evidence": "ContentToBlock.prototype.convert = function () {",
            "line": 12,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'convert'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/converters/content-to-block.js",
      "folderPath": "test-source/src/models/converters",
      "fileName": "content-to-block.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models/converters",
      "webPath": "/src/models/converters",
      "libFile": false,
      "min": false,
      "realName": "content-to-block",
      "name": "content-to-block",
      "camelName": "ContentToBlock",
      "processedFilePath": "test-output/src/models/converters/content-to-block.js",
      "mappedModuleName": "src/models/converters/content-to-block",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/converters/content-to-block~ContentToBlock": {
          "todos": [],
          "params": [
            "descriptor1",
            "contentType1",
            "actualCreate1"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function ContentToBlock(descriptor1, contentType1, actualCreate1) {",
          "comment": -1,
          "range": [
            163,
            385
          ],
          "name": "ContentToBlock",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param descriptor1\n * @param contentType1\n * @param actualCreate1\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/converters/content-to-block",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 24,
        "requires": [],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 857,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./content-to-block",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "ContentToBlock": 737
        },
        "methods": [
          {
            "name": "ContentToBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param descriptor1\n * @param contentType1\n * @param actualCreate1\n */",
            "args": [
              "descriptor1",
              "contentType1",
              "actualCreate1"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ContentToBlock(descriptor1, contentType1, actualCreate1) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "convert",
            "visibility": "public",
            "static": false,
            "lineNumber": 12,
            "memberOf": "ContentToBlock.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentToBlock.prototype.convert = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "fileName": "content-to-block.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 40,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore"
          ],
          "moduleName": "content-to-content-json",
          "AMD": true,
          "webPath": "/src/models/converters",
          "convertedName": "content_to_content_json",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ContentToContentJson'.",
            "code": "wfJD",
            "evidence": "function ContentToContentJson(descriptor1, contentType1, decoratorType1) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ContentToContentJson'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'convert'.",
            "code": "wfJD",
            "evidence": "ContentToContentJson.prototype.convert = function () {",
            "line": 12,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'convert'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/models/converters/content-to-content-json.js",
      "folderPath": "test-source/src/models/converters",
      "fileName": "content-to-content-json.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/models/converters",
      "webPath": "/src/models/converters",
      "libFile": false,
      "min": false,
      "realName": "content-to-content-json",
      "name": "content-to-content-json",
      "camelName": "ContentToContentJson",
      "processedFilePath": "test-output/src/models/converters/content-to-content-json.js",
      "mappedModuleName": "src/models/converters/content-to-content-json",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/models/converters/content-to-content-json~ContentToContentJson": {
          "todos": [],
          "params": [
            "descriptor1",
            "contentType1",
            "decoratorType1"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function ContentToContentJson(descriptor1, contentType1, decoratorType1) {",
          "comment": -1,
          "range": [
            205,
            404
          ],
          "name": "ContentToContentJson",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param descriptor1\n * @param contentType1\n * @param decoratorType1\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/models/converters/content-to-content-json",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 21,
        "requires": [
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 850,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./content-to-content-json",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "ContentToContentJson": 685
        },
        "methods": [
          {
            "name": "ContentToContentJson",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param descriptor1\n * @param contentType1\n * @param decoratorType1\n */",
            "args": [
              "descriptor1",
              "contentType1",
              "decoratorType1"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ContentToContentJson(descriptor1, contentType1, decoratorType1) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "convert",
            "visibility": "public",
            "static": false,
            "lineNumber": 12,
            "memberOf": "ContentToContentJson.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentToContentJson.prototype.convert = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/models/converters",
        "fileName": "content-to-content-json.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 38,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [],
          "moduleName": "column-and-block-layout-editor",
          "AMD": true,
          "webPath": "/src/nls",
          "convertedName": "column_and_block_layout_editor",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/nls/column-and-block-layout-editor.js",
      "folderPath": "test-source/src/nls",
      "fileName": "column-and-block-layout-editor.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/nls",
      "webPath": "/src/nls",
      "libFile": false,
      "min": false,
      "realName": "column-and-block-layout-editor",
      "name": "column-and-block-layout-editor",
      "camelName": "ColumnAndBlockLayoutEditor",
      "processedFilePath": "test-output/src/nls/column-and-block-layout-editor.js",
      "mappedModuleName": "src/nls/column-and-block-layout-editor",
      "couldParseOriginalSource": true,
      "namedConstructors": {},
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/nls/column-and-block-layout-editor",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 12,
        "requires": [],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/nls",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 303,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./column-and-block-layout-editor",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {},
        "methods": [],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/nls",
        "fileName": "column-and-block-layout-editor.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "possibleClassname": "",
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 16,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "column-and-block-layout-editor-path/padding/parser"
          ],
          "moduleName": "calculator",
          "AMD": true,
          "webPath": "/src/padding",
          "convertedName": "calculator",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'PaddingCalculator'.",
            "code": "wfJD",
            "evidence": "function PaddingCalculator(config) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'PaddingCalculator'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'calculate'.",
            "code": "wfJD",
            "evidence": "PaddingCalculator.prototype.calculate = function () {",
            "line": 15,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'calculate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getLeftPadding'.",
            "code": "wfJD",
            "evidence": "PaddingCalculator.prototype._getLeftPadding = function () {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getLeftPadding'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getRightPadding'.",
            "code": "wfJD",
            "evidence": "PaddingCalculator.prototype._getRightPadding = function () {",
            "line": 28,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getRightPadding'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/padding/calculator.js",
      "folderPath": "test-source/src/padding",
      "fileName": "calculator.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/padding",
      "webPath": "/src/padding",
      "libFile": false,
      "min": false,
      "realName": "calculator",
      "name": "calculator",
      "camelName": "Calculator",
      "processedFilePath": "test-output/src/padding/calculator.js",
      "mappedModuleName": "src/padding/calculator",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/padding/calculator~PaddingCalculator": {
          "todos": [],
          "params": [
            "config"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function PaddingCalculator(config) {",
          "comment": -1,
          "range": [
            225,
            408
          ],
          "name": "PaddingCalculator",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param config\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/padding/calculator",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 37,
        "requires": [
          "column-and-block-layout-editor-path/padding/parser"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/padding",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 1216,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./calculator",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "PaddingCalculator": 1155
        },
        "methods": [
          {
            "name": "PaddingCalculator",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param config\n */",
            "args": [
              "config"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function PaddingCalculator(config) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "calculate",
            "visibility": "public",
            "static": false,
            "lineNumber": 15,
            "memberOf": "PaddingCalculator.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PaddingCalculator.prototype.calculate = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getLeftPadding",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "PaddingCalculator.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PaddingCalculator.prototype._getLeftPadding = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getRightPadding",
            "visibility": "public",
            "static": false,
            "lineNumber": 28,
            "memberOf": "PaddingCalculator.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PaddingCalculator.prototype._getRightPadding = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/padding",
        "fileName": "calculator.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 58,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "parser",
          "AMD": true,
          "webPath": "/src/padding",
          "convertedName": "parser",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'PaddingParser'.",
            "code": "wfJD",
            "evidence": "function PaddingParser(markup) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'PaddingParser'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'parse'.",
            "code": "wfJD",
            "evidence": "PaddingParser.prototype.parse = function () {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'parse'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_readCss'.",
            "code": "wfJD",
            "evidence": "PaddingParser.prototype._readCss = function (attribute) {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_readCss'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_parsePx'.",
            "code": "wfJD",
            "evidence": "PaddingParser.prototype._parsePx = function (pxString) {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_parsePx'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/padding/parser.js",
      "folderPath": "test-source/src/padding",
      "fileName": "parser.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/padding",
      "webPath": "/src/padding",
      "libFile": false,
      "min": false,
      "realName": "parser",
      "name": "parser",
      "camelName": "Parser",
      "processedFilePath": "test-output/src/padding/parser.js",
      "mappedModuleName": "src/padding/parser",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/padding/parser~PaddingParser": {
          "todos": [],
          "params": [
            "markup"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function PaddingParser(markup) {",
          "comment": -1,
          "range": [
            213,
            378
          ],
          "name": "PaddingParser",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param markup\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/padding/parser",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 24,
        "requires": [
          "jquery",
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/padding",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 949,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./parser",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "PaddingParser": 907
        },
        "methods": [
          {
            "name": "PaddingParser",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param markup\n */",
            "args": [
              "markup"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function PaddingParser(markup) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "parse",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "PaddingParser.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PaddingParser.prototype.parse = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_readCss",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "PaddingParser.prototype",
            "doclet": "/**\n * @param attribute\n */",
            "args": [
              "attribute"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PaddingParser.prototype._readCss = function (attribute) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_parsePx",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "PaddingParser.prototype",
            "doclet": "/**\n * @param pxString\n * @return {boolean}\n */",
            "args": [
              "pxString"
            ],
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "PaddingParser.prototype._parsePx = function (pxString) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/padding",
        "fileName": "parser.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 47,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "renderer",
          "AMD": true,
          "webPath": "/src/padding",
          "convertedName": "renderer",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'PaddingRenderer'.",
            "code": "wfJD",
            "evidence": "function PaddingRenderer(config) {",
            "line": 4,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'PaddingRenderer'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "PaddingRenderer.prototype.render = function () {",
            "line": 14,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getPaddingElement'.",
            "code": "wfJD",
            "evidence": "PaddingRenderer.prototype._getPaddingElement = function ($markup) {",
            "line": 22,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getPaddingElement'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/padding/renderer.js",
      "folderPath": "test-source/src/padding",
      "fileName": "renderer.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/padding",
      "webPath": "/src/padding",
      "libFile": false,
      "min": false,
      "realName": "renderer",
      "name": "renderer",
      "camelName": "Renderer",
      "processedFilePath": "test-output/src/padding/renderer.js",
      "mappedModuleName": "src/padding/renderer",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/padding/renderer~PaddingRenderer": {
          "todos": [],
          "params": [
            "config"
          ],
          "memberOf": "",
          "returnType": "",
          "ctor": true,
          "lineNumber": 4,
          "line": "function PaddingRenderer(config) {",
          "comment": -1,
          "range": [
            221,
            333
          ],
          "name": "PaddingRenderer",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n * @param config\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/padding/renderer",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 27,
        "requires": [
          "jquery",
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/padding",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 1077,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./renderer",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "PaddingRenderer": 1081
        },
        "methods": [
          {
            "name": "PaddingRenderer",
            "visibility": "public",
            "static": false,
            "lineNumber": 4,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n * @param config\n */",
            "args": [
              "config"
            ],
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function PaddingRenderer(config) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 14,
            "memberOf": "PaddingRenderer.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PaddingRenderer.prototype.render = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getPaddingElement",
            "visibility": "public",
            "static": false,
            "lineNumber": 22,
            "memberOf": "PaddingRenderer.prototype",
            "doclet": "/**\n * @param $markup\n */",
            "args": [
              "$markup"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PaddingRenderer.prototype._getPaddingElement = function ($markup) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/padding",
        "fileName": "renderer.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 49,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "backbone",
            "galileo-lib/modules/services/document-feature-service",
            "column-and-block-layout-editor-path/views/content",
            "column-and-block-layout-editor-path/views/move-handle",
            "underscore"
          ],
          "moduleName": "block",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "block",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'BlockView'.",
            "code": "wfJD",
            "evidence": "function BlockView() {",
            "line": 8,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'BlockView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getContentDecoratorTemplate'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype._getContentDecoratorTemplate = function (type) {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getContentDecoratorTemplate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderId'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype._renderId = function () {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderId'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_documentSupportsMove'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype._documentSupportsMove = function () {",
            "line": 28,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_documentSupportsMove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderContent'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype._renderContent = function (content, options) {",
            "line": 31,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderContent'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderContents'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype._renderContents = function (options) {",
            "line": 42,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderContents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderMoveHandle'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype._renderMoveHandle = function () {",
            "line": 49,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderMoveHandle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderContainedContentTypes'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype._renderContainedContentTypes = function () {",
            "line": 55,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderContainedContentTypes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype.initialize = function (opts) {",
            "line": 62,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype.render = function (options) {",
            "line": 67,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getDimensions'.",
            "code": "wfJD",
            "evidence": "BlockView.prototype.getDimensions = function () {",
            "line": 79,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getDimensions'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/block.js",
      "folderPath": "test-source/src/views",
      "fileName": "block.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "block",
      "name": "block",
      "camelName": "Block",
      "processedFilePath": "test-output/src/views/block.js",
      "mappedModuleName": "src/views/block",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/block~BlockView": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 8,
          "line": "function BlockView() {",
          "comment": -1,
          "range": [
            453,
            554
          ],
          "name": "BlockView",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/block",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 86,
        "requires": [
          "jquery",
          "backbone",
          "galileo-lib/modules/services/document-feature-service",
          "column-and-block-layout-editor-path/views/content",
          "column-and-block-layout-editor-path/views/move-handle",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 3457,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./block",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "BlockView": 3289
        },
        "methods": [
          {
            "name": "BlockView",
            "visibility": "public",
            "static": false,
            "lineNumber": 8,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function BlockView() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getContentDecoratorTemplate",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @param type\n */",
            "args": [
              "type"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype._getContentDecoratorTemplate = function (type) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderId",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype._renderId = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_documentSupportsMove",
            "visibility": "public",
            "static": false,
            "lineNumber": 28,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype._documentSupportsMove = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderContent",
            "visibility": "public",
            "static": false,
            "lineNumber": 31,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @param content\n * @param options\n */",
            "args": [
              "content",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype._renderContent = function (content, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderContents",
            "visibility": "public",
            "static": false,
            "lineNumber": 42,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @param options\n * @return {object} AssignmentExpression\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype._renderContents = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderMoveHandle",
            "visibility": "public",
            "static": false,
            "lineNumber": 49,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype._renderMoveHandle = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderContainedContentTypes",
            "visibility": "public",
            "static": false,
            "lineNumber": 55,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype._renderContainedContentTypes = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 62,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @param opts\n * @return {object} AssignmentExpression\n */",
            "args": [
              "opts"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype.initialize = function (opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 67,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @param options\n * @return {object} ThisExpression\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype.render = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getDimensions",
            "visibility": "public",
            "static": false,
            "lineNumber": 79,
            "memberOf": "BlockView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "BlockView.prototype.getDimensions = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "block.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 143,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "backbone",
            "text!column-and-block-layout-editor-path/templates/column-resize-handle.html",
            "column-and-block-layout-editor-path/percentage-utils",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/column-resize-manager",
            "underscore"
          ],
          "moduleName": "column-resize-handle-IE",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "column_resize_handle_ie",
          "min": false,
          "main": 0,
          "uses_$": false,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ColumnResizeHandleIE'.",
            "code": "wfJD",
            "evidence": "function ColumnResizeHandleIE() {",
            "line": 8,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ColumnResizeHandleIE'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandleIE.prototype.initialize = function () {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_startResizingColumn'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandleIE.prototype._startResizingColumn = function (event) {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_startResizingColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_finishResizingColumn'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandleIE.prototype._finishResizingColumn = function () {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_finishResizingColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_dragHandle'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandleIE.prototype._dragHandle = function (deltaInPixels) {",
            "line": 30,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_dragHandle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_getColumnPercentage'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandleIE.prototype._getColumnPercentage = function () {",
            "line": 43,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_getColumnPercentage'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setColumnPercentage'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandleIE.prototype._setColumnPercentage = function (newPercentage) {",
            "line": 48,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setColumnPercentage'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_calculateNewColumnPercentage'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandleIE.prototype._calculateNewColumnPercentage = function (deltaInDecimal) {",
            "line": 51,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_calculateNewColumnPercentage'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandleIE.prototype.render = function () {",
            "line": 59,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/column-resize-handle-IE.js",
      "folderPath": "test-source/src/views",
      "fileName": "column-resize-handle-IE.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "column-resize-handle-ie",
      "name": "column-resize-handle-IE",
      "camelName": "ColumnResizeHandleIe",
      "processedFilePath": "test-output/src/views/column-resize-handle-IE.js",
      "mappedModuleName": "src/views/column-resize-handle-IE",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/column-resize-handle-IE~ColumnResizeHandleIE": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 8,
          "line": "function ColumnResizeHandleIE() {",
          "comment": -1,
          "range": [
            576,
            825
          ],
          "name": "ColumnResizeHandleIE",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/column-resize-handle-IE",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 66,
        "requires": [
          "jquery",
          "backbone",
          "text!column-and-block-layout-editor-path/templates/column-resize-handle.html",
          "column-and-block-layout-editor-path/percentage-utils",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/column-resize-manager",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": false,
        "chars": 3514,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./column-resize-handle-IE",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ColumnResizeHandleIE": 2997
        },
        "methods": [
          {
            "name": "ColumnResizeHandleIE",
            "visibility": "public",
            "static": false,
            "lineNumber": 8,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ColumnResizeHandleIE() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "ColumnResizeHandleIE.prototype",
            "doclet": "/**\n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandleIE.prototype.initialize = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_startResizingColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "ColumnResizeHandleIE.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandleIE.prototype._startResizingColumn = function (event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_finishResizingColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "ColumnResizeHandleIE.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandleIE.prototype._finishResizingColumn = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_dragHandle",
            "visibility": "public",
            "static": false,
            "lineNumber": 30,
            "memberOf": "ColumnResizeHandleIE.prototype",
            "doclet": "/**\n * @param deltaInPixels\n */",
            "args": [
              "deltaInPixels"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandleIE.prototype._dragHandle = function (deltaInPixels) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_getColumnPercentage",
            "visibility": "public",
            "static": false,
            "lineNumber": 43,
            "memberOf": "ColumnResizeHandleIE.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandleIE.prototype._getColumnPercentage = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setColumnPercentage",
            "visibility": "public",
            "static": false,
            "lineNumber": 48,
            "memberOf": "ColumnResizeHandleIE.prototype",
            "doclet": "/**\n * @param newPercentage\n */",
            "args": [
              "newPercentage"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandleIE.prototype._setColumnPercentage = function (newPercentage) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_calculateNewColumnPercentage",
            "visibility": "public",
            "static": false,
            "lineNumber": 51,
            "memberOf": "ColumnResizeHandleIE.prototype",
            "doclet": "/**\n * @param deltaInDecimal\n */",
            "args": [
              "deltaInDecimal"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandleIE.prototype._calculateNewColumnPercentage = function (deltaInDecimal) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 59,
            "memberOf": "ColumnResizeHandleIE.prototype",
            "doclet": "/**\n * @return {object} ThisExpression\n */",
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandleIE.prototype.render = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "column-resize-handle-IE.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 115,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "underscore",
            "backbone",
            "text!column-and-block-layout-editor-path/templates/column-resize-handle.html",
            "column-and-block-layout-editor-path/percentage-utils",
            "column-and-block-layout-editor-path/column-resize-manager",
            "column-and-block-layout-editor-path/constants"
          ],
          "moduleName": "column-resize-handle",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "column_resize_handle",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ColumnResizeHandle'.",
            "code": "wfJD",
            "evidence": "function ColumnResizeHandle() {",
            "line": 8,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ColumnResizeHandle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandle.prototype.initialize = function () {",
            "line": 15,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_startResizingColumn'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandle.prototype._startResizingColumn = function (event) {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_startResizingColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_finishResizingColumn'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandle.prototype._finishResizingColumn = function () {",
            "line": 26,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_finishResizingColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onColumnResize'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandle.prototype._onColumnResize = function (deltaInPixels) {",
            "line": 29,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onColumnResize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "ColumnResizeHandle.prototype.render = function () {",
            "line": 40,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/column-resize-handle.js",
      "folderPath": "test-source/src/views",
      "fileName": "column-resize-handle.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "column-resize-handle",
      "name": "column-resize-handle",
      "camelName": "ColumnResizeHandle",
      "processedFilePath": "test-output/src/views/column-resize-handle.js",
      "mappedModuleName": "src/views/column-resize-handle",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/column-resize-handle~ColumnResizeHandle": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 8,
          "line": "function ColumnResizeHandle() {",
          "comment": -1,
          "range": [
            582,
            760
          ],
          "name": "ColumnResizeHandle",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/column-resize-handle",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 49,
        "requires": [
          "jquery",
          "underscore",
          "backbone",
          "text!column-and-block-layout-editor-path/templates/column-resize-handle.html",
          "column-and-block-layout-editor-path/percentage-utils",
          "column-and-block-layout-editor-path/column-resize-manager",
          "column-and-block-layout-editor-path/constants"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 2432,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./column-resize-handle",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ColumnResizeHandle": 2037
        },
        "methods": [
          {
            "name": "ColumnResizeHandle",
            "visibility": "public",
            "static": false,
            "lineNumber": 8,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ColumnResizeHandle() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 15,
            "memberOf": "ColumnResizeHandle.prototype",
            "doclet": "/**\n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandle.prototype.initialize = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_startResizingColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "ColumnResizeHandle.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandle.prototype._startResizingColumn = function (event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_finishResizingColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 26,
            "memberOf": "ColumnResizeHandle.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandle.prototype._finishResizingColumn = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onColumnResize",
            "visibility": "public",
            "static": false,
            "lineNumber": 29,
            "memberOf": "ColumnResizeHandle.prototype",
            "doclet": "/**\n * @param deltaInPixels\n */",
            "args": [
              "deltaInPixels"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandle.prototype._onColumnResize = function (deltaInPixels) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 40,
            "memberOf": "ColumnResizeHandle.prototype",
            "doclet": "/**\n * @return {object} ThisExpression\n */",
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "ColumnResizeHandle.prototype.render = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "column-resize-handle.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 83,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "underscore",
            "jquery",
            "backbone",
            "template-engine",
            "column-and-block-layout-editor-path/views/block",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/views/column-resize-handle",
            "column-and-block-layout-editor-path/views/column-resize-handle-IE"
          ],
          "moduleName": "column",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "column",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'block'.",
            "code": "wfJD",
            "evidence": "block: function (id) {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'block'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ColumnView'.",
            "code": "wfJD",
            "evidence": "function ColumnView() {",
            "line": 17,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ColumnView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_mouseOver'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._mouseOver = function (e) {",
            "line": 27,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_mouseOver'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_mouseOut'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._mouseOut = function (e) {",
            "line": 34,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_mouseOut'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_addBlock'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._addBlock = function (block, idx) {",
            "line": 41,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_addBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeBlock'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._removeBlock = function (block, idx) {",
            "line": 51,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_initEvents'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._initEvents = function () {",
            "line": 55,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_initEvents'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderBlock'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._renderBlock = function (blockElement, block, options) {",
            "line": 61,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderBlock'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderBlocks'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._renderBlocks = function (options) {",
            "line": 76,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderBlocks'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_addColumnPositionClass'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._addColumnPositionClass = function () {",
            "line": 85,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_addColumnPositionClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderResizeColumnHandle'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._renderResizeColumnHandle = function () {",
            "line": 94,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderResizeColumnHandle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_browserIsIE11'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype._browserIsIE11 = function () {",
            "line": 106,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_browserIsIE11'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype.initialize = function (opts) {",
            "line": 109,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype.render = function (options) {",
            "line": 115,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'remove'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype.remove = function (options) {",
            "line": 128,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'remove'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getDimensions'.",
            "code": "wfJD",
            "evidence": "ColumnView.prototype.getDimensions = function () {",
            "line": 135,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getDimensions'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/column.js",
      "folderPath": "test-source/src/views",
      "fileName": "column.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "column",
      "name": "column",
      "camelName": "Column",
      "processedFilePath": "test-output/src/views/column.js",
      "mappedModuleName": "src/views/column",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/column~ColumnView": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 17,
          "line": "function ColumnView() {",
          "comment": -1,
          "range": [
            776,
            979
          ],
          "name": "ColumnView",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/column",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 143,
        "requires": [
          "underscore",
          "jquery",
          "backbone",
          "template-engine",
          "column-and-block-layout-editor-path/views/block",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/views/column-resize-handle",
          "column-and-block-layout-editor-path/views/column-resize-handle-IE"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 5476,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./column",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ColumnView": 6177
        },
        "methods": [
          {
            "name": "block",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "",
            "doclet": "/**\n * @param id\n */",
            "args": [
              "id"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "block: function (id) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "ColumnView",
            "visibility": "public",
            "static": false,
            "lineNumber": 17,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ColumnView() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_mouseOver",
            "visibility": "public",
            "static": false,
            "lineNumber": 27,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param e\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._mouseOver = function (e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_mouseOut",
            "visibility": "public",
            "static": false,
            "lineNumber": 34,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param e\n */",
            "args": [
              "e"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._mouseOut = function (e) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_addBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 41,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param block\n * @param idx\n */",
            "args": [
              "block",
              "idx"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._addBlock = function (block, idx) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 51,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param block\n * @param idx\n */",
            "args": [
              "block",
              "idx"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._removeBlock = function (block, idx) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_initEvents",
            "visibility": "public",
            "static": false,
            "lineNumber": 55,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._initEvents = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderBlock",
            "visibility": "public",
            "static": false,
            "lineNumber": 61,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param blockElement\n * @param block\n * @param options\n */",
            "args": [
              "blockElement",
              "block",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._renderBlock = function (blockElement, block, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderBlocks",
            "visibility": "public",
            "static": false,
            "lineNumber": 76,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param options\n * @return {object} AssignmentExpression\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._renderBlocks = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_addColumnPositionClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 85,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._addColumnPositionClass = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderResizeColumnHandle",
            "visibility": "public",
            "static": false,
            "lineNumber": 94,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._renderResizeColumnHandle = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_browserIsIE11",
            "visibility": "public",
            "static": false,
            "lineNumber": 106,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype._browserIsIE11 = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 109,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param opts\n */",
            "args": [
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype.initialize = function (opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 115,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param options\n * @return {object} ThisExpression\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype.render = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "remove",
            "visibility": "public",
            "static": false,
            "lineNumber": 128,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype.remove = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getDimensions",
            "visibility": "public",
            "static": false,
            "lineNumber": 135,
            "memberOf": "ColumnView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ColumnView.prototype.getDimensions = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "column.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 226,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "backbone",
            "template-engine",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/padding/calculator",
            "column-and-block-layout-editor-path/padding/renderer",
            "column-and-block-layout-editor-path/padding/parser",
            "underscore"
          ],
          "moduleName": "content",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "content",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ContentView'.",
            "code": "wfJD",
            "evidence": "function ContentView() {",
            "line": 11,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ContentView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_set$Editor'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._set$Editor = function () {",
            "line": 15,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_set$Editor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderTemplate'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._renderTemplate = function () {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderTemplate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_calculatePadding'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._calculatePadding = function (markup) {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_calculatePadding'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderPaddedMarkup'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._renderPaddedMarkup = function () {",
            "line": 36,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderPaddedMarkup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderContainer'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._renderContainer = function () {",
            "line": 42,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderContainer'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderEditableElement'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._renderEditableElement = function () {",
            "line": 48,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderEditableElement'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderEditor'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._renderEditor = function (options) {",
            "line": 59,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderEditor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderChildContentView'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._renderChildContentView = function (options) {",
            "line": 66,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderChildContentView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeChildContentView'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._removeChildContentView = function () {",
            "line": 78,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeChildContentView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype.initialize = function (opts) {",
            "line": 82,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype.render = function (options) {",
            "line": 93,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_setContentVspace'.",
            "code": "wfJD",
            "evidence": "ContentView.prototype._setContentVspace = function () {",
            "line": 108,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_setContentVspace'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/content.js",
      "folderPath": "test-source/src/views",
      "fileName": "content.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "content",
      "name": "content",
      "camelName": "Content",
      "processedFilePath": "test-output/src/views/content.js",
      "mappedModuleName": "src/views/content",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/content~ContentView": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 11,
          "line": "function ContentView() {",
          "comment": -1,
          "range": [
            592,
            760
          ],
          "name": "ContentView",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/content",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 117,
        "requires": [
          "jquery",
          "backbone",
          "template-engine",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/padding/calculator",
          "column-and-block-layout-editor-path/padding/renderer",
          "column-and-block-layout-editor-path/padding/parser",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 4799,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./content",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ContentView": 5129
        },
        "methods": [
          {
            "name": "ContentView",
            "visibility": "public",
            "static": false,
            "lineNumber": 11,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ContentView() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_set$Editor",
            "visibility": "public",
            "static": false,
            "lineNumber": 15,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._set$Editor = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderTemplate",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._renderTemplate = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_calculatePadding",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @param markup\n */",
            "args": [
              "markup"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._calculatePadding = function (markup) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderPaddedMarkup",
            "visibility": "public",
            "static": false,
            "lineNumber": 36,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._renderPaddedMarkup = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderContainer",
            "visibility": "public",
            "static": false,
            "lineNumber": 42,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._renderContainer = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderEditableElement",
            "visibility": "public",
            "static": false,
            "lineNumber": 48,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._renderEditableElement = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderEditor",
            "visibility": "public",
            "static": false,
            "lineNumber": 59,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._renderEditor = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderChildContentView",
            "visibility": "public",
            "static": false,
            "lineNumber": 66,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._renderChildContentView = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeChildContentView",
            "visibility": "public",
            "static": false,
            "lineNumber": 78,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @return {object} AssignmentExpression\n */",
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._removeChildContentView = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 82,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @param opts\n */",
            "args": [
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype.initialize = function (opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 93,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @param options\n * @return {object} ThisExpression\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype.render = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_setContentVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 108,
            "memberOf": "ContentView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ContentView.prototype._setContentVspace = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "content.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 180,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "backbone",
            "template-engine",
            "galileo-lib/modules/managers/error-manager",
            "column-and-block-layout-editor-path/constants",
            "underscore"
          ],
          "moduleName": "import",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "import",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'ImportView'.",
            "code": "wfJD",
            "evidence": "function ImportView() {",
            "line": 7,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'ImportView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_containerMarkup'.",
            "code": "wfJD",
            "evidence": "ImportView.prototype._containerMarkup = function () {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_containerMarkup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeActivationAttributes'.",
            "code": "wfJD",
            "evidence": "ImportView.prototype._removeActivationAttributes = function ($layout) {",
            "line": 13,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeActivationAttributes'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onElementCreated'.",
            "code": "wfJD",
            "evidence": "ImportView.prototype._onElementCreated = function () {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onElementCreated'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "ImportView.prototype.initialize = function (opts) {",
            "line": 19,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "ImportView.prototype.render = function () {",
            "line": 23,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'callback'.",
            "code": "wfJD",
            "evidence": "callback = function (editor, content) {",
            "line": 41,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'callback'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/import.js",
      "folderPath": "test-source/src/views",
      "fileName": "import.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "import",
      "name": "import",
      "camelName": "Import",
      "processedFilePath": "test-output/src/views/import.js",
      "mappedModuleName": "src/views/import",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/import~ImportView": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 7,
          "line": "function ImportView() {",
          "comment": -1,
          "range": [
            362,
            461
          ],
          "name": "ImportView",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/import",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 68,
        "requires": [
          "jquery",
          "backbone",
          "template-engine",
          "galileo-lib/modules/managers/error-manager",
          "column-and-block-layout-editor-path/constants",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 2828,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./import",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "ImportView": 3452
        },
        "methods": [
          {
            "name": "ImportView",
            "visibility": "public",
            "static": false,
            "lineNumber": 7,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function ImportView() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_containerMarkup",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "ImportView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ImportView.prototype._containerMarkup = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeActivationAttributes",
            "visibility": "public",
            "static": false,
            "lineNumber": 13,
            "memberOf": "ImportView.prototype",
            "doclet": "/**\n * @param $layout\n */",
            "args": [
              "$layout"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ImportView.prototype._removeActivationAttributes = function ($layout) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onElementCreated",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "memberOf": "ImportView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ImportView.prototype._onElementCreated = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 19,
            "memberOf": "ImportView.prototype",
            "doclet": "/**\n * @param opts\n */",
            "args": [
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "ImportView.prototype.initialize = function (opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 23,
            "memberOf": "ImportView.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "ImportView.prototype.render = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "callback",
            "visibility": "public",
            "static": false,
            "lineNumber": 41,
            "memberOf": "",
            "doclet": "/**\n * @param editor\n * @param content\n */",
            "args": [
              "editor",
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "callback = function (editor, content) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "import.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 114,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "underscore",
            "backbone",
            "template-engine",
            "column-and-block-layout-editor-path/constants",
            "column-and-block-layout-editor-path/views/column"
          ],
          "moduleName": "layout",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "layout",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'LayoutView'.",
            "code": "wfJD",
            "evidence": "function LayoutView() {",
            "line": 10,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'LayoutView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_cancelDrop'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype._cancelDrop = function (event) {",
            "line": 17,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_cancelDrop'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_retrieveTemplate'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype._retrieveTemplate = function () {",
            "line": 20,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_retrieveTemplate'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderLayout'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype._renderLayout = function () {",
            "line": 26,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderLayout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderColumn'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype._renderColumn = function (columnElement, column, options) {",
            "line": 38,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderColumn'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_renderColumns'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype._renderColumns = function (options) {",
            "line": 53,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_renderColumns'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onModelChanged'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype._onModelChanged = function (options) {",
            "line": 62,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onModelChanged'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype.initialize = function (opts) {",
            "line": 69,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getRenderedElement'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype.getRenderedElement = function () {",
            "line": 76,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getRenderedElement'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype.render = function (options) {",
            "line": 83,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_cleanUp'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype._cleanUp = function (options) {",
            "line": 88,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_cleanUp'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getDimensions'.",
            "code": "wfJD",
            "evidence": "LayoutView.prototype.getDimensions = function () {",
            "line": 91,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getDimensions'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/layout.js",
      "folderPath": "test-source/src/views",
      "fileName": "layout.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "layout",
      "name": "layout",
      "camelName": "Layout",
      "processedFilePath": "test-output/src/views/layout.js",
      "mappedModuleName": "src/views/layout",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/layout~LayoutView": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 10,
          "line": "function LayoutView() {",
          "comment": -1,
          "range": [
            450,
            549
          ],
          "name": "LayoutView",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/layout",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 101,
        "requires": [
          "jquery",
          "underscore",
          "backbone",
          "template-engine",
          "column-and-block-layout-editor-path/constants",
          "column-and-block-layout-editor-path/views/column"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 3665,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./layout",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "LayoutView": 4103
        },
        "methods": [
          {
            "name": "LayoutView",
            "visibility": "public",
            "static": false,
            "lineNumber": 10,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function LayoutView() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_cancelDrop",
            "visibility": "public",
            "static": false,
            "lineNumber": 17,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype._cancelDrop = function (event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_retrieveTemplate",
            "visibility": "public",
            "static": false,
            "lineNumber": 20,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype._retrieveTemplate = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderLayout",
            "visibility": "public",
            "static": false,
            "lineNumber": 26,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype._renderLayout = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderColumn",
            "visibility": "public",
            "static": false,
            "lineNumber": 38,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @param columnElement\n * @param column\n * @param options\n */",
            "args": [
              "columnElement",
              "column",
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype._renderColumn = function (columnElement, column, options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_renderColumns",
            "visibility": "public",
            "static": false,
            "lineNumber": 53,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @param options\n * @return {object} AssignmentExpression\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "AssignmentExpression",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype._renderColumns = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onModelChanged",
            "visibility": "public",
            "static": false,
            "lineNumber": 62,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype._onModelChanged = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 69,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @param opts\n */",
            "args": [
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype.initialize = function (opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getRenderedElement",
            "visibility": "public",
            "static": false,
            "lineNumber": 76,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype.getRenderedElement = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 83,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @param options\n * @return {object} ThisExpression\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype.render = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_cleanUp",
            "visibility": "public",
            "static": false,
            "lineNumber": 88,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @param options\n */",
            "args": [
              "options"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype._cleanUp = function (options) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "getDimensions",
            "visibility": "public",
            "static": false,
            "lineNumber": 91,
            "memberOf": "LayoutView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "LayoutView.prototype.getDimensions = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "layout.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 162,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "backbone",
            "column-and-block-layout-editor-path/constants",
            "constants",
            "plugins/drag",
            "css!column-and-block-layout-editor-path/css/cable",
            "underscore"
          ],
          "moduleName": "move-handle",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "move_handle",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'MoveHandle'.",
            "code": "wfJD",
            "evidence": "function MoveHandle() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'MoveHandle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "MoveHandle.prototype.render = function () {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_toggleHover'.",
            "code": "wfJD",
            "evidence": "MoveHandle.prototype._toggleHover = function () {",
            "line": 44,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_toggleHover'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_preventDefault'.",
            "code": "wfJD",
            "evidence": "MoveHandle.prototype._preventDefault = function (event) {",
            "line": 47,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_preventDefault'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/move-handle.js",
      "folderPath": "test-source/src/views",
      "fileName": "move-handle.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "move-handle",
      "name": "move-handle",
      "camelName": "MoveHandle",
      "processedFilePath": "test-output/src/views/move-handle.js",
      "mappedModuleName": "src/views/move-handle",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/move-handle~MoveHandle": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function MoveHandle() {",
          "comment": -1,
          "range": [
            362,
            518
          ],
          "name": "MoveHandle",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/move-handle",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 52,
        "requires": [
          "backbone",
          "column-and-block-layout-editor-path/constants",
          "constants",
          "plugins/drag",
          "css!column-and-block-layout-editor-path/css/cable",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 2048,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./move-handle",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "MoveHandle": 2324
        },
        "methods": [
          {
            "name": "MoveHandle",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function MoveHandle() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "MoveHandle.prototype",
            "doclet": "/**\n * @return {function}\n */",
            "description": "",
            "return": "{function}",
            "classDeclarationFlag": false,
            "line": "MoveHandle.prototype.render = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_toggleHover",
            "visibility": "public",
            "static": false,
            "lineNumber": 44,
            "memberOf": "MoveHandle.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "MoveHandle.prototype._toggleHover = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_preventDefault",
            "visibility": "public",
            "static": false,
            "lineNumber": 47,
            "memberOf": "MoveHandle.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "MoveHandle.prototype._preventDefault = function (event) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "move-handle.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 79,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "backbone",
            "galileo-lib/modules/managers/error-manager",
            "column-and-block-layout-editor-path/constants",
            "underscore"
          ],
          "moduleName": "publish",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "publish",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'PublishView'.",
            "code": "wfJD",
            "evidence": "function PublishView() {",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'PublishView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_containerMarkup'.",
            "code": "wfJD",
            "evidence": "PublishView.prototype._containerMarkup = function () {",
            "line": 9,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_containerMarkup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_removeUnpublishableElements'.",
            "code": "wfJD",
            "evidence": "PublishView.prototype._removeUnpublishableElements = function ($container) {",
            "line": 14,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_removeUnpublishableElements'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_render'.",
            "code": "wfJD",
            "evidence": "PublishView.prototype._render = function () {",
            "line": 18,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'callback'.",
            "code": "wfJD",
            "evidence": "callback = function (editor, content) {",
            "line": 37,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'callback'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_onElementCreated'.",
            "code": "wfJD",
            "evidence": "PublishView.prototype._onElementCreated = function () {",
            "line": 72,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_onElementCreated'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "PublishView.prototype.initialize = function (opts) {",
            "line": 75,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "PublishView.prototype.render = function () {",
            "line": 79,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/publish.js",
      "folderPath": "test-source/src/views",
      "fileName": "publish.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "publish",
      "name": "publish",
      "camelName": "Publish",
      "processedFilePath": "test-output/src/views/publish.js",
      "mappedModuleName": "src/views/publish",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/publish~PublishView": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 6,
          "line": "function PublishView() {",
          "comment": -1,
          "range": [
            336,
            437
          ],
          "name": "PublishView",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/publish",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 88,
        "requires": [
          "jquery",
          "backbone",
          "galileo-lib/modules/managers/error-manager",
          "column-and-block-layout-editor-path/constants",
          "underscore"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 3535,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./publish",
        "uses_console_log": true,
        "uses_backbone": true,
        "classes": {
          "PublishView": 4321
        },
        "methods": [
          {
            "name": "PublishView",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function PublishView() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_containerMarkup",
            "visibility": "public",
            "static": false,
            "lineNumber": 9,
            "memberOf": "PublishView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PublishView.prototype._containerMarkup = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_removeUnpublishableElements",
            "visibility": "public",
            "static": false,
            "lineNumber": 14,
            "memberOf": "PublishView.prototype",
            "doclet": "/**\n * @param $container\n */",
            "args": [
              "$container"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PublishView.prototype._removeUnpublishableElements = function ($container) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_render",
            "visibility": "public",
            "static": false,
            "lineNumber": 18,
            "memberOf": "PublishView.prototype",
            "doclet": "/**\n * @return {boolean}\n */",
            "description": "",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "PublishView.prototype._render = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "callback",
            "visibility": "public",
            "static": false,
            "lineNumber": 37,
            "memberOf": "",
            "doclet": "/**\n * @param editor\n * @param content\n */",
            "args": [
              "editor",
              "content"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "callback = function (editor, content) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_onElementCreated",
            "visibility": "public",
            "static": false,
            "lineNumber": 72,
            "memberOf": "PublishView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PublishView.prototype._onElementCreated = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 75,
            "memberOf": "PublishView.prototype",
            "doclet": "/**\n * @param opts\n */",
            "args": [
              "opts"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PublishView.prototype.initialize = function (opts) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 79,
            "memberOf": "PublishView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "PublishView.prototype.render = function () {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "publish.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 139,
      "EMPTY": false
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery",
            "underscore",
            "backbone",
            "template-engine",
            "column-and-block-layout-editor-path/constants",
            "text!column-and-block-layout-editor-path/templates/vspace-flyout.html",
            "css!column-and-block-layout-editor-path/css/flyout.css",
            "i18n!column-and-block-layout-editor-path/nls/column-and-block-layout-editor",
            "galileo-lib/modules/services/usage-tracking"
          ],
          "moduleName": "vspace-flyout",
          "AMD": true,
          "webPath": "/src/views",
          "convertedName": "vspace_flyout",
          "min": false,
          "main": 0,
          "uses_$": true,
          "uses_Y": false,
          "uses_alert": false,
          "strict": false
        }
      },
      "errors": {
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'VspaceFlyoutView'.",
            "code": "wfJD",
            "evidence": "function VspaceFlyoutView() {",
            "line": 14,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'VspaceFlyoutView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'initialize'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype.initialize = function (params) {",
            "line": 21,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'initialize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'render'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype.render = function () {",
            "line": 32,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'render'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'showFlyout'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype.showFlyout = function (event) {",
            "line": 43,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'showFlyout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hideFlyout'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype.hideFlyout = function () {",
            "line": 56,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hideFlyout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_appendToDOM'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype._appendToDOM = function () {",
            "line": 60,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_appendToDOM'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_eventTargetIsFlyout'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype._eventTargetIsFlyout = function (event) {",
            "line": 66,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_eventTargetIsFlyout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_dismissFlyout'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype._dismissFlyout = function (event) {",
            "line": 69,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_dismissFlyout'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_toggleVspace'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype._toggleVspace = function (event) {",
            "line": 74,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_toggleVspace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method '_trackUsage'.",
            "code": "wfJD",
            "evidence": "VspaceFlyoutView.prototype._trackUsage = function (identifier, value) {",
            "line": 80,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method '_trackUsage'."
          }
        ],
        "jsDocNameFixerProc": [],
        "fixClassDeclarationsProc": [],
        "jsDoc3PrepProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/src/views/vspace-flyout.js",
      "folderPath": "test-source/src/views",
      "fileName": "vspace-flyout.js",
      "modulePaths": {
        "blue": "blue/js"
      },
      "packagePath": "/src/views",
      "webPath": "/src/views",
      "libFile": false,
      "min": false,
      "realName": "vspace-flyout",
      "name": "vspace-flyout",
      "camelName": "VspaceFlyout",
      "processedFilePath": "test-output/src/views/vspace-flyout.js",
      "mappedModuleName": "src/views/vspace-flyout",
      "couldParseOriginalSource": true,
      "namedConstructors": {
        "src/views/vspace-flyout~VspaceFlyoutView": {
          "todos": [],
          "returnType": "",
          "memberOf": "",
          "ctor": true,
          "lineNumber": 14,
          "line": "function VspaceFlyoutView() {",
          "comment": -1,
          "range": [
            757,
            1094
          ],
          "name": "VspaceFlyoutView",
          "ctorType": "@constructor",
          "doclet": {
            "params": [],
            "returnValue": "",
            "tags": []
          },
          "jsDoc": "/**\n * @constructor\n */"
        }
      },
      "checkForRequiresMismatch": true,
      "preprocessed": true,
      "NODEJS": false,
      "moduleName": "src/views/vspace-flyout",
      "inlineDeps": [],
      "jsDoccerProcData": {
        "lines": 93,
        "requires": [
          "jquery",
          "underscore",
          "backbone",
          "template-engine",
          "column-and-block-layout-editor-path/constants",
          "text!column-and-block-layout-editor-path/templates/vspace-flyout.html",
          "css!column-and-block-layout-editor-path/css/flyout.css",
          "i18n!column-and-block-layout-editor-path/nls/column-and-block-layout-editor",
          "galileo-lib/modules/services/usage-tracking"
        ],
        "className": "n/a",
        "packagePath": "",
        "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "n/a",
        "uses_$": true,
        "chars": 3728,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "./vspace-flyout",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {
          "VspaceFlyoutView": 3889
        },
        "methods": [
          {
            "name": "VspaceFlyoutView",
            "visibility": "public",
            "static": false,
            "lineNumber": 14,
            "memberOf": "",
            "doclet": "/**\n * @constructor\n */",
            "description": "",
            "return": "",
            "classDeclarationFlag": true,
            "line": "function VspaceFlyoutView() {",
            "originalJsDocDescription": {}
          },
          {
            "name": "initialize",
            "visibility": "public",
            "static": false,
            "lineNumber": 21,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @param params\n */",
            "args": [
              "params"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype.initialize = function (params) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "render",
            "visibility": "public",
            "static": false,
            "lineNumber": 32,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @return {object} ThisExpression\n */",
            "description": "",
            "return": "ThisExpression",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype.render = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "showFlyout",
            "visibility": "public",
            "static": false,
            "lineNumber": 43,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype.showFlyout = function (event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "hideFlyout",
            "visibility": "public",
            "static": false,
            "lineNumber": 56,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype.hideFlyout = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_appendToDOM",
            "visibility": "public",
            "static": false,
            "lineNumber": 60,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @todo Add some jsDoc comments here!\n */",
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype._appendToDOM = function () {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_eventTargetIsFlyout",
            "visibility": "public",
            "static": false,
            "lineNumber": 66,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype._eventTargetIsFlyout = function (event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_dismissFlyout",
            "visibility": "public",
            "static": false,
            "lineNumber": 69,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype._dismissFlyout = function (event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_toggleVspace",
            "visibility": "public",
            "static": false,
            "lineNumber": 74,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @param event\n */",
            "args": [
              "event"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype._toggleVspace = function (event) {",
            "originalJsDocDescription": {}
          },
          {
            "name": "_trackUsage",
            "visibility": "public",
            "static": false,
            "lineNumber": 80,
            "memberOf": "VspaceFlyoutView.prototype",
            "doclet": "/**\n * @param identifier\n * @param value\n */",
            "args": [
              "identifier",
              "value"
            ],
            "description": "",
            "return": "?",
            "classDeclarationFlag": false,
            "line": "VspaceFlyoutView.prototype._trackUsage = function (identifier, value) {",
            "originalJsDocDescription": {}
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/btremblay/jsdoc-prep/test-source/src/views",
        "fileName": "vspace-flyout.js",
        "strict": false,
        "min": false,
        "main": 0
      },
      "testStubs": "\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 151,
      "EMPTY": false
    }
  ],
  "path": "test-source",
  "timeInSeconds": 11.605,
  "outPath": "test-output",
  "testPath": "test-jstests",
  "docPath": "test-jsdocs",
  "resultsPath": "test-results"
}