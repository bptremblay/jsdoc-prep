{
  "results": {
    "amdProc": {
      "requires": [],
      "moduleName": "zero_test",
      "AMD": true,
      "webPath": ""
    }
  },
  "errors": {
    "thirdPartyFilter": [],
    "minFilter": [],
    "badCharactersProc": [],
    "amdFilter": [],
    "jsBeautifyProc": [],
    "jsDoccerProc": [
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'zoo'.",
        "code": "wfJD",
        "evidence": "function zoo(z) {",
        "line": 11,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'zoo'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'zoop'.",
        "code": "wfJD",
        "evidence": "function zoop(z) {",
        "line": 15,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'zoop'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'zoopsa'.",
        "code": "wfJD",
        "evidence": "function zoopsa(z) {",
        "line": 19,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'zoopsa'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'zoopsaArray'.",
        "code": "wfJD",
        "evidence": "function zoopsaArray(z) {",
        "line": 23,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'zoopsaArray'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'zoopsaNumericExpression'.",
        "code": "wfJD",
        "evidence": "function zoopsaNumericExpression(z) {",
        "line": 27,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'zoopsaNumericExpression'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'zoopsaPrivateExpression'.",
        "code": "wfJD",
        "evidence": "function zoopsaPrivateExpression(z) {",
        "line": 31,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'zoopsaPrivateExpression'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'stupidFunction'.",
        "code": "wfJD",
        "evidence": "function stupidFunction() {",
        "line": 43,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'stupidFunction'."
      }
    ]
  },
  "outputDirectory": "test-output",
  "path": "test-source/zero-test.js",
  "folderPath": "test-source",
  "fileName": "zero-test.js",
  "packagePath": "",
  "webPath": "",
  "libFile": false,
  "min": false,
  "realName": "zero-test",
  "name": "zero_test",
  "camelName": "ZeroTest",
  "processedFilePath": "test-output/zero-test.js",
  "couldParseOriginalSource": true,
  "preprocessed": true,
  "jsDoccerProcData": {
    "lines": 73,
    "requires": [],
    "className": "n/a",
    "packagePath": "",
    "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source",
    "uses_Y": false,
    "no_lib": true,
    "inferencedClassName": "n/a",
    "uses_$": false,
    "chars": 1091,
    "uses_YUI": false,
    "fields": [],
    "moduleName": "./zero-test",
    "uses_console_log": false,
    "uses_backbone": false,
    "classes": {},
    "methods": [
      {
        "name": "zoo",
        "visibility": "public",
        "static": false,
        "lineNumber": 11,
        "memberOf": "",
        "doclet": "/**\n * Zoo.\n * @param z\n */",
        "args": [
          "z"
        ],
        "description": "",
        "classDeclarationFlag": false,
        "line": "function zoo(z) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "zoop",
        "visibility": "public",
        "static": false,
        "lineNumber": 15,
        "memberOf": "",
        "doclet": "/**\n * Zoop.\n * @param z\n * @return {boolean}\n */",
        "args": [
          "z"
        ],
        "description": "",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "function zoop(z) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "zoopsa",
        "visibility": "public",
        "static": false,
        "lineNumber": 19,
        "memberOf": "",
        "doclet": "/**\n * Zoopsa.\n * @param z\n */",
        "args": [
          "z"
        ],
        "description": "",
        "classDeclarationFlag": false,
        "line": "function zoopsa(z) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "zoopsaArray",
        "visibility": "public",
        "static": false,
        "lineNumber": 23,
        "memberOf": "",
        "doclet": "/**\n * Zoopsa array.\n * @param z\n * @return {array}\n */",
        "args": [
          "z"
        ],
        "description": "",
        "return": "{array}",
        "classDeclarationFlag": false,
        "line": "function zoopsaArray(z) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "zoopsaNumericExpression",
        "visibility": "public",
        "static": false,
        "lineNumber": 27,
        "memberOf": "",
        "doclet": "/**\n * Zoopsa numeric expression.\n * @param z\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "z"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function zoopsaNumericExpression(z) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "zoopsaPrivateExpression",
        "visibility": "public",
        "static": false,
        "lineNumber": 31,
        "memberOf": "",
        "doclet": "/**\n * Zoopsa private expression.\n * @param z\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "z"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function zoopsaPrivateExpression(z) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "zoopsax",
        "visibility": "public",
        "static": false,
        "lineNumber": 39,
        "memberOf": "",
        "doclet": "/**\n * @param z\n * @return A numeric mambo.\n */",
        "args": [
          "z"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function zoopsax(z) {",
        "originalJsDocDescription": {
          "return": {
            "tag": "return",
            "line": 1,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "A numeric mambo.\n"
          }
        }
      },
      {
        "name": "stupidFunction",
        "visibility": "public",
        "static": false,
        "lineNumber": 43,
        "memberOf": "",
        "doclet": "/**\n * Stupid function.\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function stupidFunction() {",
        "originalJsDocDescription": {}
      },
      {
        "name": "funkyFoo",
        "visibility": "public",
        "static": false,
        "lineNumber": 54,
        "memberOf": "",
        "doclet": "/**\n * @private\n * @param z\n * @return {string}\n */",
        "args": [
          "z"
        ],
        "description": "",
        "return": "{string}",
        "classDeclarationFlag": false,
        "line": "function funkyFoo(z) {",
        "originalJsDocDescription": {
          "private": {
            "tag": "private",
            "line": 1,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "\n"
          }
        }
      },
      {
        "name": "funkyFood",
        "visibility": "public",
        "static": false,
        "lineNumber": 61,
        "memberOf": "",
        "doclet": "/**\n * @protected\n * @param z\n * @return {string}\n */",
        "args": [
          "z"
        ],
        "description": "",
        "return": "{string}",
        "classDeclarationFlag": false,
        "line": "function funkyFood(z) {",
        "originalJsDocDescription": {
          "protected": {
            "tag": "protected",
            "line": 1,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "\n"
          }
        }
      },
      {
        "name": "funkyFoodle",
        "visibility": "public",
        "static": false,
        "lineNumber": 68,
        "memberOf": "",
        "doclet": "/**\n * @public\n * @param z\n * @return {string}\n */",
        "args": [
          "z"
        ],
        "description": "",
        "return": "{string}",
        "classDeclarationFlag": false,
        "line": "function funkyFoodle(z) {",
        "originalJsDocDescription": {
          "public": {
            "tag": "public",
            "line": 1,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "\n"
          }
        }
      }
    ],
    "is_module": false,
    "uses_alert": false,
    "uses_y_log": false,
    "requiresRaw": [],
    "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-source",
    "fileName": "zero-test.js",
    "strict": false
  },
  "possibleClassname": "",
  "testStubs": "\n",
  "couldParseProcessedSource": true,
  "corrupted": false,
  "numberOfLines": 101
}