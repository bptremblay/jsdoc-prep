{
  "results": [
    {
      "results": {
        "amdProc": {
          "requires": [
            "jquery"
          ],
          "moduleName": "index",
          "AMD": true,
          "webPath": ""
        }
      },
      "errors": {
        "badCharactersProc": [],
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'IndexView'.",
            "code": "wfJD",
            "evidence": "function IndexView() {",
            "line": 5,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'IndexView'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'init'.",
            "code": "wfJD",
            "evidence": "this.init = function() {",
            "line": 49,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'init'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'showModalPopup'.",
            "code": "wfJD",
            "evidence": "this.showModalPopup = function(url, name) {",
            "line": 279,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'showModalPopup'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'showOverlay'.",
            "code": "wfJD",
            "evidence": "this.showOverlay = function() {",
            "line": 300,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'showOverlay'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'hideOverlay'.",
            "code": "wfJD",
            "evidence": "this.hideOverlay = function() {",
            "line": 304,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'hideOverlay'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'preLoader'.",
            "code": "wfJD",
            "evidence": "this.preLoader = function() {",
            "line": 309,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'preLoader'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'changeStyle'.",
            "code": "wfJD",
            "evidence": "this.changeStyle = function() {",
            "line": 320,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'changeStyle'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'onDataChange'.",
            "code": "wfJD",
            "evidence": "this.onDataChange = function() {",
            "line": 324,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'onDataChange'."
          }
        ],
        "jsDoc3PrepProc": [],
        "fixJSDocFormattingProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/index.js",
      "folderPath": "test-source",
      "fileName": "index.js",
      "packagePath": "",
      "webPath": "",
      "libFile": false,
      "min": false,
      "realName": "index",
      "name": "index",
      "camelName": "Index",
      "processedFilePath": "test-output/index.js",
      "couldParseOriginalSource": true,
      "jsDoccerProcData": {
        "lines": 331,
        "requires": [],
        "className": "Index",
        "packagePath": "",
        "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-output",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "Index",
        "uses_$": false,
        "chars": 12635,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "index",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "IndexView": {
            "name": "IndexView",
            "visibility": "public",
            "constructor": true,
            "static": false,
            "lineNumber": 5,
            "memberOf": "",
            "args": [],
            "return": "void",
            "classDeclarationFlag": true,
            "line": "function IndexView() {"
          }
        },
        "methods": [
          {
            "lineNumber": 4,
            "line": "define(function(require) {",
            "visibility": "private",
            "args": [
              "require"
            ],
            "name": "_anonymous4",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "IndexView",
            "visibility": "public",
            "static": false,
            "lineNumber": 5,
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Index view.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function IndexView() {"
          },
          {
            "lineNumber": 37,
            "line": "template.registerHelper('summaryItems', function(context, options) {",
            "visibility": "private",
            "args": [
              "context",
              "options"
            ],
            "name": "_anonymous37",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "init",
            "visibility": "public",
            "static": false,
            "lineNumber": 49,
            "memberOf": "this",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Init.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "this.init = function() {"
          },
          {
            "lineNumber": 241,
            "line": "this.receive('searchComponent/focusOnSearchField', function(e) {",
            "visibility": "private",
            "args": [
              "e"
            ],
            "name": "_anonymous241",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 254,
            "line": "this.receive('myNotificationsComponent/enableShowMore', function() {",
            "visibility": "private",
            "args": [],
            "name": "_anonymous254",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 261,
            "line": "this.receive('myNotificationsComponent/disableShowMore', function() {",
            "visibility": "private",
            "args": [],
            "name": "_anonymous261",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 271,
            "line": "setTimeout(function() {",
            "visibility": "private",
            "args": [],
            "name": "_anonymous271",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "showModalPopup",
            "visibility": "public",
            "static": false,
            "lineNumber": 279,
            "params": " * @param url\n * @param name",
            "memberOf": "this",
            "originalJsDocDescription": {},
            "args": [
              "url",
              "name"
            ],
            "description": " * Show modal popup.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "this.showModalPopup = function(url, name) {"
          },
          {
            "lineNumber": 288,
            "line": "setTimeout(function() {",
            "visibility": "private",
            "args": [],
            "name": "_anonymous288",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 289,
            "line": "$('#modal-iframe').load(function() {",
            "visibility": "private",
            "args": [],
            "name": "_anonymous289",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "showOverlay",
            "visibility": "public",
            "static": false,
            "lineNumber": 300,
            "memberOf": "this",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Show overlay.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "this.showOverlay = function() {"
          },
          {
            "name": "hideOverlay",
            "visibility": "public",
            "static": false,
            "lineNumber": 304,
            "memberOf": "this",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Hide overlay.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "this.hideOverlay = function() {"
          },
          {
            "name": "preLoader",
            "visibility": "public",
            "static": false,
            "lineNumber": 309,
            "memberOf": "this",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Pre loader.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "this.preLoader = function() {"
          },
          {
            "lineNumber": 310,
            "line": "$(document).ajaxStart(function() {",
            "visibility": "private",
            "args": [],
            "name": "_anonymous310",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 314,
            "line": "$(document).ajaxStop(function() {",
            "visibility": "private",
            "args": [],
            "name": "_anonymous314",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "changeStyle",
            "visibility": "public",
            "static": false,
            "lineNumber": 320,
            "memberOf": "this",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Change style.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "this.changeStyle = function() {"
          },
          {
            "name": "onDataChange",
            "visibility": "public",
            "static": false,
            "lineNumber": 324,
            "memberOf": "this",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * On data change.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "this.onDataChange = function() {"
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-output",
        "fileName": "index.js",
        "strict": false
      },
      "possibleClassname": "IndexView",
      "testStubs": "\n\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 373
    },
    {
      "results": {
        "amdProc": {
          "requires": [],
          "moduleName": "no_module",
          "AMD": false,
          "webPath": ""
        }
      },
      "errors": {
        "badCharactersProc": [],
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'chewBakka'.",
            "code": "wfJD",
            "evidence": "this.chewBakka = function() {};",
            "line": 6,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'chewBakka'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'SecondClass'.",
            "code": "wfJD",
            "evidence": "function SecondClass() {}",
            "line": 15,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'SecondClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'chonkey'.",
            "code": "wfJD",
            "evidence": "SecondClass.prototype.chonkey = function(toothache, tomato) {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'chonkey'."
          }
        ],
        "jsDoc3PrepProc": [],
        "fixJSDocFormattingProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/no-module.js",
      "folderPath": "test-source",
      "fileName": "no-module.js",
      "packagePath": "",
      "webPath": "",
      "libFile": false,
      "min": false,
      "realName": "no-module",
      "name": "no_module",
      "camelName": "NoModule",
      "processedFilePath": "test-output/no-module.js",
      "couldParseOriginalSource": true,
      "jsDoccerProcData": {
        "lines": 19,
        "requires": [],
        "className": "NoModule",
        "packagePath": "",
        "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-output",
        "uses_Y": false,
        "no_lib": true,
        "inferencedClassName": "NoModule",
        "uses_$": false,
        "chars": 380,
        "uses_YUI": false,
        "fields": [],
        "moduleName": "no-module",
        "uses_console_log": false,
        "uses_backbone": false,
        "classes": {
          "SecondClass": {
            "name": "SecondClass",
            "visibility": "public",
            "constructor": true,
            "static": false,
            "lineNumber": 15,
            "memberOf": "",
            "args": [],
            "return": "void",
            "classDeclarationFlag": true,
            "line": "function SecondClass() {}"
          },
          "Fronum": {
            "name": "Fronum",
            "visibility": "public",
            "constructor": true,
            "static": false,
            "lineNumber": 5,
            "memberOf": "",
            "args": [],
            "return": "void",
            "classDeclarationFlag": true,
            "line": "function Fronum() {"
          }
        },
        "methods": [
          {
            "name": "Fronum",
            "visibility": "public",
            "static": false,
            "lineNumber": 5,
            "memberOf": "",
            "originalJsDocDescription": {
              "copyright": {
                "name": "JPMorgan",
                "type": "",
                "description": "Chase & Co. All rights reserved.",
                "attribute": "copyright"
              },
              "author": {
                "name": "",
                "type": "",
                "description": "Fredrum <rf@monath.net>",
                "attribute": "author"
              },
              "description": " * js_test_resources/fronum.js"
            },
            "args": [],
            "description": " * Fronum.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function Fronum() {"
          },
          {
            "name": "chewBakka",
            "visibility": "public",
            "static": false,
            "lineNumber": 6,
            "memberOf": "this",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Chew bakka.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "this.chewBakka = function() {};"
          },
          {
            "name": "chonkey",
            "visibility": "public",
            "static": false,
            "lineNumber": 11,
            "params": " * @param toothache\n * @param tomato",
            "memberOf": "Fronum.prototype",
            "originalJsDocDescription": {
              "description": " *"
            },
            "args": [
              "toothache",
              "tomato"
            ],
            "description": " * Chonkey.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "Fronum.prototype.chonkey = function(toothache, tomato) {"
          },
          {
            "name": "SecondClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 15,
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Second class.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function SecondClass() {}"
          },
          {
            "name": "chonkey",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "params": " * @param toothache\n * @param tomato",
            "memberOf": "SecondClass.prototype",
            "originalJsDocDescription": {},
            "args": [
              "toothache",
              "tomato"
            ],
            "description": " * Chonkey.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "SecondClass.prototype.chonkey = function(toothache, tomato) {"
          }
        ],
        "is_module": false,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-output",
        "fileName": "no-module.js",
        "strict": false
      },
      "possibleClassname": "SecondClass",
      "testStubs": "\n\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 42
    },
    {
      "results": {
        "amdProc": {
          "requires": [
            ";\n    for (var r = 0; r < requires.length; r++",
            "backbone",
            "underscore"
          ],
          "moduleName": "single_file_processor",
          "AMD": true,
          "webPath": "/ours"
        }
      },
      "errors": {
        "badCharactersProc": [],
        "jsBeautifyProc": [],
        "jsDoccerProc": [
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 16,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 25,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 40,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'createJavaClass'.",
            "code": "wfJD",
            "evidence": "function createJavaClass(input, amdProcData) {",
            "line": 54,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'createJavaClass'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 89,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 108,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'fixRequires'.",
            "code": "wfJD",
            "evidence": "function fixRequires(inputArray) {",
            "line": 120,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'fixRequires'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'genDoc'.",
            "code": "wfJD",
            "evidence": "function genDoc(fileName, callBackDone) {",
            "line": 142,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'genDoc'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 208,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 234,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'runYuiDocOnFile'.",
            "code": "wfJD",
            "evidence": "function runYuiDocOnFile(fileNameIn, sourceIn) {",
            "line": 239,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'runYuiDocOnFile'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'readFile'.",
            "code": "wfJD",
            "evidence": "function readFile(filePathName) {",
            "line": 254,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'readFile'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 312,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 324,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'addExtendsAnnotation'.",
            "code": "wfJD",
            "evidence": "function addExtendsAnnotation(inputObject, linesArray, whereInlines) {",
            "line": 338,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'addExtendsAnnotation'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLastJsDocComment'.",
            "code": "wfJD",
            "evidence": "function getLastJsDocComment(inputObject, linesIn, topOfBlock) {",
            "line": 400,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLastJsDocComment'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 459,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'checkExpression'.",
            "code": "wfJD",
            "evidence": "function checkExpression(inputObject, id, src, wrong, right) {",
            "line": 464,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'checkExpression'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 504,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'checkExpression'.",
            "code": "wfJD",
            "evidence": "function checkExpression(inputObject, id, src, wrong, right) {",
            "line": 509,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'checkExpression'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 572,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'scanForMinifiedLines'.",
            "code": "wfJD",
            "evidence": "function scanForMinifiedLines(input) {",
            "line": 587,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'scanForMinifiedLines'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 608,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 625,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 644,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 663,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 686,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 709,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'unpacker_filter'.",
            "code": "wfJD",
            "evidence": "function unpacker_filter(source) {",
            "line": 714,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'unpacker_filter'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 775,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 810,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 829,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 856,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'runGjsLint'.",
            "code": "wfJD",
            "evidence": "function runGjsLint(fileName) {",
            "line": 862,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'runGjsLint'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'close'.",
            "code": "wfJD",
            "evidence": "child.on('close', function(code) {",
            "line": 893,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'close'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 912,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'runJsDoccer'.",
            "code": "wfJD",
            "evidence": "function runJsDoccer(fileName, id) {",
            "line": 917,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'runJsDoccer'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'close'.",
            "code": "wfJD",
            "evidence": "child.on('close', function(code) {",
            "line": 975,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'close'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'test'.",
            "code": "wfJD",
            "evidence": "function test() {",
            "line": 989,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'test'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'readFile'.",
            "code": "wfJD",
            "evidence": "function readFile(filePathName) {",
            "line": 998,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'readFile'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'writeFile'.",
            "code": "wfJD",
            "evidence": "function writeFile(filePathName, source) {",
            "line": 1007,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'writeFile'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'setWriteEnable'.",
            "code": "wfJD",
            "evidence": "function setWriteEnable(val) {",
            "line": 1015,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'setWriteEnable'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'processFile'.",
            "code": "wfJD",
            "evidence": "function processFile(baseDirectory, filePathName, outputDirectory, testDirectory, docDirectory, processorChain, completionCallback, writeEnable) {",
            "line": 1019,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'processFile'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'runNextProcessor'.",
            "code": "wfJD",
            "evidence": "function runNextProcessor() {",
            "line": 1072,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'runNextProcessor'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'decamelize'.",
            "code": "wfJD",
            "evidence": "function decamelize(input) {",
            "line": 1120,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'decamelize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getModuleName'.",
            "code": "wfJD",
            "evidence": "function getModuleName(filePathName) {",
            "line": 1155,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getModuleName'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'capitalize'.",
            "code": "wfJD",
            "evidence": "function capitalize(input) {",
            "line": 1168,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'capitalize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'trim'.",
            "code": "wfJD",
            "evidence": "function trim(input) {",
            "line": 1180,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'trim'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'trimRight'.",
            "code": "wfJD",
            "evidence": "function trimRight(s) {",
            "line": 1184,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'trimRight'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'camelize'.",
            "code": "wfJD",
            "evidence": "function camelize(input) {",
            "line": 1188,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'camelize'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'camelizeVariable'.",
            "code": "wfJD",
            "evidence": "function camelizeVariable(input) {",
            "line": 1206,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'camelizeVariable'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'isUpperCase'.",
            "code": "wfJD",
            "evidence": "function isUpperCase(aCharacter) {",
            "line": 1229,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'isUpperCase'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'normalizeName'.",
            "code": "wfJD",
            "evidence": "function normalizeName(input) {",
            "line": 1233,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'normalizeName'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'safeCreateFileDir'.",
            "code": "wfJD",
            "evidence": "function safeCreateFileDir(path) {",
            "line": 1237,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'safeCreateFileDir'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'safeCreateDir'.",
            "code": "wfJD",
            "evidence": "function safeCreateDir(dir) {",
            "line": 1247,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'safeCreateDir'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'stripCComments'.",
            "code": "wfJD",
            "evidence": "function stripCComments(input) {",
            "line": 1256,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'stripCComments'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'stripOneLineComments'.",
            "code": "wfJD",
            "evidence": "function stripOneLineComments(input) {",
            "line": 1275,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'stripOneLineComments'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'canParse'.",
            "code": "wfJD",
            "evidence": "function canParse(moduleName, input, procId) {",
            "line": 1285,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'canParse'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'esprimafy'.",
            "code": "wfJD",
            "evidence": "function esprimafy(moduleName, input) {",
            "line": 1289,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'esprimafy'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'uglyDucklify'.",
            "code": "wfJD",
            "evidence": "function uglyDucklify(moduleName, input) {",
            "line": 1316,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'uglyDucklify'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'convert'.",
            "code": "wfJD",
            "evidence": "function convert(input, filePathname) {",
            "line": 1333,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'convert'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getRequiresTags'.",
            "code": "wfJD",
            "evidence": "function getRequiresTags(input) {",
            "line": 1560,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getRequiresTags'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getLines'.",
            "code": "wfJD",
            "evidence": "function getLines(lines, x, y) {",
            "line": 1576,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getLines'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getNextLineOfCode'.",
            "code": "wfJD",
            "evidence": "function getNextLineOfCode(lines, x) {",
            "line": 1584,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getNextLineOfCode'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'concatLines'.",
            "code": "wfJD",
            "evidence": "function concatLines(lines, codeBlock) {",
            "line": 1596,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'concatLines'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'replace'.",
            "code": "wfJD",
            "evidence": "function replace(source, original, token) {",
            "line": 1604,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'replace'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'process'.",
            "code": "wfJD",
            "evidence": "process: function(input, doneCallback) {",
            "line": 1612,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'process'."
          },
          {
            "id": "(error)",
            "raw": "No jsDoc Comments for method 'getAmdConfig'.",
            "code": "wfJD",
            "evidence": "function getAmdConfig() {",
            "line": 1828,
            "character": -1,
            "scope": "(main)",
            "a": "",
            "reason": "No jsDoc Comments for method 'getAmdConfig'."
          }
        ],
        "jsDoc3PrepProc": [],
        "fixJSDocFormattingProc": []
      },
      "outputDirectory": "test-output",
      "path": "test-source/ours/singleFileProcessor.js",
      "folderPath": "test-source/ours",
      "fileName": "singleFileProcessor.js",
      "packagePath": "/ours",
      "webPath": "/ours",
      "libFile": false,
      "min": false,
      "realName": "single_file_processor",
      "name": "single_file_processor",
      "camelName": "SingleFileProcessor",
      "processedFilePath": "test-output/ours/singleFileProcessor.js",
      "couldParseOriginalSource": true,
      "jsDoccerProcData": {
        "lines": 1838,
        "requires": [],
        "className": "SingleFileProcessor",
        "packagePath": "",
        "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-output/ours",
        "uses_Y": true,
        "no_lib": false,
        "inferencedClassName": "SingleFileProcessor",
        "uses_$": true,
        "chars": 58741,
        "uses_YUI": true,
        "fields": [],
        "moduleName": ") !== -1;\n    var isMain = stripped.indexOf(require() !== -1;\n    if (isModule || isMain) {\n      doneCallback(input);\n    } else {\n      finishedProcessingChain();\n    }\n  }\n};\nvar thirdPartyFilter = {\n  id: thirdPartyFilter",
        "uses_console_log": false,
        "uses_backbone": true,
        "classes": {},
        "methods": [
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 16,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 25,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 40,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "createJavaClass",
            "visibility": "public",
            "static": false,
            "lineNumber": 54,
            "params": " * @param input\n * @param amdProcData",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "amdProcData"
            ],
            "description": " * Create java class.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function createJavaClass(input, amdProcData) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 89,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 108,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "fixRequires",
            "visibility": "public",
            "static": false,
            "lineNumber": 120,
            "params": " * @param inputArray",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "inputArray"
            ],
            "description": " * Fix requires.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function fixRequires(inputArray) {"
          },
          {
            "name": "genDoc",
            "visibility": "public",
            "static": false,
            "lineNumber": 142,
            "params": " * @param fileName\n * @param callBackDone",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "fileName",
              "callBackDone"
            ],
            "description": " * Gen doc.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function genDoc(fileName, callBackDone) {"
          },
          {
            "lineNumber": 189,
            "line": "jsdog.parseSourceFile(filename, parsed, function(data) {",
            "visibility": "private",
            "args": [
              "data"
            ],
            "name": "_anonymous189",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 196,
            "line": "jade.renderFile(templateFile, jadeOpts, function(err, html) {",
            "visibility": "private",
            "args": [
              "err",
              "html"
            ],
            "name": "_anonymous196",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 208,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 234,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "runYuiDocOnFile",
            "visibility": "public",
            "static": false,
            "lineNumber": 239,
            "params": " * @param fileNameIn\n * @param sourceIn",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "fileNameIn",
              "sourceIn"
            ],
            "description": " * Run yui doc on file.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function runYuiDocOnFile(fileNameIn, sourceIn) {"
          },
          {
            "name": "readFile",
            "visibility": "public",
            "static": false,
            "lineNumber": 254,
            "params": " * @param filePathName",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "filePathName"
            ],
            "description": " * Read file.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function readFile(filePathName) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 312,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 324,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "addExtendsAnnotation",
            "visibility": "public",
            "static": false,
            "lineNumber": 338,
            "params": " * @param inputObject\n * @param linesArray\n * @param whereInlines",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "inputObject",
              "linesArray",
              "whereInlines"
            ],
            "description": " * Add extends annotation.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function addExtendsAnnotation(inputObject, linesArray, whereInlines) {"
          },
          {
            "name": "getLastJsDocComment",
            "visibility": "public",
            "static": false,
            "lineNumber": 400,
            "params": " * @param inputObject\n * @param linesIn\n * @param topOfBlock",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "inputObject",
              "linesIn",
              "topOfBlock"
            ],
            "returns": "{Object}",
            "description": " * Get last js doc comment.",
            "return": "{}",
            "classDeclarationFlag": false,
            "line": "function getLastJsDocComment(inputObject, linesIn, topOfBlock) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 459,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "checkExpression",
            "visibility": "public",
            "static": false,
            "lineNumber": 464,
            "params": " * @param inputObject\n * @param id\n * @param src\n * @param wrong\n * @param right",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "inputObject",
              "id",
              "src",
              "wrong",
              "right"
            ],
            "description": " * Check expression.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function checkExpression(inputObject, id, src, wrong, right) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 504,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "checkExpression",
            "visibility": "public",
            "static": false,
            "lineNumber": 509,
            "params": " * @param inputObject\n * @param id\n * @param src\n * @param wrong\n * @param right",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "inputObject",
              "id",
              "src",
              "wrong",
              "right"
            ],
            "description": " * Check expression.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function checkExpression(inputObject, id, src, wrong, right) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 572,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "scanForMinifiedLines",
            "visibility": "public",
            "static": false,
            "lineNumber": 587,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Scan for minified lines.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function scanForMinifiedLines(input) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 608,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 625,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 644,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 663,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 686,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 709,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "unpacker_filter",
            "visibility": "public",
            "static": false,
            "lineNumber": 714,
            "params": " * @param source",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "source"
            ],
            "description": " * Unpacker_filter.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function unpacker_filter(source) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 775,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 810,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 829,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 856,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "runGjsLint",
            "visibility": "public",
            "static": false,
            "lineNumber": 862,
            "params": " * @param fileName",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "fileName"
            ],
            "description": " * Run gjs lint.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function runGjsLint(fileName) {"
          },
          {
            "lineNumber": 867,
            "line": "var child = exec(cmdLine, function(error, stdout, stderr) {",
            "visibility": "private",
            "args": [
              "error",
              "stdout",
              "stderr"
            ],
            "name": "_anonymous867",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "ownerExpression": "child",
            "name": "close",
            "visibility": "public",
            "lineNumber": 893,
            "static": false,
            "params": " * @param code",
            "memberOf": "child",
            "originalJsDocDescription": {},
            "args": [
              "code"
            ],
            "description": " * Close.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "child.on('close', function(code) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 912,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "name": "runJsDoccer",
            "visibility": "public",
            "static": false,
            "lineNumber": 917,
            "params": " * @param fileName\n * @param id",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "fileName",
              "id"
            ],
            "description": " * Run js doccer.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function runJsDoccer(fileName, id) {"
          },
          {
            "lineNumber": 922,
            "line": "var child = exec(exePath + ' ' + basePath + ' ' + name, function(error, stdout, stderr) {",
            "visibility": "private",
            "args": [
              "error",
              "stdout",
              "stderr"
            ],
            "name": "_anonymous922",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "ownerExpression": "child",
            "name": "close",
            "visibility": "public",
            "lineNumber": 975,
            "static": false,
            "params": " * @param code",
            "memberOf": "child",
            "originalJsDocDescription": {},
            "args": [
              "code"
            ],
            "description": " * Close.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "child.on('close', function(code) {"
          },
          {
            "name": "test",
            "visibility": "public",
            "static": false,
            "lineNumber": 989,
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Test.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function test() {"
          },
          {
            "lineNumber": 995,
            "line": "processFile(basePath, inPath, outPath, testPath, docPath, [gsLintProc], function(result) {});",
            "visibility": "private",
            "args": [
              "result"
            ],
            "name": "_anonymous995",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "readFile",
            "visibility": "public",
            "static": false,
            "lineNumber": 998,
            "params": " * @param filePathName",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "filePathName"
            ],
            "description": " * Read file.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function readFile(filePathName) {"
          },
          {
            "name": "writeFile",
            "visibility": "public",
            "static": false,
            "lineNumber": 1007,
            "params": " * @param filePathName\n * @param source",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "filePathName",
              "source"
            ],
            "description": " * Write file.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function writeFile(filePathName, source) {"
          },
          {
            "name": "setWriteEnable",
            "visibility": "public",
            "static": false,
            "lineNumber": 1015,
            "params": " * @param val",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "val"
            ],
            "description": " * Set write enable.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function setWriteEnable(val) {"
          },
          {
            "name": "processFile",
            "visibility": "public",
            "static": false,
            "lineNumber": 1019,
            "params": " * @param baseDirectory\n * @param filePathName\n * @param outputDirectory\n * @param testDirectory\n * @param docDirectory\n * @param processorChain\n * @param completionCallback\n * @param writeEnable",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "baseDirectory",
              "filePathName",
              "outputDirectory",
              "testDirectory",
              "docDirectory",
              "processorChain",
              "completionCallback",
              "writeEnable"
            ],
            "description": " * Process file.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function processFile(baseDirectory, filePathName, outputDirectory, testDirectory, docDirectory, processorChain, completionCallback, writeEnable) {"
          },
          {
            "name": "runNextProcessor",
            "visibility": "public",
            "static": false,
            "lineNumber": 1072,
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Run next processor.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function runNextProcessor() {"
          },
          {
            "lineNumber": 1078,
            "line": "processor.process(output, function(result) {",
            "visibility": "private",
            "args": [
              "result"
            ],
            "name": "_anonymous1078",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "_finishedProcessingChain",
            "visibility": "private",
            "static": false,
            "lineNumber": 1091,
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [],
            "description": " * Finished processing chain.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function _finishedProcessingChain() {"
          },
          {
            "name": "decamelize",
            "visibility": "public",
            "static": false,
            "lineNumber": 1120,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Decamelize.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function decamelize(input) {"
          },
          {
            "name": "getModuleName",
            "visibility": "public",
            "static": false,
            "lineNumber": 1155,
            "params": " * @param filePathName",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "filePathName"
            ],
            "returns": "{Object}",
            "description": " * Get module name.",
            "return": "{}",
            "classDeclarationFlag": false,
            "line": "function getModuleName(filePathName) {"
          },
          {
            "name": "capitalize",
            "visibility": "public",
            "static": false,
            "lineNumber": 1168,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Capitalize.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function capitalize(input) {"
          },
          {
            "name": "trim",
            "visibility": "public",
            "static": false,
            "lineNumber": 1180,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Trim.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function trim(input) {"
          },
          {
            "name": "trimRight",
            "visibility": "public",
            "static": false,
            "lineNumber": 1184,
            "params": " * @param s",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "s"
            ],
            "description": " * Trim right.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function trimRight(s) {"
          },
          {
            "name": "camelize",
            "visibility": "public",
            "static": false,
            "lineNumber": 1188,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Camelize.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function camelize(input) {"
          },
          {
            "name": "camelizeVariable",
            "visibility": "public",
            "static": false,
            "lineNumber": 1206,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Camelize variable.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function camelizeVariable(input) {"
          },
          {
            "name": "isUpperCase",
            "visibility": "public",
            "static": false,
            "lineNumber": 1229,
            "params": " * @param aCharacter",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "aCharacter"
            ],
            "returns": "{Boolean}",
            "description": " * Is upper case.",
            "return": "{boolean}",
            "classDeclarationFlag": false,
            "line": "function isUpperCase(aCharacter) {"
          },
          {
            "name": "normalizeName",
            "visibility": "public",
            "static": false,
            "lineNumber": 1233,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Normalize name.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function normalizeName(input) {"
          },
          {
            "name": "safeCreateFileDir",
            "visibility": "public",
            "static": false,
            "lineNumber": 1237,
            "params": " * @param path",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "path"
            ],
            "description": " * Safe create file dir.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function safeCreateFileDir(path) {"
          },
          {
            "name": "safeCreateDir",
            "visibility": "public",
            "static": false,
            "lineNumber": 1247,
            "params": " * @param dir",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "dir"
            ],
            "description": " * Safe create dir.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function safeCreateDir(dir) {"
          },
          {
            "name": "stripCComments",
            "visibility": "public",
            "static": false,
            "lineNumber": 1256,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Strip C comments.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function stripCComments(input) {"
          },
          {
            "name": "stripOneLineComments",
            "visibility": "public",
            "static": false,
            "lineNumber": 1275,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "description": " * Strip one line comments.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function stripOneLineComments(input) {"
          },
          {
            "name": "canParse",
            "visibility": "public",
            "static": false,
            "lineNumber": 1285,
            "params": " * @param moduleName\n * @param input\n * @param procId",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "moduleName",
              "input",
              "procId"
            ],
            "description": " * Can parse.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function canParse(moduleName, input, procId) {"
          },
          {
            "name": "esprimafy",
            "visibility": "public",
            "static": false,
            "lineNumber": 1289,
            "params": " * @param moduleName\n * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "moduleName",
              "input"
            ],
            "description": " * Esprimafy.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function esprimafy(moduleName, input) {"
          },
          {
            "name": "uglyDucklify",
            "visibility": "public",
            "static": false,
            "lineNumber": 1316,
            "params": " * @param moduleName\n * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "moduleName",
              "input"
            ],
            "description": " * Ugly ducklify.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function uglyDucklify(moduleName, input) {"
          },
          {
            "name": "convert",
            "visibility": "public",
            "static": false,
            "lineNumber": 1333,
            "params": " * @param input\n * @param filePathname",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "filePathname"
            ],
            "description": " * Convert.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function convert(input, filePathname) {"
          },
          {
            "lineNumber": 1425,
            "line": "requireSkeleton += '], function(';",
            "visibility": "private",
            "args": [],
            "name": "_anonymous1425",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "getRequiresTags",
            "visibility": "public",
            "static": false,
            "lineNumber": 1560,
            "params": " * @param input",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input"
            ],
            "returns": "{Object}",
            "description": " * Get requires tags.",
            "return": "{}",
            "classDeclarationFlag": false,
            "line": "function getRequiresTags(input) {"
          },
          {
            "name": "getLines",
            "visibility": "public",
            "static": false,
            "lineNumber": 1576,
            "params": " * @param lines\n * @param x\n * @param y",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "lines",
              "x",
              "y"
            ],
            "returns": "{Object}",
            "description": " * Get lines.",
            "return": "{}",
            "classDeclarationFlag": false,
            "line": "function getLines(lines, x, y) {"
          },
          {
            "name": "getNextLineOfCode",
            "visibility": "public",
            "static": false,
            "lineNumber": 1584,
            "params": " * @param lines\n * @param x",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "lines",
              "x"
            ],
            "returns": "{Object}",
            "description": " * Get next line of code.",
            "return": "{}",
            "classDeclarationFlag": false,
            "line": "function getNextLineOfCode(lines, x) {"
          },
          {
            "name": "concatLines",
            "visibility": "public",
            "static": false,
            "lineNumber": 1596,
            "params": " * @param lines\n * @param codeBlock",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "lines",
              "codeBlock"
            ],
            "description": " * Concat lines.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function concatLines(lines, codeBlock) {"
          },
          {
            "name": "replace",
            "visibility": "public",
            "static": false,
            "lineNumber": 1604,
            "params": " * @param source\n * @param original\n * @param token",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "source",
              "original",
              "token"
            ],
            "description": " * Replace.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "function replace(source, original, token) {"
          },
          {
            "name": "process",
            "visibility": "public",
            "static": false,
            "lineNumber": 1612,
            "params": " * @param input\n * @param doneCallback",
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [
              "input",
              "doneCallback"
            ],
            "description": " * Process.",
            "return": "void",
            "classDeclarationFlag": false,
            "line": "process: function(input, doneCallback) {"
          },
          {
            "lineNumber": 1672,
            "line": "var whereFunctionNoSpace = source.indexOf('function(');",
            "visibility": "private",
            "args": [
              "'"
            ],
            "name": "_anonymous1672",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 1679,
            "line": "splitter = source.split('function (');",
            "visibility": "private",
            "args": [
              "'"
            ],
            "name": "_anonymous1679",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 1681,
            "line": "splitter = source.split('function(');",
            "visibility": "private",
            "args": [
              "'"
            ],
            "name": "_anonymous1681",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 1683,
            "line": "splitter = source.split('function(');",
            "visibility": "private",
            "args": [
              "'"
            ],
            "name": "_anonymous1683",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 1685,
            "line": "splitter = source.split('function (');",
            "visibility": "private",
            "args": [
              "'"
            ],
            "name": "_anonymous1685",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "lineNumber": 1697,
            "line": "source = combiner.join('function(');",
            "visibility": "private",
            "args": [
              "'"
            ],
            "name": "_anonymous1697",
            "return": "void",
            "static": false,
            "memberOf": ""
          },
          {
            "name": "getAmdConfig",
            "visibility": "public",
            "static": false,
            "lineNumber": 1828,
            "memberOf": "",
            "originalJsDocDescription": {},
            "args": [],
            "returns": "{Object}",
            "description": " * Get amd config.",
            "return": "{}",
            "classDeclarationFlag": false,
            "line": "function getAmdConfig() {"
          }
        ],
        "is_module": true,
        "uses_alert": false,
        "uses_y_log": false,
        "requiresRaw": [],
        "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-output/ours",
        "fileName": "singleFileProcessor.js",
        "strict": false
      },
      "possibleClassname": "",
      "testStubs": "\n\n",
      "couldParseProcessedSource": true,
      "corrupted": false,
      "numberOfLines": 2177
    }
  ],
  "path": "test-source",
  "timeInSeconds": 1.257,
  "outPath": "test-output",
  "testPath": "test-results/test",
  "docPath": "test-jsdocs",
  "resultsPath": "test-results/metadata"
}