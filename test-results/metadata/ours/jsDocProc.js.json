{
  "results": {
    "amdProc": {
      "requires": [],
      "moduleName": "js_doc_proc",
      "AMD": false,
      "webPath": "/ours"
    }
  },
  "errors": {
    "badCharactersProc": [],
    "jsBeautifyProc": [],
    "jsDoccerProc": [
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'beget'.",
        "code": "wfJD",
        "evidence": "Object.prototype.beget = function() {",
        "line": 50,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'beget'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'F'.",
        "code": "wfJD",
        "evidence": "function F() {}",
        "line": 51,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'F'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'entityify'.",
        "code": "wfJD",
        "evidence": "String.prototype.entityify = function() {",
        "line": 56,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'entityify'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'isAlpha'.",
        "code": "wfJD",
        "evidence": "String.prototype.isAlpha = function() {",
        "line": 61,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'isAlpha'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'isDigit'.",
        "code": "wfJD",
        "evidence": "String.prototype.isDigit = function() {",
        "line": 65,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'isDigit'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'supplant'.",
        "code": "wfJD",
        "evidence": "String.prototype.supplant = function(o) {",
        "line": 69,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'supplant'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'JSLINT'.",
        "code": "wfJD",
        "evidence": "JSLINT = function() {",
        "line": 96,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'JSLINT'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'warning'.",
        "code": "wfJD",
        "evidence": "function warning(m, t, a, b, c, d) {",
        "line": 386,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'warning'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'warningAt'.",
        "code": "wfJD",
        "evidence": "function warningAt(m, l, ch, a, b, c, d) {",
        "line": 417,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'warningAt'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'error'.",
        "code": "wfJD",
        "evidence": "function error(m, t, a, b, c, d) {",
        "line": 425,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'error'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'errorAt'.",
        "code": "wfJD",
        "evidence": "function errorAt(m, l, ch, a, b, c, d) {",
        "line": 431,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'errorAt'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'quit'.",
        "code": "wfJD",
        "evidence": "quit = function(m, l, ch) {",
        "line": 438,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'quit'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'lex'.",
        "code": "wfJD",
        "evidence": "var lex = function() {",
        "line": 451,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'lex'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'nextLine'.",
        "code": "wfJD",
        "evidence": "function nextLine() {",
        "line": 459,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'nextLine'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'it'.",
        "code": "wfJD",
        "evidence": "function it(type, value) {",
        "line": 471,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'it'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'init'.",
        "code": "wfJD",
        "evidence": "init: function(source) {",
        "line": 505,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'init'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'token'.",
        "code": "wfJD",
        "evidence": "token: function() {",
        "line": 525,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'token'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'match'.",
        "code": "wfJD",
        "evidence": "function match(x) {",
        "line": 532,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'match'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'more'.",
        "code": "wfJD",
        "evidence": "function more() {",
        "line": 546,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'more'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'string'.",
        "code": "wfJD",
        "evidence": "function string(x) {",
        "line": 554,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'string'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'esc'.",
        "code": "wfJD",
        "evidence": "function esc(n) {",
        "line": 561,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'esc'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'skip'.",
        "code": "wfJD",
        "evidence": "skip: function(p) {",
        "line": 784,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'skip'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'regex'.",
        "code": "wfJD",
        "evidence": "regex: function() {",
        "line": 816,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'regex'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'builtin'.",
        "code": "wfJD",
        "evidence": "function builtin(name) {",
        "line": 832,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'builtin'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'addlabel'.",
        "code": "wfJD",
        "evidence": "function addlabel(t, type) {",
        "line": 837,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'addlabel'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'peek'.",
        "code": "wfJD",
        "evidence": "function peek(p) {",
        "line": 879,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'peek'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'advance'.",
        "code": "wfJD",
        "evidence": "function advance(id, t) {",
        "line": 903,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'advance'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'advanceregex'.",
        "code": "wfJD",
        "evidence": "function advanceregex() {",
        "line": 1009,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'advanceregex'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'beginfunction'.",
        "code": "wfJD",
        "evidence": "function beginfunction(i) {",
        "line": 1013,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'beginfunction'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'endfunction'.",
        "code": "wfJD",
        "evidence": "function endfunction() {",
        "line": 1024,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'endfunction'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'parse'.",
        "code": "wfJD",
        "evidence": "function parse(rbp, initial) {",
        "line": 1043,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'parse'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'adjacent'.",
        "code": "wfJD",
        "evidence": "function adjacent(left, right) {",
        "line": 1108,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'adjacent'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'nonadjacent'.",
        "code": "wfJD",
        "evidence": "function nonadjacent(left, right) {",
        "line": 1116,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'nonadjacent'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'indentation'.",
        "code": "wfJD",
        "evidence": "function indentation(bias) {",
        "line": 1124,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'indentation'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'symbol'.",
        "code": "wfJD",
        "evidence": "function symbol(s, p) {",
        "line": 1139,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'symbol'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'delim'.",
        "code": "wfJD",
        "evidence": "function delim(s) {",
        "line": 1147,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'delim'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'stmt'.",
        "code": "wfJD",
        "evidence": "function stmt(s, f) {",
        "line": 1151,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'stmt'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'blockstmt'.",
        "code": "wfJD",
        "evidence": "function blockstmt(s, f) {",
        "line": 1158,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'blockstmt'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'reserveName'.",
        "code": "wfJD",
        "evidence": "function reserveName(x) {",
        "line": 1164,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'reserveName'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'prefix'.",
        "code": "wfJD",
        "evidence": "function prefix(s, f) {",
        "line": 1172,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'prefix'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'type'.",
        "code": "wfJD",
        "evidence": "function type(s, f) {",
        "line": 1185,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'type'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'reserve'.",
        "code": "wfJD",
        "evidence": "function reserve(s, f) {",
        "line": 1192,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'reserve'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'reservevar'.",
        "code": "wfJD",
        "evidence": "function reservevar(s) {",
        "line": 1198,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'reservevar'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'infix'.",
        "code": "wfJD",
        "evidence": "function infix(s, f, p) {",
        "line": 1204,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'infix'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'relation'.",
        "code": "wfJD",
        "evidence": "function relation(s, f) {",
        "line": 1215,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'relation'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'led'.",
        "code": "wfJD",
        "evidence": "x.led = function(left) {",
        "line": 1217,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'led'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'isPoorRelation'.",
        "code": "wfJD",
        "evidence": "function isPoorRelation(node) {",
        "line": 1231,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'isPoorRelation'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'assignop'.",
        "code": "wfJD",
        "evidence": "function assignop(s, f) {",
        "line": 1236,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'assignop'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'bitwise'.",
        "code": "wfJD",
        "evidence": "function bitwise(s, f, p) {",
        "line": 1258,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'bitwise'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'bitwiseassignop'.",
        "code": "wfJD",
        "evidence": "function bitwiseassignop(s) {",
        "line": 1272,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'bitwiseassignop'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'suffix'.",
        "code": "wfJD",
        "evidence": "function suffix(s, f) {",
        "line": 1297,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'suffix'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'led'.",
        "code": "wfJD",
        "evidence": "x.led = function(left) {",
        "line": 1299,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'led'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'optionalidentifier'.",
        "code": "wfJD",
        "evidence": "function optionalidentifier() {",
        "line": 1308,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'optionalidentifier'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'identifier'.",
        "code": "wfJD",
        "evidence": "function identifier() {",
        "line": 1326,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'identifier'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'reachable'.",
        "code": "wfJD",
        "evidence": "function reachable(s) {",
        "line": 1339,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'reachable'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'statement'.",
        "code": "wfJD",
        "evidence": "function statement() {",
        "line": 1364,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'statement'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'statements'.",
        "code": "wfJD",
        "evidence": "function statements() {",
        "line": 1397,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'statements'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'block'.",
        "code": "wfJD",
        "evidence": "function block(f) {",
        "line": 1404,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'block'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'idValue'.",
        "code": "wfJD",
        "evidence": "function idValue() {",
        "line": 1431,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'idValue'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'countMember'.",
        "code": "wfJD",
        "evidence": "function countMember(m) {",
        "line": 1435,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'countMember'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'isFunction'.",
        "code": "wfJD",
        "evidence": "function isFunction(symbol, functions) {",
        "line": 1443,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'isFunction'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doBegin'.",
        "code": "wfJD",
        "evidence": "doBegin: function(n) {",
        "line": 1481,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doBegin'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doBegin'.",
        "code": "wfJD",
        "evidence": "doBegin: function(n) {",
        "line": 1489,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doBegin'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doTagName'.",
        "code": "wfJD",
        "evidence": "doTagName: function(n, p) {",
        "line": 1493,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doTagName'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doAttribute'.",
        "code": "wfJD",
        "evidence": "doAttribute: function(n, a) {",
        "line": 1518,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doAttribute'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doIt'.",
        "code": "wfJD",
        "evidence": "doIt: function(n) {",
        "line": 1533,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doIt'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doBegin'.",
        "code": "wfJD",
        "evidence": "doBegin: function(n) {",
        "line": 1705,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doBegin'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doTagName'.",
        "code": "wfJD",
        "evidence": "doTagName: function(n, p) {",
        "line": 1708,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doTagName'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doAttribute'.",
        "code": "wfJD",
        "evidence": "doAttribute: function(n, a) {",
        "line": 1718,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doAttribute'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doIt'.",
        "code": "wfJD",
        "evidence": "doIt: function(n) {",
        "line": 1730,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doIt'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'xmlword'.",
        "code": "wfJD",
        "evidence": "function xmlword(tag) {",
        "line": 2165,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'xmlword'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'closetag'.",
        "code": "wfJD",
        "evidence": "function closetag(n) {",
        "line": 2193,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'closetag'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'xml'.",
        "code": "wfJD",
        "evidence": "function xml() {",
        "line": 2197,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'xml'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'nud'.",
        "code": "wfJD",
        "evidence": "nud: function() {",
        "line": 2414,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'nud'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'led'.",
        "code": "wfJD",
        "evidence": "led: function() {",
        "line": 2430,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'led'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'nud'.",
        "code": "wfJD",
        "evidence": "x.nud = function() {",
        "line": 2757,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'nud'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'fud'.",
        "code": "wfJD",
        "evidence": "x.fud = function() {",
        "line": 2813,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'fud'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'varstatement'.",
        "code": "wfJD",
        "evidence": "function varstatement() {",
        "line": 2818,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'varstatement'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'functionparams'.",
        "code": "wfJD",
        "evidence": "function functionparams() {",
        "line": 2857,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'functionparams'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'nolinebreak'.",
        "code": "wfJD",
        "evidence": "function nolinebreak(t) {",
        "line": 3123,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'nolinebreak'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'itself'.",
        "code": "wfJD",
        "evidence": "var itself = function(s, o) {",
        "line": 3197,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'itself'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'report'.",
        "code": "wfJD",
        "evidence": "itself.report = function(option) {",
        "line": 3238,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'report'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'detail'.",
        "code": "wfJD",
        "evidence": "function detail(h) {",
        "line": 3255,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'detail'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'isMemberVariable'.",
        "code": "wfJD",
        "evidence": "function isMemberVariable(methods, report, funcName) {",
        "line": 3400,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'isMemberVariable'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'isMethod'.",
        "code": "wfJD",
        "evidence": "function isMethod(methods, funcName) {",
        "line": 3424,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'isMethod'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'fixIt'.",
        "code": "wfJD",
        "evidence": "function fixIt(js, fName) {",
        "line": 3446,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'fixIt'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'convertOneLineComments'.",
        "code": "wfJD",
        "evidence": "function convertOneLineComments(input) {",
        "line": 3464,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'convertOneLineComments'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'stripOneLineComments'.",
        "code": "wfJD",
        "evidence": "function stripOneLineComments(input) {",
        "line": 3499,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'stripOneLineComments'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'getJSDocComments'.",
        "code": "wfJD",
        "evidence": "function getJSDocComments(input) {",
        "line": 3511,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'getJSDocComments'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'chunkComment'.",
        "code": "wfJD",
        "evidence": "function chunkComment(input) {",
        "line": 3569,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'chunkComment'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'stripJSDocComments'.",
        "code": "wfJD",
        "evidence": "function stripJSDocComments(input) {",
        "line": 3650,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'stripJSDocComments'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'stripCComments'.",
        "code": "wfJD",
        "evidence": "function stripCComments(input) {",
        "line": 3671,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'stripCComments'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'scanFunction'.",
        "code": "wfJD",
        "evidence": "function scanFunction(lines, line) {",
        "line": 3692,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'scanFunction'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'getparentMeth'.",
        "code": "wfJD",
        "evidence": "function getparentMeth(stack, name) {",
        "line": 3739,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'getparentMeth'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'copyArray'.",
        "code": "wfJD",
        "evidence": "function copyArray(array) {",
        "line": 3762,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'copyArray'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'copyObject'.",
        "code": "wfJD",
        "evidence": "function copyObject(obj) {",
        "line": 3773,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'copyObject'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'sortByLine'.",
        "code": "wfJD",
        "evidence": "function sortByLine(a, b) {",
        "line": 3810,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'sortByLine'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'findMethod'.",
        "code": "wfJD",
        "evidence": "function findMethod(methods, name) {",
        "line": 3820,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'findMethod'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'generateDoc'.",
        "code": "wfJD",
        "evidence": "function generateDoc(input, fName, documentation) {",
        "line": 3832,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'generateDoc'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'decamelize'.",
        "code": "wfJD",
        "evidence": "function decamelize(input) {",
        "line": 4694,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'decamelize'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'java_onclick'.",
        "code": "wfJD",
        "evidence": "function java_onclick() {",
        "line": 4741,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'java_onclick'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'trim'.",
        "code": "wfJD",
        "evidence": "function trim(input) {",
        "line": 4762,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'trim'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'doLogging'.",
        "code": "wfJD",
        "evidence": "function doLogging(msg) {}",
        "line": 4766,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'doLogging'."
      }
    ],
    "jsDoc3PrepProc": [],
    "fixJSDocFormattingProc": []
  },
  "outputDirectory": "test-output",
  "path": "test-source/ours/jsDocProc.js",
  "folderPath": "test-source/ours",
  "fileName": "jsDocProc.js",
  "packagePath": "/ours",
  "webPath": "/ours",
  "libFile": false,
  "min": false,
  "realName": "js_doc_proc",
  "name": "js_doc_proc",
  "camelName": "JsDocProc",
  "processedFilePath": "test-output/ours/jsDocProc.js",
  "couldParseOriginalSource": true,
  "jsDoccerProcData": {
    "lines": 4774,
    "requires": [],
    "className": "JsDocProc",
    "packagePath": "",
    "directoryPath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-output/ours",
    "uses_Y": false,
    "no_lib": true,
    "inferencedClassName": "JsDocProc",
    "uses_$": false,
    "chars": 130712,
    "uses_YUI": false,
    "fields": [],
    "moduleName": "jsDocProc",
    "uses_console_log": false,
    "uses_backbone": false,
    "classes": {
      "itself": {
        "name": "itself",
        "visibility": "public",
        "constructor": true,
        "static": false,
        "lineNumber": 3197,
        "memberOf": "",
        "args": [
          "s",
          "o"
        ],
        "return": "void",
        "classDeclarationFlag": true,
        "line": "var itself = function(s, o) {"
      },
      "token": {
        "name": "token",
        "visibility": "public",
        "constructor": true,
        "static": false,
        "lineNumber": 525,
        "memberOf": "",
        "args": [],
        "return": "void",
        "classDeclarationFlag": true,
        "line": "token: function() {"
      },
      "type": {
        "name": "type",
        "visibility": "public",
        "constructor": true,
        "static": false,
        "lineNumber": 1185,
        "memberOf": "",
        "args": [
          "s",
          "f"
        ],
        "return": "void",
        "classDeclarationFlag": true,
        "line": "function type(s, f) {"
      }
    },
    "methods": [
      {
        "lineNumber": 0,
        "line": "(function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous0",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "name": "beget",
        "visibility": "public",
        "static": false,
        "lineNumber": 50,
        "memberOf": "Object.prototype",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Beget.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "Object.prototype.beget = function() {"
      },
      {
        "name": "F",
        "visibility": "public",
        "static": false,
        "lineNumber": 51,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * F.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function F() {}"
      },
      {
        "name": "entityify",
        "visibility": "public",
        "static": false,
        "lineNumber": 56,
        "memberOf": "String.prototype",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Entityify.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "String.prototype.entityify = function() {"
      },
      {
        "name": "isAlpha",
        "visibility": "public",
        "static": false,
        "lineNumber": 61,
        "memberOf": "String.prototype",
        "originalJsDocDescription": {},
        "args": [],
        "returns": "{Boolean}",
        "description": " * Is alpha.",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "String.prototype.isAlpha = function() {"
      },
      {
        "name": "isDigit",
        "visibility": "public",
        "static": false,
        "lineNumber": 65,
        "memberOf": "String.prototype",
        "originalJsDocDescription": {},
        "args": [],
        "returns": "{Boolean}",
        "description": " * Is digit.",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "String.prototype.isDigit = function() {"
      },
      {
        "name": "supplant",
        "visibility": "public",
        "static": false,
        "lineNumber": 69,
        "params": " * @param o",
        "memberOf": "String.prototype",
        "originalJsDocDescription": {},
        "args": [
          "o"
        ],
        "description": " * Supplant.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "String.prototype.supplant = function(o) {"
      },
      {
        "name": "JSLINT",
        "visibility": "public",
        "static": false,
        "lineNumber": 96,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * JSLINT.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "JSLINT = function() {"
      },
      {
        "name": "warning",
        "visibility": "public",
        "static": false,
        "lineNumber": 386,
        "params": " * @param m\n * @param t\n * @param a\n * @param b\n * @param c\n * @param d",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "m",
          "t",
          "a",
          "b",
          "c",
          "d"
        ],
        "description": " * Warning.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function warning(m, t, a, b, c, d) {"
      },
      {
        "name": "warningAt",
        "visibility": "public",
        "static": false,
        "lineNumber": 417,
        "params": " * @param m\n * @param l\n * @param ch\n * @param a\n * @param b\n * @param c\n * @param d",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "m",
          "l",
          "ch",
          "a",
          "b",
          "c",
          "d"
        ],
        "description": " * Warning at.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function warningAt(m, l, ch, a, b, c, d) {"
      },
      {
        "name": "error",
        "visibility": "public",
        "static": false,
        "lineNumber": 425,
        "params": " * @param m\n * @param t\n * @param a\n * @param b\n * @param c\n * @param d",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "m",
          "t",
          "a",
          "b",
          "c",
          "d"
        ],
        "description": " * Error.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function error(m, t, a, b, c, d) {"
      },
      {
        "name": "errorAt",
        "visibility": "public",
        "static": false,
        "lineNumber": 431,
        "params": " * @param m\n * @param l\n * @param ch\n * @param a\n * @param b\n * @param c\n * @param d",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "m",
          "l",
          "ch",
          "a",
          "b",
          "c",
          "d"
        ],
        "description": " * Error at.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function errorAt(m, l, ch, a, b, c, d) {"
      },
      {
        "name": "quit",
        "visibility": "public",
        "static": false,
        "lineNumber": 438,
        "params": " * @param m\n * @param l\n * @param ch",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "m",
          "l",
          "ch"
        ],
        "description": " * Quit.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "quit = function(m, l, ch) {"
      },
      {
        "name": "lex",
        "visibility": "public",
        "static": false,
        "lineNumber": 451,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Lex.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "var lex = function() {"
      },
      {
        "name": "nextLine",
        "visibility": "public",
        "static": false,
        "lineNumber": 459,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Next line.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function nextLine() {"
      },
      {
        "name": "it",
        "visibility": "public",
        "static": false,
        "lineNumber": 471,
        "params": " * @param type\n * @param value",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "type",
          "value"
        ],
        "description": " * It.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function it(type, value) {"
      },
      {
        "name": "init",
        "visibility": "public",
        "static": false,
        "lineNumber": 505,
        "params": " * @param source",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "source"
        ],
        "description": " * Init.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "init: function(source) {"
      },
      {
        "name": "token",
        "visibility": "public",
        "static": false,
        "lineNumber": 525,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Token.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "token: function() {"
      },
      {
        "name": "match",
        "visibility": "public",
        "static": false,
        "lineNumber": 532,
        "params": " * @param x",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "x"
        ],
        "description": " * Match.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function match(x) {"
      },
      {
        "name": "more",
        "visibility": "public",
        "static": false,
        "lineNumber": 546,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * More.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function more() {"
      },
      {
        "name": "string",
        "visibility": "public",
        "static": false,
        "lineNumber": 554,
        "params": " * @param x",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "x"
        ],
        "description": " * String.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function string(x) {"
      },
      {
        "name": "esc",
        "visibility": "public",
        "static": false,
        "lineNumber": 561,
        "params": " * @param n",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n"
        ],
        "description": " * Esc.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function esc(n) {"
      },
      {
        "name": "skip",
        "visibility": "public",
        "static": false,
        "lineNumber": 784,
        "params": " * @param p",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "p"
        ],
        "description": " * Skip.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "skip: function(p) {"
      },
      {
        "name": "regex",
        "visibility": "public",
        "static": false,
        "lineNumber": 816,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Regex.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "regex: function() {"
      },
      {
        "name": "builtin",
        "visibility": "public",
        "static": false,
        "lineNumber": 832,
        "params": " * @param name",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "name"
        ],
        "description": " * Builtin.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function builtin(name) {"
      },
      {
        "name": "addlabel",
        "visibility": "public",
        "static": false,
        "lineNumber": 837,
        "params": " * @param t\n * @param type",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "t",
          "type"
        ],
        "description": " * Addlabel.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function addlabel(t, type) {"
      },
      {
        "name": "peek",
        "visibility": "public",
        "static": false,
        "lineNumber": 879,
        "params": " * @param p",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "p"
        ],
        "description": " * Peek.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function peek(p) {"
      },
      {
        "name": "advance",
        "visibility": "public",
        "static": false,
        "lineNumber": 903,
        "params": " * @param id\n * @param t",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "id",
          "t"
        ],
        "description": " * Advance.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function advance(id, t) {"
      },
      {
        "name": "advanceregex",
        "visibility": "public",
        "static": false,
        "lineNumber": 1009,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Advanceregex.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function advanceregex() {"
      },
      {
        "name": "beginfunction",
        "visibility": "public",
        "static": false,
        "lineNumber": 1013,
        "params": " * @param i",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "i"
        ],
        "description": " * Beginfunction.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function beginfunction(i) {"
      },
      {
        "name": "endfunction",
        "visibility": "public",
        "static": false,
        "lineNumber": 1024,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Endfunction.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function endfunction() {"
      },
      {
        "name": "parse",
        "visibility": "public",
        "static": false,
        "lineNumber": 1043,
        "params": " * @param rbp\n * @param initial",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "rbp",
          "initial"
        ],
        "description": " * Parse.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function parse(rbp, initial) {"
      },
      {
        "name": "adjacent",
        "visibility": "public",
        "static": false,
        "lineNumber": 1108,
        "params": " * @param left\n * @param right",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "left",
          "right"
        ],
        "description": " * Adjacent.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function adjacent(left, right) {"
      },
      {
        "name": "nonadjacent",
        "visibility": "public",
        "static": false,
        "lineNumber": 1116,
        "params": " * @param left\n * @param right",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "left",
          "right"
        ],
        "description": " * Nonadjacent.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function nonadjacent(left, right) {"
      },
      {
        "name": "indentation",
        "visibility": "public",
        "static": false,
        "lineNumber": 1124,
        "params": " * @param bias",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "bias"
        ],
        "description": " * Indentation.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function indentation(bias) {"
      },
      {
        "name": "symbol",
        "visibility": "public",
        "static": false,
        "lineNumber": 1139,
        "params": " * @param s\n * @param p",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "p"
        ],
        "description": " * Symbol.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function symbol(s, p) {"
      },
      {
        "name": "delim",
        "visibility": "public",
        "static": false,
        "lineNumber": 1147,
        "params": " * @param s",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s"
        ],
        "description": " * Delim.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function delim(s) {"
      },
      {
        "name": "stmt",
        "visibility": "public",
        "static": false,
        "lineNumber": 1151,
        "params": " * @param s\n * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f"
        ],
        "description": " * Stmt.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function stmt(s, f) {"
      },
      {
        "name": "blockstmt",
        "visibility": "public",
        "static": false,
        "lineNumber": 1158,
        "params": " * @param s\n * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f"
        ],
        "description": " * Blockstmt.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function blockstmt(s, f) {"
      },
      {
        "name": "reserveName",
        "visibility": "public",
        "static": false,
        "lineNumber": 1164,
        "params": " * @param x",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "x"
        ],
        "description": " * Reserve name.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function reserveName(x) {"
      },
      {
        "name": "prefix",
        "visibility": "public",
        "static": false,
        "lineNumber": 1172,
        "params": " * @param s\n * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f"
        ],
        "description": " * Prefix.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function prefix(s, f) {"
      },
      {
        "name": "type",
        "visibility": "public",
        "static": false,
        "lineNumber": 1185,
        "params": " * @param s\n * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f"
        ],
        "description": " * Type.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function type(s, f) {"
      },
      {
        "name": "reserve",
        "visibility": "public",
        "static": false,
        "lineNumber": 1192,
        "params": " * @param s\n * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f"
        ],
        "description": " * Reserve.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function reserve(s, f) {"
      },
      {
        "name": "reservevar",
        "visibility": "public",
        "static": false,
        "lineNumber": 1198,
        "params": " * @param s",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s"
        ],
        "description": " * Reservevar.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function reservevar(s) {"
      },
      {
        "lineNumber": 1199,
        "line": "return reserve(s, function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous1199",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "name": "infix",
        "visibility": "public",
        "static": false,
        "lineNumber": 1204,
        "params": " * @param s\n * @param f\n * @param p",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f",
          "p"
        ],
        "description": " * Infix.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function infix(s, f, p) {"
      },
      {
        "name": "relation",
        "visibility": "public",
        "static": false,
        "lineNumber": 1215,
        "params": " * @param s\n * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f"
        ],
        "description": " * Relation.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function relation(s, f) {"
      },
      {
        "name": "led",
        "visibility": "public",
        "static": false,
        "lineNumber": 1217,
        "params": " * @param left",
        "memberOf": "x",
        "originalJsDocDescription": {},
        "args": [
          "left"
        ],
        "description": " * Led.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "x.led = function(left) {"
      },
      {
        "name": "isPoorRelation",
        "visibility": "public",
        "static": false,
        "lineNumber": 1231,
        "params": " * @param node",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "node"
        ],
        "returns": "{Boolean}",
        "description": " * Is poor relation.",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "function isPoorRelation(node) {"
      },
      {
        "name": "assignop",
        "visibility": "public",
        "static": false,
        "lineNumber": 1236,
        "params": " * @param s\n * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f"
        ],
        "description": " * Assignop.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function assignop(s, f) {"
      },
      {
        "lineNumber": 1240,
        "line": "function(left) {",
        "visibility": "private",
        "args": [
          "left"
        ],
        "name": "_anonymous1240",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "name": "bitwise",
        "visibility": "public",
        "static": false,
        "lineNumber": 1258,
        "params": " * @param s\n * @param f\n * @param p",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f",
          "p"
        ],
        "description": " * Bitwise.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function bitwise(s, f, p) {"
      },
      {
        "name": "bitwiseassignop",
        "visibility": "public",
        "static": false,
        "lineNumber": 1272,
        "params": " * @param s",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s"
        ],
        "description": " * Bitwiseassignop.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function bitwiseassignop(s) {"
      },
      {
        "lineNumber": 1276,
        "line": "function(left) {",
        "visibility": "private",
        "args": [
          "left"
        ],
        "name": "_anonymous1276",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "name": "suffix",
        "visibility": "public",
        "static": false,
        "lineNumber": 1297,
        "params": " * @param s\n * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "f"
        ],
        "description": " * Suffix.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function suffix(s, f) {"
      },
      {
        "name": "led",
        "visibility": "public",
        "static": false,
        "lineNumber": 1299,
        "params": " * @param left",
        "memberOf": "x",
        "originalJsDocDescription": {},
        "args": [
          "left"
        ],
        "description": " * Led.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "x.led = function(left) {"
      },
      {
        "name": "optionalidentifier",
        "visibility": "public",
        "static": false,
        "lineNumber": 1308,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Optionalidentifier.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function optionalidentifier() {"
      },
      {
        "name": "identifier",
        "visibility": "public",
        "static": false,
        "lineNumber": 1326,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Identifier.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function identifier() {"
      },
      {
        "name": "reachable",
        "visibility": "public",
        "static": false,
        "lineNumber": 1339,
        "params": " * @param s",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s"
        ],
        "description": " * Reachable.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function reachable(s) {"
      },
      {
        "name": "statement",
        "visibility": "public",
        "static": false,
        "lineNumber": 1364,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Statement.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function statement() {"
      },
      {
        "name": "statements",
        "visibility": "public",
        "static": false,
        "lineNumber": 1397,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Statements.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function statements() {"
      },
      {
        "name": "block",
        "visibility": "public",
        "static": false,
        "lineNumber": 1404,
        "params": " * @param f",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "f"
        ],
        "description": " * Block.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function block(f) {"
      },
      {
        "name": "idValue",
        "visibility": "public",
        "static": false,
        "lineNumber": 1431,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Id value.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function idValue() {"
      },
      {
        "name": "countMember",
        "visibility": "public",
        "static": false,
        "lineNumber": 1435,
        "params": " * @param m",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "m"
        ],
        "description": " * Count member.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function countMember(m) {"
      },
      {
        "name": "isFunction",
        "visibility": "public",
        "static": false,
        "lineNumber": 1443,
        "params": " * @param symbol\n * @param functions",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "symbol",
          "functions"
        ],
        "returns": "{Boolean}",
        "description": " * Is function.",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "function isFunction(symbol, functions) {"
      },
      {
        "name": "doBegin",
        "visibility": "public",
        "static": false,
        "lineNumber": 1481,
        "params": " * @param n",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n"
        ],
        "description": " * Do begin.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doBegin: function(n) {"
      },
      {
        "name": "doBegin",
        "visibility": "public",
        "static": false,
        "lineNumber": 1489,
        "params": " * @param n",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n"
        ],
        "description": " * Do begin.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doBegin: function(n) {"
      },
      {
        "name": "doTagName",
        "visibility": "public",
        "static": false,
        "lineNumber": 1493,
        "params": " * @param n\n * @param p",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n",
          "p"
        ],
        "description": " * Do tag name.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doTagName: function(n, p) {"
      },
      {
        "name": "doAttribute",
        "visibility": "public",
        "static": false,
        "lineNumber": 1518,
        "params": " * @param n\n * @param a",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n",
          "a"
        ],
        "description": " * Do attribute.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doAttribute: function(n, a) {"
      },
      {
        "name": "doIt",
        "visibility": "public",
        "static": false,
        "lineNumber": 1533,
        "params": " * @param n",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n"
        ],
        "description": " * Do it.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doIt: function(n) {"
      },
      {
        "name": "doBegin",
        "visibility": "public",
        "static": false,
        "lineNumber": 1705,
        "params": " * @param n",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n"
        ],
        "description": " * Do begin.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doBegin: function(n) {"
      },
      {
        "name": "doTagName",
        "visibility": "public",
        "static": false,
        "lineNumber": 1708,
        "params": " * @param n\n * @param p",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n",
          "p"
        ],
        "description": " * Do tag name.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doTagName: function(n, p) {"
      },
      {
        "name": "doAttribute",
        "visibility": "public",
        "static": false,
        "lineNumber": 1718,
        "params": " * @param n\n * @param a",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n",
          "a"
        ],
        "description": " * Do attribute.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doAttribute: function(n, a) {"
      },
      {
        "name": "doIt",
        "visibility": "public",
        "static": false,
        "lineNumber": 1730,
        "params": " * @param n",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n"
        ],
        "description": " * Do it.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "doIt: function(n) {"
      },
      {
        "name": "xmlword",
        "visibility": "public",
        "static": false,
        "lineNumber": 2165,
        "params": " * @param tag",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "tag"
        ],
        "description": " * Xmlword.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function xmlword(tag) {"
      },
      {
        "name": "closetag",
        "visibility": "public",
        "static": false,
        "lineNumber": 2193,
        "params": " * @param n",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "n"
        ],
        "description": " * Closetag.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function closetag(n) {"
      },
      {
        "name": "xml",
        "visibility": "public",
        "static": false,
        "lineNumber": 2197,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Xml.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function xml() {"
      },
      {
        "name": "nud",
        "visibility": "public",
        "static": false,
        "lineNumber": 2414,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Nud.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "nud: function() {"
      },
      {
        "name": "led",
        "visibility": "public",
        "static": false,
        "lineNumber": 2430,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Led.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "led: function() {"
      },
      {
        "lineNumber": 2436,
        "line": "type('(regex)', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2436",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2489,
        "line": "infix('?', function(left) {",
        "visibility": "private",
        "args": [
          "left"
        ],
        "name": "_anonymous2489",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2500,
        "line": "relation('==', function(left, right) {",
        "visibility": "private",
        "args": [
          "left",
          "right"
        ],
        "name": "_anonymous2500",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2511,
        "line": "relation('!=', function(left, right) {",
        "visibility": "private",
        "args": [
          "left",
          "right"
        ],
        "name": "_anonymous2511",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2532,
        "line": "infix('+', function(left) {",
        "visibility": "private",
        "args": [
          "left"
        ],
        "name": "_anonymous2532",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2563,
        "line": "prefix('delete', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2563",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2567,
        "line": "prefix('~', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2567",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2578,
        "line": "function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2578",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2640,
        "line": "infix('.', function(left) {",
        "visibility": "private",
        "args": [
          "left"
        ],
        "name": "_anonymous2640",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2656,
        "line": "function(left) {",
        "visibility": "private",
        "args": [
          "left"
        ],
        "name": "_anonymous2656",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2700,
        "line": "prefix('(', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2700",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2706,
        "line": "infix('[', function(left) {",
        "visibility": "private",
        "args": [
          "left"
        ],
        "name": "_anonymous2706",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2724,
        "line": "prefix('[', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2724",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2756,
        "line": "(function(x) {",
        "visibility": "private",
        "args": [
          "x"
        ],
        "name": "_anonymous2756",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "name": "nud",
        "visibility": "public",
        "static": false,
        "lineNumber": 2757,
        "memberOf": "x",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Nud.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "x.nud = function() {"
      },
      {
        "name": "fud",
        "visibility": "public",
        "static": false,
        "lineNumber": 2813,
        "memberOf": "x",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Fud.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "x.fud = function() {"
      },
      {
        "name": "varstatement",
        "visibility": "public",
        "static": false,
        "lineNumber": 2818,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Varstatement.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function varstatement() {"
      },
      {
        "lineNumber": 2853,
        "line": "stmt('new', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2853",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "name": "functionparams",
        "visibility": "public",
        "static": false,
        "lineNumber": 2857,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Functionparams.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function functionparams() {"
      },
      {
        "lineNumber": 2877,
        "line": "function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2877",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2883,
        "line": "beginfunction(i);",
        "visibility": "private",
        "args": [
          "i"
        ],
        "name": "_anonymous2883",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2888,
        "line": "endfunction();",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2888",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2894,
        "line": "prefix('function', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2894",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2902,
        "line": "beginfunction(i);",
        "visibility": "private",
        "args": [
          "i"
        ],
        "name": "_anonymous2902",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2906,
        "line": "endfunction();",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2906",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2909,
        "line": "blockstmt('if', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2909",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2932,
        "line": "blockstmt('try', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2932",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2937,
        "line": "beginfunction('\"catch\"');",
        "visibility": "private",
        "args": [
          "'\"catch\"'"
        ],
        "name": "_anonymous2937",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2940,
        "line": "endfunction();",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2940",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2945,
        "line": "beginfunction('\"finally\"');",
        "visibility": "private",
        "args": [
          "'\"finally\"'"
        ],
        "name": "_anonymous2945",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2947,
        "line": "endfunction();",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2947",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2955,
        "line": "blockstmt('while', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2955",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 2972,
        "line": "function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous2972",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 3054,
        "line": "stmt('debugger', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous3054",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 3060,
        "line": "stmt('do', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous3060",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 3070,
        "line": "blockstmt('for', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous3070",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "name": "nolinebreak",
        "visibility": "public",
        "static": false,
        "lineNumber": 3123,
        "params": " * @param t",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "t"
        ],
        "description": " * Nolinebreak.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function nolinebreak(t) {"
      },
      {
        "lineNumber": 3129,
        "line": "stmt('break', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous3129",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 3137,
        "line": "stmt('continue', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous3137",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 3145,
        "line": "stmt('return', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous3145",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "lineNumber": 3154,
        "line": "stmt('throw', function() {",
        "visibility": "private",
        "args": [],
        "name": "_anonymous3154",
        "return": "void",
        "static": false,
        "memberOf": ""
      },
      {
        "name": "itself",
        "visibility": "public",
        "static": false,
        "lineNumber": 3197,
        "params": " * @param s\n * @param o",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "s",
          "o"
        ],
        "description": " * Itself.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "var itself = function(s, o) {"
      },
      {
        "name": "report",
        "visibility": "public",
        "static": false,
        "lineNumber": 3238,
        "params": " * @param option",
        "memberOf": "itself",
        "originalJsDocDescription": {},
        "args": [
          "option"
        ],
        "description": " * Report.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "itself.report = function(option) {"
      },
      {
        "name": "detail",
        "visibility": "public",
        "static": false,
        "lineNumber": 3255,
        "params": " * @param h",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "h"
        ],
        "description": " * Detail.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function detail(h) {"
      },
      {
        "name": "isMemberVariable",
        "visibility": "public",
        "static": false,
        "lineNumber": 3400,
        "params": " * @param methods\n * @param report\n * @param funcName",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "methods",
          "report",
          "funcName"
        ],
        "returns": "{Boolean}",
        "description": " * Is member variable.",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "function isMemberVariable(methods, report, funcName) {"
      },
      {
        "name": "isMethod",
        "visibility": "public",
        "static": false,
        "lineNumber": 3424,
        "params": " * @param methods\n * @param funcName",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "methods",
          "funcName"
        ],
        "returns": "{Boolean}",
        "description": " * Is method.",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "function isMethod(methods, funcName) {"
      },
      {
        "name": "fixIt",
        "visibility": "public",
        "static": false,
        "lineNumber": 3446,
        "params": " * @param js\n * @param fName",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "js",
          "fName"
        ],
        "description": " * Fix it.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function fixIt(js, fName) {"
      },
      {
        "name": "convertOneLineComments",
        "visibility": "public",
        "static": false,
        "lineNumber": 3464,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "description": " * Convert one line comments.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function convertOneLineComments(input) {"
      },
      {
        "name": "stripOneLineComments",
        "visibility": "public",
        "static": false,
        "lineNumber": 3499,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "description": " * Strip one line comments.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function stripOneLineComments(input) {"
      },
      {
        "name": "getJSDocComments",
        "visibility": "public",
        "static": false,
        "lineNumber": 3511,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "returns": "{Object}",
        "description": " * Get JS doc comments.",
        "return": "{}",
        "classDeclarationFlag": false,
        "line": "function getJSDocComments(input) {"
      },
      {
        "name": "chunkComment",
        "visibility": "public",
        "static": false,
        "lineNumber": 3569,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "description": " * Chunk comment.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function chunkComment(input) {"
      },
      {
        "name": "__getJSDocComments",
        "visibility": "private",
        "static": false,
        "lineNumber": 3627,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "description": " * _get JS doc comments.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function __getJSDocComments(input) {"
      },
      {
        "name": "stripJSDocComments",
        "visibility": "public",
        "static": false,
        "lineNumber": 3650,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "description": " * Strip JS doc comments.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function stripJSDocComments(input) {"
      },
      {
        "name": "stripCComments",
        "visibility": "public",
        "static": false,
        "lineNumber": 3671,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "description": " * Strip C comments.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function stripCComments(input) {"
      },
      {
        "name": "scanFunction",
        "visibility": "public",
        "static": false,
        "lineNumber": 3692,
        "params": " * @param lines\n * @param line",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "lines",
          "line"
        ],
        "description": " * Scan function.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function scanFunction(lines, line) {"
      },
      {
        "name": "getparentMeth",
        "visibility": "public",
        "static": false,
        "lineNumber": 3739,
        "params": " * @param stack\n * @param name",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "stack",
          "name"
        ],
        "returns": "{Object}",
        "description": " * Getparent meth.",
        "return": "{}",
        "classDeclarationFlag": false,
        "line": "function getparentMeth(stack, name) {"
      },
      {
        "name": "copyArray",
        "visibility": "public",
        "static": false,
        "lineNumber": 3762,
        "params": " * @param array",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "array"
        ],
        "description": " * Copy array.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function copyArray(array) {"
      },
      {
        "name": "copyObject",
        "visibility": "public",
        "static": false,
        "lineNumber": 3773,
        "params": " * @param obj",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "obj"
        ],
        "description": " * Copy object.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function copyObject(obj) {"
      },
      {
        "name": "sortByLine",
        "visibility": "public",
        "static": false,
        "lineNumber": 3810,
        "params": " * @param a\n * @param b",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "a",
          "b"
        ],
        "description": " * Sort by line.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function sortByLine(a, b) {"
      },
      {
        "name": "findMethod",
        "visibility": "public",
        "static": false,
        "lineNumber": 3820,
        "params": " * @param methods\n * @param name",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "methods",
          "name"
        ],
        "description": " * Find method.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function findMethod(methods, name) {"
      },
      {
        "name": "generateDoc",
        "visibility": "public",
        "static": false,
        "lineNumber": 3832,
        "params": " * @param input\n * @param fName\n * @param documentation",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input",
          "fName",
          "documentation"
        ],
        "description": " * Generate doc.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function generateDoc(input, fName, documentation) {"
      },
      {
        "lends": "Core\") !.prototype",
        "lineNumber": 4234,
        "line": "if (funcDecl.indexOf(\"APOLLO.Core\") != -1) {",
        "name": "Core\") !",
        "description": " * Creates a new instance of Core\") !.",
        "classDeclarationFlag": true,
        "originalJsDocDescription": {},
        "memberOf": ""
      },
      {
        "lends": "Core\") !.prototype",
        "lineNumber": 4254,
        "line": "if (funcDecl.indexOf(\"APOLLO.Core\") != -1) {",
        "name": "Core\") !",
        "description": " * Creates a new instance of Core\") !.",
        "classDeclarationFlag": true,
        "originalJsDocDescription": {},
        "memberOf": ""
      },
      {
        "name": "generateDocBlock",
        "visibility": "public",
        "static": false,
        "lineNumber": 4415,
        "params": " * @param docBlock\n * @param previousDocs",
        "memberOf": "",
        "originalJsDocDescription": {
          "return": {
            "type": "",
            "description": "the channel matrix",
            "attribute": "return"
          },
          "description": "   * Gets the channel matrix.\n   *\n   *          the mod app\n   *          the channels array\n   *          the from\n   *          the to\n   *          the rEGIO n_ id"
        },
        "args": [
          "docBlock",
          "previousDocs"
        ],
        "returns": " the channel matrix",
        "description": "   * Gets the channel matrix.\n   *\n   *          the mod app\n   *          the channels array\n   *          the from\n   *          the to\n   *          the rEGIO n_ id",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function generateDocBlock(docBlock, previousDocs) {"
      },
      {
        "name": "capitalize",
        "visibility": "public",
        "static": false,
        "lineNumber": 4688,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {
          "return": {
            "type": "",
            "description": "the string",
            "attribute": "return"
          },
          "description": "     * Generate field type.\n     *\n     *          the parent\n     *          the specifier",
          "": {
            "name": "channelsArray",
            "type": "",
            "description": "the channels array @ from the from @ to the to @ REGION_ID",
            "attribute": ""
          }
        },
        "args": [
          "input"
        ],
        "returns": " the string",
        "description": "     * Generate field type.\n     *\n     *          the parent\n     *          the specifier",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function capitalize(input) {"
      },
      {
        "name": "decamelize",
        "visibility": "public",
        "static": false,
        "lineNumber": 4694,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "description": " * Decamelize.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function decamelize(input) {"
      },
      {
        "name": "isUpperCase",
        "visibility": "public",
        "static": false,
        "lineNumber": 4737,
        "params": " * @param  aCharacter ",
        "memberOf": "",
        "originalJsDocDescription": {
          "return": {
            "type": "",
            "description": "String",
            "attribute": "return"
          },
          "description": "",
          "public": {
            "type": "",
            "description": "",
            "attribute": "public"
          }
        },
        "args": [
          "aCharacter"
        ],
        "returns": "{Boolean}",
        "description": " * Is upper case.",
        "return": "{boolean}",
        "classDeclarationFlag": false,
        "line": "function isUpperCase(aCharacter) {"
      },
      {
        "name": "java_onclick",
        "visibility": "public",
        "static": false,
        "lineNumber": 4741,
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [],
        "description": " * Java_onclick.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function java_onclick() {"
      },
      {
        "name": "trim",
        "visibility": "public",
        "static": false,
        "lineNumber": 4762,
        "params": " * @param input",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "input"
        ],
        "description": " * Trim.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function trim(input) {"
      },
      {
        "name": "doLogging",
        "visibility": "public",
        "static": false,
        "lineNumber": 4766,
        "params": " * @param msg",
        "memberOf": "",
        "originalJsDocDescription": {},
        "args": [
          "msg"
        ],
        "description": " * Do logging.",
        "return": "void",
        "classDeclarationFlag": false,
        "line": "function doLogging(msg) {}"
      }
    ],
    "is_module": false,
    "uses_alert": true,
    "uses_y_log": false,
    "requiresRaw": [],
    "basePath": "/Users/f558910/Documents/Projects/jsdoc-prep/test-output/ours",
    "fileName": "jsDocProc.js",
    "strict": false
  },
  "possibleClassname": "itself",
  "testStubs": "undefined",
  "couldParseProcessedSource": true,
  "corrupted": false,
  "numberOfLines": 2840
}