{
  "results": {
    "amdProc": {
      "requires": [],
      "moduleName": "logger",
      "AMD": true,
      "webPath": "/core",
      "convertedName": "logger",
      "min": false,
      "main": 0,
      "uses_$": false,
      "uses_Y": false,
      "uses_alert": false,
      "strict": false
    }
  },
  "errors": {
    "JSONFilter": [],
    "jsBeautifyProc": [],
    "jsDoccerProc": []
  },
  "outputDirectory": "test-output",
  "path": "test-source/core/logger.js",
  "folderPath": "test-source/core",
  "fileName": "logger.js",
  "modulePaths": {
    "blue": "blue/js"
  },
  "packagePath": "/core",
  "webPath": "/core",
  "libFile": false,
  "min": false,
  "realName": "logger",
  "name": "logger",
  "camelName": "Logger",
  "processedFilePath": "test-output/core/logger.js",
  "mappedModuleName": "core/logger",
  "couldParseOriginalSource": true,
  "namedConstructors": {
    "core/logger~Logger": {
      "todos": [],
      "memberOf": "",
      "returnType": "",
      "ctor": true,
      "lineNumber": 36,
      "line": "function Logger() {",
      "comment": 5,
      "range": [
        755,
        1662
      ],
      "name": "Logger",
      "commentBody": "/**\n   * Instantiates a new Logger.\n   *\n   * @class Logger\n   * @constructor\n   * @public\n   */",
      "oldComment": {
        "type": "Block",
        "value": "*\n   * Instantiates a new Logger.\n   *\n   * @class Logger\n   * @constructor\n   * @public\n   ",
        "range": [
          656,
          752
        ],
        "commentBody": "/**\n   * Instantiates a new Logger.\n   *\n   * @class Logger\n   * @constructor\n   * @public\n   */",
        "lineNumber": 29
      },
      "ctorType": "@constructor",
      "doclet": {
        "params": [],
        "tags": [
          {
            "tag": "class",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "Logger"
          },
          {
            "tag": "constructor",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": ""
          },
          {
            "tag": "public",
            "line": 5,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "\n"
          }
        ],
        "requiresList": [],
        "moduleName": "logger",
        "camelName": "Logger",
        "freeText": "\n Instantiates a new Logger.\n",
        "@constructor": "",
        "@public": "",
        "preamble": "\n Instantiates a new Logger.\n",
        "constructor": "Logger",
        "className": "Logger",
        "nodeType": "CLASS"
      },
      "jsDoc": "/**\n * Instantiates a new Logger.\n * @class Logger\n * @constructor\n * @public\n */"
    }
  },
  "checkForRequiresMismatch": true,
  "preprocessed": true,
  "moduleName": "core/logger",
  "jsDoccerProcData": {
    "lines": 292,
    "requires": [],
    "className": "n/a",
    "packagePath": "",
    "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/core",
    "uses_Y": false,
    "no_lib": true,
    "inferencedClassName": "n/a",
    "uses_$": false,
    "chars": 7012,
    "uses_YUI": false,
    "fields": [],
    "moduleName": "./logger",
    "uses_console_log": true,
    "uses_backbone": false,
    "classes": {
      "Logger": 2295
    },
    "methods": [
      {
        "name": "Logger",
        "visibility": "public",
        "static": false,
        "lineNumber": 36,
        "memberOf": "",
        "doclet": "/**\n * Instantiates a new Logger.\n * @class Logger\n * @constructor\n * @public\n */",
        "description": "\n Instantiates a new Logger.\n",
        "return": "",
        "classDeclarationFlag": true,
        "line": "function Logger() {",
        "originalJsDocDescription": {
          "class": {
            "tag": "class",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "Logger"
          },
          "constructor": {
            "tag": "constructor",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "public": {
            "tag": "public",
            "line": 5,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "\n"
          }
        }
      },
      {
        "name": "implementLog",
        "visibility": "public",
        "static": false,
        "lineNumber": 50,
        "memberOf": "this",
        "doclet": "/**\n * Call the logger implementation.\n * @memberOf {Logger}\n * @protected\n * @param {Number} logLevel  \n * @param {String} message\n */",
        "args": [
          "logLevel",
          "message"
        ],
        "description": "\n Call the logger implementation.\n",
        "classDeclarationFlag": false,
        "line": "this.implementLog = function (logLevel, message) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "protected": {
            "tag": "protected",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 5,
              "lastLine": 5,
              "textStartsOnSameLine": true,
              "text": "{Number} logLevel"
            },
            {
              "tag": "param",
              "line": 6,
              "lastLine": -1,
              "textStartsOnSameLine": true,
              "text": "{String} message\n"
            }
          ]
        }
      },
      {
        "name": "trace",
        "visibility": "public",
        "static": false,
        "lineNumber": 134,
        "memberOf": "Logger.prototype",
        "doclet": "/**\n * Trace.\n * @memberOf {Logger}\n * @method trace\n * @public\n * @param msg\n */",
        "args": [
          "msg"
        ],
        "description": "\n Trace.\n",
        "classDeclarationFlag": false,
        "line": "Logger.prototype.trace = function (msg) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "method": {
            "tag": "method",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "trace"
          },
          "public": {
            "tag": "public",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 6,
              "lastLine": -1,
              "textStartsOnSameLine": true,
              "text": "msg\n"
            }
          ]
        }
      },
      {
        "name": "debug",
        "visibility": "public",
        "static": false,
        "lineNumber": 145,
        "memberOf": "Logger.prototype",
        "doclet": "/**\n * Debug.\n * @memberOf {Logger}\n * @method debug\n * @public\n * @param msg\n */",
        "args": [
          "msg"
        ],
        "description": "\n Debug.\n",
        "classDeclarationFlag": false,
        "line": "Logger.prototype.debug = function (msg) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "method": {
            "tag": "method",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "debug"
          },
          "public": {
            "tag": "public",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 6,
              "lastLine": -1,
              "textStartsOnSameLine": true,
              "text": "msg\n"
            }
          ]
        }
      },
      {
        "name": "info",
        "visibility": "public",
        "static": false,
        "lineNumber": 156,
        "memberOf": "Logger.prototype",
        "doclet": "/**\n * Info.\n * @memberOf {Logger}\n * @method info\n * @public\n * @param msg\n */",
        "args": [
          "msg"
        ],
        "description": "\n Info.\n",
        "classDeclarationFlag": false,
        "line": "Logger.prototype.info = function (msg) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "method": {
            "tag": "method",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "info"
          },
          "public": {
            "tag": "public",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 6,
              "lastLine": -1,
              "textStartsOnSameLine": true,
              "text": "msg\n"
            }
          ]
        }
      },
      {
        "name": "warn",
        "visibility": "public",
        "static": false,
        "lineNumber": 167,
        "memberOf": "Logger.prototype",
        "doclet": "/**\n * Warn.\n * @memberOf {Logger}\n * @method warn\n * @public\n * @param msg\n */",
        "args": [
          "msg"
        ],
        "description": "\n Warn.\n",
        "classDeclarationFlag": false,
        "line": "Logger.prototype.warn = function (msg) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "method": {
            "tag": "method",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "warn"
          },
          "public": {
            "tag": "public",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 6,
              "lastLine": -1,
              "textStartsOnSameLine": true,
              "text": "msg\n"
            }
          ]
        }
      },
      {
        "name": "error",
        "visibility": "public",
        "static": false,
        "lineNumber": 178,
        "memberOf": "Logger.prototype",
        "doclet": "/**\n * Error.\n * @memberOf {Logger}\n * @method error\n * @public\n * @param msg\n */",
        "args": [
          "msg"
        ],
        "description": "\n Error.\n",
        "classDeclarationFlag": false,
        "line": "Logger.prototype.error = function (msg) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "method": {
            "tag": "method",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "error"
          },
          "public": {
            "tag": "public",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 6,
              "lastLine": -1,
              "textStartsOnSameLine": true,
              "text": "msg\n"
            }
          ]
        }
      },
      {
        "name": "DefaultLogger",
        "visibility": "public",
        "static": false,
        "lineNumber": 188,
        "memberOf": "",
        "doclet": "/**\n * Instantiates a new DefaultLogger.\n *  This class is built into the Logger class as the default implementation of Logger.\n * @constructor\n * @protected\n */",
        "description": "\n Instantiates a new DefaultLogger.\n This class is built into the Logger class as the default implementation of Logger.\n",
        "classDeclarationFlag": false,
        "line": "function DefaultLogger() {}",
        "originalJsDocDescription": {
          "constructor": {
            "tag": "constructor",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "protected": {
            "tag": "protected",
            "line": 5,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "\n"
          }
        }
      },
      {
        "name": "log",
        "visibility": "public",
        "static": false,
        "lineNumber": 200,
        "memberOf": "DefaultLogger.prototype",
        "doclet": "/**\n * Write log to JavaScript console.\n *  Handle contingencies.\n * @memberOf {DefaultLogger}\n * @method implementLog\n * @public\n * @param {String} msg  \n * @param {String} level  \n * @return {String} the formatted message.\n */",
        "args": [
          "msg",
          "level"
        ],
        "description": "\n Write log to JavaScript console.\n Handle contingencies.\n",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "DefaultLogger.prototype.log = function (msg, level) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "{DefaultLogger}"
          },
          "method": {
            "tag": "method",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": "implementLog"
          },
          "public": {
            "tag": "public",
            "line": 6,
            "lastLine": 6,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 7,
              "lastLine": 7,
              "textStartsOnSameLine": true,
              "text": "msg {String}"
            },
            {
              "tag": "param",
              "line": 8,
              "lastLine": 8,
              "textStartsOnSameLine": true,
              "text": "level {String}"
            }
          ],
          "return": {
            "tag": "return",
            "line": 9,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "{String} the formatted message.\n"
          }
        }
      },
      {
        "name": "getInstance",
        "visibility": "public",
        "static": false,
        "lineNumber": 244,
        "memberOf": "",
        "doclet": "/**\n * Get instance.\n * @memberOf {Logger}\n * @method getInstance\n * @private\n * @return {Logger}\n */",
        "description": "\n Get instance.\n",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function getInstance() {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "method": {
            "tag": "method",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "getInstance"
          },
          "private": {
            "tag": "private",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "return": {
            "tag": "return",
            "line": 6,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "{Logger}\n"
          }
        }
      },
      {
        "name": "getLevelName",
        "visibility": "public",
        "static": false,
        "lineNumber": 268,
        "memberOf": "",
        "doclet": "/**\n * Get level name.\n * @memberOf {Logger}\n * @method getLevelName\n * @private\n * @param levelNum  \n * @return String level name.\n */",
        "args": [
          "levelNum"
        ],
        "description": "\n Get level name.\n",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function getLevelName(levelNum) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "method": {
            "tag": "method",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "getLevelName"
          },
          "private": {
            "tag": "private",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 6,
              "lastLine": 6,
              "textStartsOnSameLine": true,
              "text": "levelNum"
            }
          ],
          "return": {
            "tag": "return",
            "line": 7,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "String level name.\n"
          }
        }
      },
      {
        "name": "trim",
        "visibility": "public",
        "static": false,
        "lineNumber": 285,
        "memberOf": "",
        "doclet": "/**\n * trim.\n * @memberOf {Logger}\n * @method trim\n * @private\n * @param {String} input  \n * @return {String} trimmed text.\n */",
        "args": [
          "input"
        ],
        "description": "\n trim.\n",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function trim(input) {",
        "originalJsDocDescription": {
          "memberOf": {
            "tag": "memberOf",
            "line": 3,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "{Logger}"
          },
          "method": {
            "tag": "method",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "trim"
          },
          "private": {
            "tag": "private",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "params": [
            {
              "tag": "param",
              "line": 6,
              "lastLine": 6,
              "textStartsOnSameLine": true,
              "text": "{String} input"
            }
          ],
          "return": {
            "tag": "return",
            "line": 7,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "{String} trimmed text.\n"
          }
        }
      }
    ],
    "is_module": true,
    "uses_alert": false,
    "uses_y_log": false,
    "requiresRaw": [],
    "basePath": "/Users/btremblay/jsdoc-prep/test-source/core",
    "fileName": "logger.js",
    "strict": false,
    "min": false,
    "main": 0
  },
  "testStubs": "\n",
  "couldParseProcessedSource": true,
  "corrupted": false,
  "numberOfLines": 280
}