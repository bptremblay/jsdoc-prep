{
  "results": {
    "amdProc": {
      "requires": [],
      "moduleName": "fake-yui",
      "AMD": true,
      "webPath": "/core",
      "convertedName": "fake_yui",
      "min": false,
      "main": 0,
      "uses_$": false,
      "uses_Y": false,
      "uses_alert": false,
      "strict": false
    }
  },
  "errors": {
    "JSONFilter": [],
    "jsBeautifyProc": [],
    "jsDoccerProc": [
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'YUI'.",
        "code": "wfJD",
        "evidence": "window.YUI = function () {",
        "line": 3,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'YUI'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'YUIImpl'.",
        "code": "wfJD",
        "evidence": "function YUIImpl() {",
        "line": 4,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'YUIImpl'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'add'.",
        "code": "wfJD",
        "evidence": "add: function (moduleName, handler) {",
        "line": 11,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'add'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'use'.",
        "code": "wfJD",
        "evidence": "use: function (moduleName) {",
        "line": 16,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'use'."
      },
      {
        "id": "(error)",
        "raw": "No jsDoc Comments for method 'getInstance'.",
        "code": "wfJD",
        "evidence": "function getInstance() {",
        "line": 21,
        "character": -1,
        "scope": "(main)",
        "a": "",
        "reason": "No jsDoc Comments for method 'getInstance'."
      }
    ]
  },
  "outputDirectory": "test-output",
  "path": "test-source/core/fake-yui.js",
  "folderPath": "test-source/core",
  "fileName": "fake-yui.js",
  "modulePaths": {
    "blue": "blue/js"
  },
  "packagePath": "/core",
  "webPath": "/core",
  "libFile": false,
  "min": false,
  "realName": "fake-yui",
  "name": "fake_yui",
  "camelName": "FakeYui",
  "processedFilePath": "test-output/core/fake-yui.js",
  "mappedModuleName": "core/fake-yui",
  "couldParseOriginalSource": true,
  "namedConstructors": {},
  "checkForRequiresMismatch": true,
  "preprocessed": true,
  "moduleName": "core/fake-yui",
  "jsDoccerProcData": {
    "lines": 29,
    "requires": [],
    "className": "n/a",
    "packagePath": "",
    "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/core",
    "uses_Y": false,
    "no_lib": true,
    "inferencedClassName": "n/a",
    "uses_$": false,
    "chars": 833,
    "uses_YUI": false,
    "fields": [],
    "moduleName": "./fake-yui",
    "uses_console_log": false,
    "uses_backbone": false,
    "classes": {},
    "methods": [
      {
        "name": "YUI",
        "visibility": "public",
        "static": false,
        "lineNumber": 3,
        "memberOf": "window",
        "doclet": "/**\n * Y u i.\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "window.YUI = function () {",
        "originalJsDocDescription": {}
      },
      {
        "name": "YUIImpl",
        "visibility": "public",
        "static": false,
        "lineNumber": 4,
        "memberOf": "",
        "doclet": "/**\n * Y u i impl.\n */",
        "description": "",
        "classDeclarationFlag": false,
        "line": "function YUIImpl() {",
        "originalJsDocDescription": {}
      },
      {
        "name": "add",
        "visibility": "public",
        "static": false,
        "lineNumber": 11,
        "memberOf": "",
        "doclet": "/**\n * Add.\n * @param moduleName\n * @param handler\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "moduleName",
          "handler"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "add: function (moduleName, handler) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "use",
        "visibility": "public",
        "static": false,
        "lineNumber": 16,
        "memberOf": "",
        "doclet": "/**\n * Use.\n * @param moduleName\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "args": [
          "moduleName"
        ],
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "use: function (moduleName) {",
        "originalJsDocDescription": {}
      },
      {
        "name": "getInstance",
        "visibility": "public",
        "static": false,
        "lineNumber": 21,
        "memberOf": "",
        "doclet": "/**\n * Get instance.\n * @todo Please describe the return type of this method.\n * @return {object} ??\n */",
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "function getInstance() {",
        "originalJsDocDescription": {}
      }
    ],
    "is_module": true,
    "uses_alert": false,
    "uses_y_log": false,
    "requiresRaw": [],
    "basePath": "/Users/btremblay/jsdoc-prep/test-source/core",
    "fileName": "fake-yui.js",
    "strict": false,
    "min": false,
    "main": 0
  },
  "possibleClassname": "",
  "testStubs": "\n",
  "couldParseProcessedSource": true,
  "corrupted": false,
  "numberOfLines": 54
}