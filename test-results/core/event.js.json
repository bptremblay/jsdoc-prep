{
  "results": {
    "amdProc": {
      "requires": [],
      "moduleName": "event",
      "AMD": true,
      "webPath": "/core",
      "convertedName": "event",
      "min": false,
      "main": 0,
      "uses_$": false,
      "uses_Y": false,
      "uses_alert": false,
      "strict": false
    }
  },
  "errors": {
    "JSONFilter": [],
    "jsBeautifyProc": [],
    "jsDoccerProc": []
  },
  "outputDirectory": "test-output",
  "path": "test-source/core/event.js",
  "folderPath": "test-source/core",
  "fileName": "event.js",
  "modulePaths": {
    "blue": "blue/js"
  },
  "packagePath": "/core",
  "webPath": "/core",
  "libFile": false,
  "min": false,
  "realName": "event",
  "name": "event",
  "camelName": "Event",
  "processedFilePath": "test-output/core/event.js",
  "mappedModuleName": "core/event",
  "couldParseOriginalSource": true,
  "namedConstructors": {
    "core/event~Event": {
      "todos": [],
      "params": [
        "eventSource",
        "verb",
        "data"
      ],
      "memberOf": "",
      "returnType": "",
      "ctor": true,
      "lineNumber": 10,
      "line": "function Event(eventSource, verb, data) {",
      "comment": 0,
      "range": [
        175,
        362
      ],
      "name": "Event",
      "commentBody": "/**\n   * @constructor\n   * @class Event\n   * \n   * @param {Object} eventSource\n   * @param {string} verb\n   * @param {Object} data\n   */",
      "oldComment": {
        "type": "Block",
        "value": "*\n   * @constructor\n   * @class Event\n   * \n   * @param {Object} eventSource\n   * @param {string} verb\n   * @param {Object} data\n   ",
        "range": [
          36,
          172
        ],
        "commentBody": "/**\n   * @constructor\n   * @class Event\n   * \n   * @param {Object} eventSource\n   * @param {string} verb\n   * @param {Object} data\n   */",
        "lineNumber": 2
      },
      "ctorType": "@constructor",
      "doclet": {
        "params": [
          {
            "tagName": "param",
            "name": "eventSource",
            "type": "{Object}",
            "description": " "
          },
          {
            "tagName": "param",
            "name": "verb",
            "type": "{String}",
            "description": " "
          },
          {
            "tagName": "param",
            "name": "data",
            "type": "{Object}",
            "description": ""
          }
        ],
        "tags": [
          {
            "tag": "constructor",
            "line": 1,
            "lastLine": 1,
            "textStartsOnSameLine": true,
            "text": ""
          },
          {
            "tag": "class",
            "line": 2,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "Event\n"
          },
          {
            "tag": "param",
            "line": 4,
            "lastLine": 4,
            "textStartsOnSameLine": true,
            "text": "{Object} eventSource"
          },
          {
            "tag": "param",
            "line": 5,
            "lastLine": 5,
            "textStartsOnSameLine": true,
            "text": "{string} verb"
          },
          {
            "tag": "param",
            "line": 6,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "{Object} data\n"
          }
        ],
        "requiresList": [],
        "moduleName": "event",
        "camelName": "Event",
        "freeText": "",
        "@constructor": "",
        "preamble": "",
        "constructor": "Event",
        "className": "Event",
        "nodeType": "CLASS"
      },
      "jsDoc": "/**\n * @constructor\n * @class Event\n * \n * @param {Object} eventSource  \n * @param {String} verb  \n * @param {Object} data\n */"
    }
  },
  "checkForRequiresMismatch": true,
  "preprocessed": true,
  "moduleName": "core/event",
  "jsDoccerProcData": {
    "lines": 27,
    "requires": [],
    "className": "n/a",
    "packagePath": "",
    "directoryPath": "/Users/btremblay/jsdoc-prep/test-source/core",
    "uses_Y": false,
    "no_lib": true,
    "inferencedClassName": "n/a",
    "uses_$": false,
    "chars": 578,
    "uses_YUI": false,
    "fields": [],
    "moduleName": "./event",
    "uses_console_log": false,
    "uses_backbone": false,
    "classes": {
      "Event": 273
    },
    "methods": [
      {
        "name": "Event",
        "visibility": "public",
        "static": false,
        "lineNumber": 10,
        "memberOf": "",
        "doclet": "/**\n * @constructor\n * @class Event\n * \n * @param {Object} eventSource  \n * @param {String} verb  \n * @param {Object} data\n */",
        "args": [
          "eventSource",
          "verb",
          "data"
        ],
        "description": "",
        "return": "",
        "classDeclarationFlag": true,
        "line": "function Event(eventSource, verb, data) {",
        "originalJsDocDescription": {
          "constructor": {
            "tag": "constructor",
            "line": 1,
            "lastLine": 1,
            "textStartsOnSameLine": true,
            "text": ""
          },
          "class": {
            "tag": "class",
            "line": 2,
            "lastLine": 3,
            "textStartsOnSameLine": true,
            "text": "Event\n"
          },
          "params": [
            {
              "tag": "param",
              "line": 4,
              "lastLine": 4,
              "textStartsOnSameLine": true,
              "text": "{Object} eventSource"
            },
            {
              "tag": "param",
              "line": 5,
              "lastLine": 5,
              "textStartsOnSameLine": true,
              "text": "{string} verb"
            },
            {
              "tag": "param",
              "line": 6,
              "lastLine": -1,
              "textStartsOnSameLine": true,
              "text": "{Object} data\n"
            }
          ]
        }
      },
      {
        "name": "toString",
        "visibility": "public",
        "static": false,
        "lineNumber": 19,
        "memberOf": "Event.prototype",
        "doclet": "/**\n * @return {string}\n */",
        "description": "",
        "return": "?",
        "classDeclarationFlag": false,
        "line": "Event.prototype.toString = function () {",
        "originalJsDocDescription": {
          "return": {
            "tag": "return",
            "line": 1,
            "lastLine": -1,
            "textStartsOnSameLine": true,
            "text": "{string}\n"
          }
        }
      }
    ],
    "is_module": true,
    "uses_alert": false,
    "uses_y_log": false,
    "requiresRaw": [],
    "basePath": "/Users/btremblay/jsdoc-prep/test-source/core",
    "fileName": "event.js",
    "strict": false,
    "min": false,
    "main": 0
  },
  "testStubs": "\n",
  "couldParseProcessedSource": true,
  "corrupted": false,
  "numberOfLines": 27
}