// Generated by CoffeeScript 1.10.0
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['jquery', 'underscore', 'backbone', 'template-engine', 'column-and-block-layout-editor-path/constants', 'text!column-and-block-layout-editor-path/templates/vspace-flyout.html', 'css!column-and-block-layout-editor-path/css/flyout.css', 'i18n!column-and-block-layout-editor-path/nls/column-and-block-layout-editor', 'galileo-lib/modules/services/usage-tracking'], function($, _, Backbone, Mustache, constants, template, css, i18n, usageTracking) {
  var SELECTORS, VspaceFlyoutView;
  SELECTORS = {
    galileo: '#galileo',
    checkbox: '#checkbox-vspace',
    doneButton: '.vspace-done'
  };
  VspaceFlyoutView = (function(superClass) {
    var obj;

    extend(VspaceFlyoutView, superClass);

    function VspaceFlyoutView() {
      this._toggleVspace = bind(this._toggleVspace, this);
      this._dismissFlyout = bind(this._dismissFlyout, this);
      this.hideFlyout = bind(this.hideFlyout, this);
      this.showFlyout = bind(this.showFlyout, this);
      return VspaceFlyoutView.__super__.constructor.apply(this, arguments);
    }

    VspaceFlyoutView.prototype.initialize = function(params) {
      this.layoutEditor = (params != null ? params.layoutEditor : void 0) || null;
      this.contentModel = (params != null ? params.contentModel : void 0) || null;
      return this.render();
    };

    VspaceFlyoutView.prototype.events = (
      obj = {},
      obj["click " + SELECTORS.doneButton] = 'hideFlyout',
      obj["change " + SELECTORS.checkbox] = '_toggleVspace',
      obj
    );

    VspaceFlyoutView.prototype.render = function() {
      var ref, vspace;
      vspace = ((ref = this.contentModel) != null ? ref.get('vspace') : void 0) || false;
      this.$el.html(Mustache.render(template, {
        i18n: i18n,
        hasVspace: vspace
      }));
      this._appendToDOM();
      this.hideFlyout();
      return this;
    };

    VspaceFlyoutView.prototype.showFlyout = function(event) {
      this.$el.show().width(200).position({
        my: 'left top',
        at: 'right top',
        of: event,
        collision: 'fit'
      });
      return $('body').on('mousedown.vspace', (function(_this) {
        return function(event) {
          return _this._dismissFlyout(event);
        };
      })(this));
    };

    VspaceFlyoutView.prototype.hideFlyout = function() {
      $('body').off('mousedown.vspace');
      return this.$el.hide();
    };

    VspaceFlyoutView.prototype._appendToDOM = function() {
      if ($(SELECTORS.galileo).length && !$.contains($(SELECTORS.galileo)[0], this.el)) {
        $(SELECTORS.galileo).append(this.$el);
        return this.delegateEvents();
      }
    };

    VspaceFlyoutView.prototype._eventTargetIsFlyout = function(event) {
      return $.contains(this.el, event.target);
    };

    VspaceFlyoutView.prototype._dismissFlyout = function(event) {
      if (!this._eventTargetIsFlyout(event)) {
        return this.hideFlyout();
      }
    };

    VspaceFlyoutView.prototype._toggleVspace = function(event) {
      var checked;
      checked = this.$el.find(SELECTORS.checkbox).prop('checked');
      this._trackUsage('g_right_click>image>padding_toggle', checked);
      return this.layoutEditor.trigger(constants.EVENTS.TOGGLE_CONTENT_VSPACE, this.contentModel);
    };

    VspaceFlyoutView.prototype._trackUsage = function(identifier, value) {
      var context, detail;
      detail = value === true ? 'on' : 'off';
      context = {
        actionIdentifier: identifier,
        blockTitle: 'g_Image',
        blockDetail: detail
      };
      return usageTracking.track('editor_action', context);
    };

    return VspaceFlyoutView;

  })(Backbone.View);
  return new VspaceFlyoutView();
});
