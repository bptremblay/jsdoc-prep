// Generated by CoffeeScript 1.10.0
define(['column-and-block-layout-editor-path/constants'], function(constants) {
  var BlockModelDispatcher;
  return BlockModelDispatcher = (function() {
    function BlockModelDispatcher(eventEmitter) {
      this.eventEmitter = eventEmitter;
    }

    BlockModelDispatcher.prototype.dispatch = function(content, type, dropAction) {
      var action;
      action = dropAction.action;
      switch (action) {
        case constants.DRAG_DROP.ACTIONS.INSERT_COLUMN:
          return this.eventEmitter.trigger(constants.EVENTS.INSERT_COLUMN, dropAction.columnId, content, type);
        case constants.DRAG_DROP.ACTIONS.INSERT_BLOCK:
          return this.eventEmitter.trigger(constants.EVENTS.INSERT_BLOCK, dropAction.columnId, dropAction.blockId, content, type);
        case constants.DRAG_DROP.ACTIONS.MOVE_COLUMN:
          return this.eventEmitter.trigger(constants.EVENTS.MOVE_COLUMN, dropAction.columnId, content, type);
        case constants.DRAG_DROP.ACTIONS.MOVE_BLOCK:
          return this.eventEmitter.trigger(constants.EVENTS.MOVE_BLOCK, dropAction.columnId, dropAction.blockId, content, type);
        case constants.DRAG_DROP.ACTIONS.REORDER_COLUMN:
          return this.eventEmitter.trigger(constants.EVENTS.REORDER_COLUMN, dropAction.columnId, content, type);
        case constants.DRAG_DROP.ACTIONS.REORDER_BLOCK:
          return this.eventEmitter.trigger(constants.EVENTS.REORDER_BLOCK, dropAction.columnId, dropAction.blockId, content, type);
      }
    };

    return BlockModelDispatcher;

  })();
});
